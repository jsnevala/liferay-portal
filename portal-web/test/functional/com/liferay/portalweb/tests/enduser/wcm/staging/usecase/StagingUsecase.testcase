@component-name = "portal-staging"
definition {
	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Staging";
	var siteName = "Site Name";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();

		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Sites"
		);

		Site.addBlankCP(siteName = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Sites"
		);

		Page.add(pageName = "Staging Test Page", siteName = "Site Name");

		Navigator.openSiteURL(siteName = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Publishing",
			panel = "Site Administration",
			portlet = "Staging"
		);

		Staging.activateStagingCP(siteName = "Site Name");
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			User.logoutAndLoginPG(
				userLoginEmailAddress = "test@liferay.com",
				userLoginFullName = "Test Test"
			);

			Role.tearDownCP();

			Site.tearDownCP();
		}
	}

	@priority = "5"
	test ContentCannotBeCreatedOnLive {
		ProductMenu.gotoSite(site = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Tags"
		);

		Staging.viewAddButtonDoesNotExist();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Categories"
		);

		Staging.viewAddButtonDoesNotExist();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoManageTemplates();

		Staging.viewAddButtonDoesNotExist();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoManageStructures();

		Staging.viewAddButtonDoesNotExist();
	}

	@priority = "5"
	test DeleteLivePage {
		property portal.acceptance = "true";

		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Sites"
		);

		Page.add(
			pageName = "Delete Live Page",
			pageStaging = "true",
			siteName = "Site Name"
		);

		Navigator.gotoStagedSitePage(
			pageName = "Staging Test Page",
			siteName = "Site Name"
		);

		Staging.gotoPublishToLive();

		Staging.publishToLive();

		Navigator.gotoSitePage(pageName = "Delete Live Page", siteName = "Site Name");

		Page.deletePG(pageName = "Delete Live Page");

		Navigator.gotoSitePage(pageName = "Staging Test Page", siteName = "Site Name");

		Page.viewNoPG(pageName = "Delete Live Page");
	}

	@priority = "4"
	test EditPublishTemplate {
		Navigator.gotoStagedSitePage(
			pageName = "Staging Test Page",
			siteName = "Site Name"
		);

		Portlet.addPG(portletName = "Blogs");

		Blogs.addEntry(
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs Entry Title"
		);

		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Sites"
		);

		Page.add(pageName = "Page Name 2", pageStaging = "true", siteName = "Site Name");

		Navigator.gotoStagedSitePage(pageName = "Page Name 2", siteName = "Site Name");

		Portlet.addPG(portletName = "Web Content Display");

		WebContent.addPGViaWCD(
			webContentContent = "WC WebContent Content",
			webContentTitle = "WC WebContent Title"
		);

		WebContent.viewPGViaWCD(webContentContent = "WC WebContent Content");

		SitePageNavigator.gotoPages(page = "Public Pages", site = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Publishing",
			panel = "Site Administration",
			portlet = "Staging"
		);

		Staging.addPublishTemplate(
			publishTemplateDescription = "Publish Template Description",
			publishTemplateName = "Publish Template Name"
		);

		Staging.configurePublishToLive(
			checkPageName = "Staging Test Page",
			uncheckContentNameList = "Blogs"
		);

		Staging.savePublishTemplate(
			publishTemplateDescription = "Publish Template Description",
			publishTemplateName = "Publish Template Name"
		);

		Navigator.gotoStagedSitePage(
			pageName = "Staging Test Page",
			siteName = "Site Name"
		);

		ProductMenu.gotoSite(site = "Site Name");

		Navigator.gotoStagedView();

		Staging.gotoPublishToLive();

		Staging.publishToLivePublishTemplate(
			publishTemplateName = "Publish Template Name",
			siteName = "Site Name"
		);

		Navigator.gotoSitePage(pageName = "Staging Test Page", siteName = "Site Name");

		Page.viewSpecificPG(pageNameList = "Staging Test Page");

		Page.viewNoPG(pageName = "Page Name 2");

		Portlet.viewPG(portletName = "Blogs");

		BlogsEntry.viewNoPG(entryTitle = "Blogs Entry Title");

		Portlet.viewNoSpecificPG(portletName = "Web Content Display");

		SitePageNavigator.gotoPages(page = "Public Pages", site = "Site Name");

		Navigator.gotoStagedView();

		ProductMenu.gotoPortlet(
			category = "Publishing",
			panel = "Site Administration",
			portlet = "Staging"
		);

		Staging.viewPublishTemplate(
			publishTemplateDescription = "Publish Template Description",
			publishTemplateName = "Publish Template Name"
		);

		Staging.editPublishTemplate(
			publishTemplateDescriptionEdit = "Publish Template Description Edit",
			publishTemplateName = "Publish Template Name",
			publishTemplateNameEdit = "Publish Template Name Edit"
		);

		Staging.configurePublishToLive(
			checkAllContent = "true",
			checkPageName = "Public Pages"
		);

		Staging.savePublishTemplate(
			publishTemplateDescription = "Publish Template Description Edit",
			publishTemplateName = "Publish Template Name Edit"
		);

		Staging.publishToLivePublishTemplate(
			publishTemplateName = "Publish Template Name",
			siteName = "Site Name"
		);

		Navigator.gotoSitePage(pageName = "Staging Test Page", siteName = "Site Name");

		Page.viewSpecificPG(pageNameList = "Staging Test Page");

		Portlet.viewPG(portletName = "Blogs");

		BlogsEntry.viewPG(
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs Entry Title"
		);

		Page.viewSpecificPG(pageNameList = "Page Name 2");

		Navigator.gotoSitePage(pageName = "Page Name 2", siteName = "Site Name");

		WebContent.viewPGViaWCD(webContentContent = "WC WebContent Content");
	}

	@priority = "5"
	test ImportLARsOnStagedSite {
		property portal.acceptance = "false";
		property testray.component.names = "Training";

		Navigator.gotoStagedSitePage(
			pageName = "Staging Test Page",
			siteName = "Site Name"
		);

		ProductMenu.gotoPortlet(
			category = "Publishing",
			panel = "Site Administration",
			portlet = "Import"
		);

		LAR.importSiteCP(
			larFileName = "HR_Home_Page_Content.lar",
			mirrorWithOverwriting = "true",
			uploadFrom = "dependencies"
		);

		Navigator.gotoStagedSitePage(
			pageName = "Staging Test Page",
			siteName = "Site Name"
		);

		Staging.gotoPublishToLive();

		Staging.publishToLive(publicationName = "Content Update");

		Navigator.gotoSitePage(pageName = "Home", siteName = "Site Name");

		AssertTextEquals(
			locator1 = "WCD#WEB_CONTENT_CONTENT",
			value1 = "Faculty Meet-and-Greet Brunch Events All faculty are invited to a Meet-and-Greet Brunch at Allen Caf√© 11:00 A.M. Saturday, June 13. This brunch is intended to introduce new faculty members and promote inter-departmental unity. Brunch will be catered by the Provincetown chapter of the NECI."
		);

		AssertTextEquals(
			locator1 = "WCD#WEB_CONTENT_CONTENT_2",
			value1 = "New Faculty and Staff Orientation Events Attention all new faculty and staff: Orientation will be held Monday, June 8 at 8:00 A.M. New faculty should meet in Rm. 221 and new staff should meet in Rm. 139 of Adams Hall. A full schedule of orientation will be emailed to you in the coming weeks."
		);

		AssertTextEquals(
			locator1 = "WCD#WEB_CONTENT_CONTENT_3",
			value1 = "Vaccinations and Physical Check-Ups Health Any members of faculty or staff planning to leave Earth are required to have up-to-date vaccinations. Please check with the Health Center on your status. In addition, each and every Earth departure requires a physical check-up. The Health Center is happy to give both vaccinations and physical check-ups free of charge."
		);

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		for (var webContentTitle : list "Meet and Greet,Orientation,Physicals") {
			WebContent.viewTitle(onLive = "true", webContentTitle = "${webContentTitle}");
		}

		Navigator.gotoStagedSitePage(
			pageName = "Staging Test Page",
			siteName = "Site Name"
		);

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		LAR.importPortlet(
			larFileName = "HR_WebContent.lar",
			uploadFrom = "dependencies"
		);

		Navigator.gotoStagedSitePage(pageName = "Home", siteName = "Site Name");

		Portlet.deletePG(portletName = "Activities");

		Portlet.deletePG(portletName = "Web Content Display");

		Portlet.deletePG(portletName = "Web Content Display");

		Portlet.deletePG(portletName = "Web Content Display");

		Navigator.gotoStagedSitePage(pageName = "Home", siteName = "Site Name");

		Portlet.viewNoSpecificPG(portletName = "Activities");

		Portlet.viewNoSpecificPG(portletName = "Web Content Display");

		Content.addPG(assetTitle = "Enrollment Features", pageName = "Home");

		Navigator.gotoStagedSitePage(pageName = "Home", siteName = "Site Name");

		Content.addPG(assetTitle = "The SPACE Family", pageName = "Home");

		Portlet.gotoPortletOptions(
			portletName = "Web Content Display",
			portletOption = "Look and Feel Configuration"
		);

		Portlet.selectApplicationDecorator(decorator = "Barebone");

		Navigator.gotoStagedSitePage(pageName = "Home", siteName = "Site Name");

		Portlet.viewApplicationDecorator(decorator = "Barebone");

		Staging.gotoPublishToLive();

		Staging.publishToLive();

		Navigator.gotoSitePage(pageName = "Home", siteName = "Site Name");

		Portlet.viewNoSpecificPG(portletName = "Activities");

		Portlet.viewApplicationDecorator(decorator = "Barebone");

		AssertTextEquals.assertPartialText(
			locator1 = "WCD#WEB_CONTENT_CONTENT_FIGCAPTION_BOTTOM",
			value1 = "You're a part of the S.P.A.C.E. family"
		);

		AssertTextEquals.assertPartialText(
			locator1 = "WCD#WEB_CONTENT_CONTENT_CARD_TITLE",
			value1 = "Faculty Meet-and-Greet Brunch"
		);

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		for (var webContentTitle : list "Meet and Greet,Orientation,Physicals,Enrollment Features,The SPACE Family") {
			WebContent.viewTitle(onLive = "true", webContentTitle = "${webContentTitle}");
		}
	}

	@priority = "4"
	test MoveToTheRecycleBinAndRestorePublishTemplate {
		Navigator.openSiteURL(siteName = "Site Name");

		Navigator.gotoStagedView();

		Pause(locator1 = "30000");

		ProductMenu.gotoPortlet(
			category = "Publishing",
			panel = "Site Administration",
			portlet = "Staging"
		);

		Staging.addPublishTemplate(
			publishTemplateDescription = "Publish Template Description",
			publishTemplateName = "Publish Template Name"
		);

		Staging.savePublishTemplate(
			publishTemplateDescription = "Publish Template Description",
			publishTemplateName = "Publish Template Name"
		);

		Navigator.openSiteURL(siteName = "Site Name");

		Navigator.gotoStagedView();

		ProductMenu.gotoPortlet(
			category = "Publishing",
			panel = "Site Administration",
			portlet = "Staging"
		);

		Staging.viewPublishTemplate(
			publishTemplateDescription = "Publish Template Description",
			publishTemplateName = "Publish Template Name"
		);

		Navigator.openSiteURL(siteName = "Site Name");

		Navigator.gotoStagedView();

		ProductMenu.gotoPortlet(
			category = "Publishing",
			panel = "Site Administration",
			portlet = "Staging"
		);

		Staging.moveToTheRecycleBinPublishTemplate(
			publishTemplateName = "Publish Template Name"
		);

		Navigator.openSiteURL(siteName = "Site Name");

		Navigator.gotoStagedView();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Recycle Bin"
		);

		RecycleBin.viewCP(
			assetName = "Publish Template Name",
			assetType = "Export Import Template",
			deleteUser = "Test Test"
		);

		RecycleBin.restoreCP(assetName = "Publish Template Name");

		Navigator.openSiteURL(siteName = "Site Name");

		Navigator.gotoStagedView();

		ProductMenu.gotoPortlet(
			category = "Publishing",
			panel = "Site Administration",
			portlet = "Staging"
		);

		Staging.viewPublishTemplate(
			publishTemplateDescription = "Publish Template Description",
			publishTemplateName = "Publish Template Name"
		);
	}

	@description = "This is a use case for LPS-44719."
	@priority = "4"
	test PublishMBWithoutSetup {
		Navigator.gotoStagedSitePage(
			pageName = "Staging Test Page",
			siteName = "Site Name"
		);

		Portlet.addPG(portletName = "Message Boards");

		Navigator.gotoStagedSitePage(
			pageName = "Staging Test Page",
			siteName = "Site Name"
		);

		Staging.gotoPublishToLive();

		Staging.publishToLive();

		Navigator.gotoStagedSitePage(
			pageName = "Staging Test Page",
			siteName = "Site Name"
		);

		MessageboardsThread.addPG(
			threadBody = "Message Boards Thread Body",
			threadSubject = "Message Boards Thread Subject"
		);

		Portlet.gotoPortletOptions(portletOption = "Look and Feel Configuration");

		Portlet.configureCustomTitleViaLookandfeelPG(portletName = "Message Boards");

		Navigator.gotoStagedSitePage(
			pageName = "Staging Test Page",
			siteName = "Site Name"
		);

		Portlet.viewSpecificPG(portletName = "Message Boards Custom");

		Staging.publishToLiveNowViaPortletPG(
			portletOption = "Staging",
			uncheckConfiguration = "Setup"
		);

		Navigator.gotoSitePage(pageName = "Staging Test Page", siteName = "Site Name");

		Portlet.viewNoSpecificPG(portletName = "Message Boards Custom");

		MessageboardsThread.gotoPG(
			lastPostUserName = "Test Test",
			postCount = "1",
			threadBody = "Message Boards Thread Body",
			threadSubject = "Message Boards Thread Subject"
		);

		MessageboardsThread.viewPG(
			threadBody = "Message Boards Thread Body",
			threadSubject = "Message Boards Thread Subject"
		);

		Navigator.gotoStagedSitePage(
			pageName = "Staging Test Page",
			siteName = "Site Name"
		);

		Staging.publishToLiveNowViaPortletPG(portletOption = "Staging");

		Navigator.gotoSitePage(pageName = "Staging Test Page", siteName = "Site Name");

		Portlet.viewSpecificPG(portletName = "Message Boards Custom");
	}

	@priority = "5"
	test PublishPortlet {
		property portal.acceptance = "true";
		property testray.component.names = "Training";

		ProductMenu.gotoSite(site = "Site Name");

		Navigator.gotoStagedView();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoAddCP();

		WebContent.addCP(
			webContentContent = "Web Content Content",
			webContentTitle = "Web Content Title"
		);

		PortletEntry.publish();

		Staging.publishToLiveNowViaPortletCP();
	}

	@priority = "3"
	test PublishSiteTeams {
		Navigator.gotoStagedSitePage(
			pageName = "Staging Test Page",
			siteName = "Site Name"
		);

		ProductMenu.gotoPortlet(
			category = "Members",
			panel = "Site Administration",
			portlet = "Site Teams"
		);

		Team.addCP(
			teamDescription = "Site Team Description",
			teamName = "Site Team Name"
		);

		ProductMenu.gotoPortlet(
			category = "Members",
			panel = "Site Administration",
			portlet = "Site Teams"
		);

		Staging.publishToLiveNowViaPortletCP();

		Navigator.openSiteURL(siteName = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Members",
			panel = "Site Administration",
			portlet = "Site Teams"
		);

		Team.viewCP(
			teamDescription = "Site Team Description",
			teamName = "Site Team Name"
		);
	}

	@priority = "4"
	test SearchPublishTemplate {
		Navigator.openSiteURL(siteName = "Site Name");

		Navigator.gotoStagedView();

		ProductMenu.gotoPortlet(
			category = "Publishing",
			panel = "Site Administration",
			portlet = "Staging"
		);

		Staging.addPublishTemplate(
			publishTemplateDescription = "Publish Template Description",
			publishTemplateName = "First Template"
		);

		Staging.savePublishTemplate(
			publishTemplateDescription = "Publish Template Description",
			publishTemplateName = "First Template"
		);

		ProductMenu.gotoPortlet(
			category = "Publishing",
			panel = "Site Administration",
			portlet = "Staging"
		);

		Staging.addPublishTemplate(
			publishTemplateDescription = "Publish Template Description 2",
			publishTemplateName = "Second Template"
		);

		Staging.savePublishTemplate(
			publishTemplateDescription = "Publish Template Description 2",
			publishTemplateName = "Second Template"
		);

		Navigator.gotoStagedSitePage(
			pageName = "Staging Test Page",
			siteName = "Site Name"
		);

		ProductMenu.gotoSite(site = "Site Name");

		Navigator.gotoStagedView();

		ProductMenu.gotoPortlet(
			category = "Publishing",
			panel = "Site Administration",
			portlet = "Staging"
		);

		Staging.searchPublishTemplate(searchTerm = "Second");
	}

	@description = "This is a use case for LPS-72949."
	@priority = "5"
	test StagingLocalLiveLockAndEditBlogsEntry {
		Navigator.gotoStagedSitePage(
			pageName = "Staging Test Page",
			siteName = "Site Name"
		);

		Portlet.addPG(portletName = "Blogs");

		Blogs.addEntry(
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs Entry Title"
		);

		Navigator.gotoStagedSitePage(
			pageName = "Staging Test Page",
			siteName = "Site Name"
		);

		Staging.gotoPublishToLive();

		Staging.publishToLive();

		Navigator.gotoSitePage(pageName = "Staging Test Page", siteName = "Site Name");

		BlogsEntry.editNoPermissionPG(
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs Entry Title"
		);

		Navigator.openSiteURL(siteName = "Site Name");

		Navigator.gotoStagedView();

		ProductMenu.gotoPortlet(
			category = "Publishing",
			panel = "Site Administration",
			portlet = "Staging"
		);

		Staging.editStagingConfiguration(isNotEditable = "Blogs");

		Navigator.gotoStagedSitePage(
			pageName = "Staging Test Page",
			siteName = "Site Name"
		);

		Blogs.editEntryPG(
			entryContent = "Blogs Entry Content",
			entryContentEdit = "Blogs Entry Content Edit",
			entryTitle = "Blogs Entry Title",
			entryTitleEdit = "Blogs Entry Title Edit"
		);

		Navigator.gotoStagedSitePage(
			pageName = "Staging Test Page",
			siteName = "Site Name"
		);

		Staging.gotoPublishToLive();

		Staging.publishToLive();

		Navigator.gotoSitePage(pageName = "Staging Test Page", siteName = "Site Name");

		BlogsNavigator.gotoEntryPG(
			entryContent = "Blogs Entry Content Edit",
			entryTitle = "Blogs Entry Title Edit"
		);

		BlogsEntry.viewEntry(
			entryContent = "Blogs Entry Content Edit",
			entryTitle = "Blogs Entry Title Edit"
		);
	}

	@description = "This is a use case for LPS-81196."
	@priority = "3"
	test StagingPublishAssetPublisherConfiguredCategoriesFilter {
		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Categories"
		);

		Vocabulary.addCP(vocabularyName = "Vocabulary Name");

		Category.addCP(
			categoryName = "Category Name 1",
			vocabularyName = "Vocabulary Name"
		);

		Navigator.gotoStagedSitePage(
			pageName = "Staging Test Page",
			siteName = "Site Name"
		);

		Portlet.addPG(portletName = "Asset Publisher");

		AssetPublisherPortlet.configureCategoriesFilterPG(
			categoryName = "Category Name 1",
			queryAndOperator = "All"
		);

		Navigator.gotoStagedSitePage(
			pageName = "Staging Test Page",
			siteName = "Site Name"
		);

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoAddCP();

		WebContent.addWithCategoryCP(
			categoryName = "Category Name 1",
			vocabularyName = "Vocabulary Name",
			webContentContent = "Web Content With One Category",
			webContentTitle = "Web Content Title 1"
		);

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Categories"
		);

		Category.addCP(
			categoryName = "Category Name 2",
			vocabularyName = "Vocabulary Name"
		);

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoAddCP();

		WebContent.addWithMultipleCategories(
			categoryNameList = "Category Name 1,Category Name 2",
			vocabularyName = "Vocabulary Name",
			webContentContent = "Web Content With Two Categories",
			webContentTitle = "Web Content Title 2"
		);

		Navigator.gotoStagedSitePage(
			pageName = "Staging Test Page",
			siteName = "Site Name"
		);

		AssetPublisherPortlet.viewAssetPG(
			assetContent = "Web Content With One Category",
			assetTitle = "Web Content Title 1"
		);

		AssetPublisherPortlet.viewAssetPG(
			assetContent = "Web Content With Two Categories",
			assetTitle = "Web Content Title 2"
		);

		AssetPublisherPortlet.editConfigureCategoriesFilterPG(
			categoryNames = "Category Name 1,Category Name 2",
			queryAndOperator = "All",
			queryContains = "Does not Contain"
		);

		Navigator.gotoStagedSitePage(
			pageName = "Staging Test Page",
			siteName = "Site Name"
		);

		AssetPublisherPortlet.viewAssetPG(
			assetContent = "Web Content With One Category",
			assetTitle = "Web Content Title 1"
		);

		AssetPublisherPortlet.viewAssetNotPresentPG(
			assetContent = "Web Content With Two Categories",
			assetTitle = "Web Content Title 2"
		);

		Staging.gotoPublishToLive();

		Staging.publishToLive();

		Navigator.gotoSitePage(pageName = "Staging Test Page", siteName = "Site Name");

		AssetPublisherPortlet.viewAssetPG(
			assetContent = "Web Content With One Category",
			assetTitle = "Web Content Title 1"
		);

		AssetPublisherPortlet.viewAssetNotPresentPG(
			assetContent = "Web Content With Two Categories",
			assetTitle = "Web Content Title 2"
		);

		Navigator.gotoStagedSitePage(
			pageName = "Staging Test Page",
			siteName = "Site Name"
		);

		Staging.gotoPublishToLive();

		Staging.publishToLive();
	}

	@description = "This is a use case for LPS-82689."
	@priority = "3"
	test StagingPublishAssetPublisherConfiguredTagsFilter {
		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Tags"
		);

		Tag.addCP(tagName = "tag1");

		Navigator.gotoStagedSitePage(
			pageName = "Staging Test Page",
			siteName = "Site Name"
		);

		Portlet.addPG(portletName = "Asset Publisher");

		AssetPublisherPortlet.configureTagsFilterPG(tagNameList = "tag1");

		Navigator.gotoStagedSitePage(
			pageName = "Staging Test Page",
			siteName = "Site Name"
		);

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoAddCP();

		WebContent.addWithTagCP(
			selectTag = "true",
			tagNameList = "tag1",
			webContentContent = "Web Content With Tag1",
			webContentTitle = "Web Content Title 1"
		);

		Navigator.gotoStagedSitePage(
			pageName = "Staging Test Page",
			siteName = "Site Name"
		);

		Staging.gotoPublishToLive();

		Staging.publishToLive();

		ProductMenu.gotoLiveSite();

		WebContent.viewPGViaAP(
			webContentContent = "Web Content With Tag1",
			webContentTitle = "Web Content Title 1"
		);

		Navigator.gotoStagedSitePage(
			pageName = "Staging Test Page",
			siteName = "Site Name"
		);

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Tags"
		);

		Tag.addCP(tagName = "tag2");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoAddCP();

		WebContent.addWithTagCP(
			selectTag = "true",
			tagNameList = "tag1,tag2",
			webContentContent = "Web Content With Tag1 and Tag2",
			webContentTitle = "Web Content Title 2"
		);

		Navigator.gotoStagedSitePage(
			pageName = "Staging Test Page",
			siteName = "Site Name"
		);

		AssetPublisherPortlet.configureTagsFilterPG(
			queryAndOperator = "All",
			tagNameList = "tag1,tag2"
		);

		Navigator.gotoStagedSitePage(
			pageName = "Staging Test Page",
			siteName = "Site Name"
		);

		Staging.gotoPublishToLive();

		Staging.publishToLive();

		ProductMenu.gotoLiveSite();

		WebContent.viewPGViaAP(
			webContentContent = "Web Content With Tag1 and Tag2",
			webContentTitle = "Web Content Title 2"
		);
	}

	@priority = "4"
	test StagingPublishChildSiteWithReference {
		Navigator.gotoStagedSitePage(
			pageName = "Staging Test Page",
			siteName = "Site Name"
		);

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoAddCP();

		WebContent.addCP(
			webContentContent = "Web Content Content",
			webContentTitle = "Web Content Title"
		);

		PortletEntry.publish();

		Navigator.gotoStagedSitePage(
			pageName = "Staging Test Page",
			siteName = "Site Name"
		);

		Staging.gotoPublishToLive();

		Staging.publishToLive();

		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Sites"
		);

		Site.addBlankCP(parentSiteName = "Site Name", siteName = "Child Site");

		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Sites"
		);

		Site.searchInputCP(siteName = "Child Site");

		Page.add(pageName = "Page 1", siteName = "Child Site");

		Portlet.addPG(portletName = "Web Content Display");

		WebContentDisplayPortlet.selectParentSiteWebContent(
			parentSiteName = "Site Name",
			webContentTitle = "Web Content Title"
		);

		ProductMenu.gotoPortlet(
			category = "Publishing",
			panel = "Site Administration",
			portlet = "Staging"
		);

		Staging.activateStagingCP(siteName = "Child Site");
	}

	@priority = "4"
	test StagingPublishOnlySelectedPage {
		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Sites"
		);

		Page.add(pageName = "Page 1", pageStaging = "true", siteName = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Sites"
		);

		Page.add(pageName = "Page 2", pageStaging = "true", siteName = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Sites"
		);

		Page.add(pageName = "Page 3", pageStaging = "true", siteName = "Site Name");

		ProductMenu.gotoSite(site = "Site Name");

		Navigator.gotoStagedView();

		Staging.gotoPublishToLive();

		Staging.configurePublishToLive(checkPageName = "Page 2");

		Staging.publishToLive();

		Navigator.gotoSitePage(pageName = "Staging Test Page", siteName = "Site Name");

		Page.viewSpecificPG(pageNameList = "Page 2");

		Page.viewNoPG(pageName = "Page 1");

		Page.viewNoPG(pageName = "Page 3");
	}

	@description = "This is a use case for LPS-77769."
	@priority = "5"
	test StagingPublishWCWithImageFieldEdit {
		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoManageStructures();

		WebContentStructures.addCP(
			structureDescription = "WC Structure Description",
			structureName = "WC Structure Name"
		);

		DynamicDataMapping.addField(
			field = "Image",
			fieldFieldLabel = "Image",
			fieldName = "Image"
		);

		WebContentStructures.saveCP(structureName = "WC Structure Name");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoManageTemplates();

		WebContentTemplates.addCP(
			templateDescription = "WC Template Description",
			templateLanguage = "ftl",
			templateName = "WC Template Name"
		);

		WebContentTemplates.addStructure(
			structureName = "WC Structure Name",
			templateFieldNames = "Image",
			templateLanguage = "ftl"
		);

		DDLDataDefinition.save();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoAddWithStructureCP(structureName = "WC Structure Name");

		WebContent.addWithStructureCP(
			structureName = "WC Structure Name",
			templateName = "WC Template Name",
			webContentImage = "Document_2.jpeg",
			webContentTitle = "WC WebContent Title"
		);

		PortletEntry.publish();

		Navigator.gotoStagedSitePage(
			pageName = "Staging Test Page",
			siteName = "Site Name"
		);

		Portlet.addPG(portletName = "Web Content Display");

		WebContentDisplayPortlet.selectWebContent(
			webContentTitle = "WC WebContent Title"
		);

		Navigator.gotoStagedSitePage(
			pageName = "Staging Test Page",
			siteName = "Site Name"
		);

		WebContentDisplayPortlet.viewImageFieldViaWCD();

		Staging.gotoPublishToLive();

		Staging.publishToLive();

		Navigator.gotoSitePage(pageName = "Staging Test Page", siteName = "Site Name");

		WebContentDisplayPortlet.viewImageFieldViaWCD();

		Navigator.gotoStagedSitePage(
			pageName = "Staging Test Page",
			siteName = "Site Name"
		);

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoEditCP(webContentTitle = "WC WebContent Title");

		FormFields.editTextAlt(
			fieldName = "Image",
			fieldValue = "Web Content Image Description"
		);

		PortletEntry.publish();

		Navigator.gotoStagedSitePage(
			pageName = "Staging Test Page",
			siteName = "Site Name"
		);

		Staging.gotoPublishToLive();

		Staging.publishToLive();

		Navigator.gotoSitePage(pageName = "Staging Test Page", siteName = "Site Name");

		AssertHTMLSourceTextPresent(value1 = "Web Content Image Description");

		AssertConsoleTextNotPresent(value1 = "DuplicateFileEntryException");
	}

	@priority = "4"
	test StagingWithPublishTemplateSmoke {
		Navigator.gotoStagedSitePage(
			pageName = "Staging Test Page",
			siteName = "Site Name"
		);

		Portlet.addPG(portletName = "Web Content Display");

		Navigator.gotoStagedSitePage(
			pageName = "Staging Test Page",
			siteName = "Site Name"
		);

		WebContent.addPGViaWCD(
			webContentContent = "Web Content Content",
			webContentTitle = "Web Content Title"
		);

		WebContent.viewPGViaWCD(webContentContent = "Web Content Content");

		Navigator.gotoStagedSitePage(
			pageName = "Staging Test Page",
			siteName = "Site Name"
		);

		ProductMenu.gotoPortlet(
			category = "Publishing",
			panel = "Site Administration",
			portlet = "Staging"
		);

		Staging.addPublishTemplate(
			publishTemplateDescription = "Publish Template Description",
			publishTemplateName = "Publish Template Name"
		);

		Staging.savePublishTemplate(
			publishTemplateDescription = "Publish Template Description",
			publishTemplateName = "Publish Template Name"
		);

		Navigator.gotoStagedSitePage(
			pageName = "Staging Test Page",
			siteName = "Site Name"
		);

		Staging.gotoPublishToLive();

		Staging.publishToLivePublishTemplate(
			publishTemplateName = "Publish Template Name",
			siteName = "Site Name"
		);

		Navigator.gotoSitePage(pageName = "Staging Test Page", siteName = "Site Name");

		WebContent.viewPGViaWCD(webContentContent = "Web Content Content");
	}

	@priority = "5"
	test TrashEntryReferencePublishing {
		property portal.acceptance = "true";
		property testray.component.names = "Training";

		Navigator.gotoStagedSitePage(
			pageName = "Staging Test Page",
			siteName = "Site Name"
		);

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Documents and Media"
		);

		DMDocument.addCP(
			dmDocumentDescription = "DM Document Description",
			dmDocumentFile = "Document_1.jpg",
			dmDocumentTitle = "DM Document Title"
		);

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoAddCP();

		WebContent.addWithDocumentCP(
			dmDocumentTitle = "DM Document Title",
			webContentContent = "Web Content Content",
			webContentTitle = "Web Content Title"
		);

		Navigator.gotoStagedSitePage(
			pageName = "Staging Test Page",
			siteName = "Site Name"
		);

		Portlet.addPG(portletName = "Web Content Display");

		Navigator.gotoStagedSitePage(
			pageName = "Staging Test Page",
			siteName = "Site Name"
		);

		WebContentDisplayPortlet.selectWebContent(
			portletName = "Web Content Display",
			webContentTitle = "Web Content Title"
		);

		Navigator.gotoStagedSitePage(
			pageName = "Staging Test Page",
			siteName = "Site Name"
		);

		Portlet.addPG(portletName = "Documents and Media");

		Navigator.gotoStagedSitePage(
			pageName = "Staging Test Page",
			siteName = "Site Name"
		);

		Staging.gotoPublishToLive();

		Staging.configurePublishToLive(
			checkContentNameList = "Documents and Media",
			contentDateRange = "All"
		);

		Staging.publishToLive();

		Navigator.gotoSitePage(pageName = "Staging Test Page", siteName = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Documents and Media"
		);

		DMDocument.deleteCP(dmDocumentTitle = "DM Document Title");

		Navigator.gotoStagedSitePage(
			pageName = "Staging Test Page",
			siteName = "Site Name"
		);

		Staging.gotoPublishToLive();

		Staging.configurePublishToLive(
			contentDateRange = "All",
			uncheckContentNameList = "Documents and Media",
			uncheckSubContent = "Web Content"
		);

		Staging.publishToLive(failureExpected = "true");

		Navigator.gotoStagedSitePage(
			pageName = "Staging Test Page",
			siteName = "Site Name"
		);

		Staging.gotoPublishToLive();

		Staging.configurePublishToLive(
			checkContentNameList = "Documents and Media",
			contentDateRange = "All"
		);

		Staging.publishToLive();

		Navigator.gotoSitePage(pageName = "Staging Test Page", siteName = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Documents and Media"
		);

		DMDocument.viewPG(dmDocumentTitle = "DM Document Title");
	}

	@description = "This is a use case for LPS-46117."
	@priority = "5"
	test ViewBlogsEntryWithImageViaItemSelector {
		Navigator.gotoStagedSitePage(
			pageName = "Staging Test Page",
			siteName = "Site Name"
		);

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Documents and Media"
		);

		DMDocument.addCP(
			dmDocumentDescription = "DM Document Description",
			dmDocumentFile = "Document_1.jpg",
			dmDocumentTitle = "Document_1.jpg"
		);

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Blogs"
		);

		Blogs.addEntryWithImageViaLinkBrowseFromDM(
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs Entry Title",
			imageFileName = "Document_1.jpg"
		);

		BlogsNavigator.gotoEntryCP(entryTitle = "Blogs Entry Title");

		AssertElementPresent(
			locator1 = "AlloyEditor#TEXT_FORMATTING_LINK_NAME",
			key_linkName = "Document_1.jpg"
		);
	}

	@priority = "4"
	test ViewPublishDMWithModifiedTitle {
		Navigator.gotoStagedSitePage(
			pageName = "Staging Test Page",
			siteName = "Site Name"
		);

		Portlet.addPG(portletName = "Asset Publisher");

		Pause(locator1 = "3000");

		DMDocument.addPGViaAP(
			dmDocumentDescription = "DM Document Description",
			dmDocumentFile = "Document_1.doc",
			dmDocumentTitle = "DM Document Title"
		);

		Navigator.gotoStagedSitePage(
			pageName = "Staging Test Page",
			siteName = "Site Name"
		);

		Staging.gotoPublishToLive();

		Staging.publishToLive();

		Navigator.gotoStagedSitePage(
			pageName = "Staging Test Page",
			siteName = "Site Name"
		);

		DMDocument.editPGViaAP(
			assetTitle = "DM Document Title",
			dmDocumentTitleEdit = "DM Document Title Edit"
		);

		Navigator.gotoStagedSitePage(
			pageName = "Staging Test Page",
			siteName = "Site Name"
		);

		Staging.gotoPublishToLive();

		Staging.publishToLive();

		Navigator.gotoSitePage(pageName = "Staging Test Page", siteName = "Site Name");

		DMDocument.viewPGViaAP(
			dmDocumentDescription = "DM Document Description",
			dmDocumentTitle = "DM Document Title Edit"
		);
	}
}