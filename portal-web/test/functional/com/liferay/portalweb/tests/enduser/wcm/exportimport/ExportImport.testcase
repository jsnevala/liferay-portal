@component-name = "portal-staging"
definition {
	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Export/Import Framework";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			User.logoutAndLoginPG(
				userLoginEmailAddress = "test@liferay.com",
				userLoginFullName = "Test Test"
			);

			Page.tearDownPG();

			Site.tearDownCP();
		}
	}

	@priority = "4"
	test EditExportTemplate {
		property test.name.skip.portal.instance = "ExportImport#EditExportTemplate";

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Blogs"
		);

		Blogs.addEntry(
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs Entry Title"
		);

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoAddCP();

		WebContent.addCP(
			webContentContent = "Web Content Content",
			webContentTitle = "Web Content Title"
		);

		PortletEntry.publish();

		WebContent.viewTitle(webContentTitle = "Web Content Title");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Publishing",
			panel = "Site Administration",
			portlet = "Export"
		);

		LAR.addExportTemplateCP(
			exportTemplateDescription = "Export Template Description",
			exportTemplateName = "Export Template Name"
		);

		LAR.configureExportSiteOptions(
			checkContentNameList = "Web Content",
			uncheckContentNameList = "Blogs"
		);

		LAR.saveExportTemplateCP(
			exportTemplateDescription = "Export Template Description",
			exportTemplateName = "Export Template Name"
		);

		LAR.exportExportTemplateCP(
			exportTemplateDescription = "Export Template Description",
			exportTemplateName = "Export Template Name",
			larFileName = "Export.Template"
		);

		Pause(locator1 = "3000");

		var larFileName = LAR.getLarFileName();

		LAR.downloadLar();

		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Sites"
		);

		Site.addBlankCP(siteName = "Site Name");

		LAR.importSiteCP(larFileName = "${larFileName}", siteName = "Site Name");

		ProductMenu.gotoSite(site = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoEditCP(webContentTitle = "Web Content Title");

		WebContent.viewCP(
			webContentContent = "Web Content Content",
			webContentTitle = "Web Content Title"
		);

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Publishing",
			panel = "Site Administration",
			portlet = "Export"
		);

		LexiconEntry.gotoHeaderMenuItem(menuItem = "Export Templates");

		LAR.editExportTemplateCP(
			exportTemplateDescriptionEdit = "Export Template Description Edit",
			exportTemplateName = "Export Template Name",
			exportTemplateNameEdit = "Export Template Name Edit"
		);

		LAR.configureExportSiteOptions(checkContentNameList = "Blogs");

		LAR.saveExportTemplateCP(
			exportTemplateDescription = "Export Template Description Edit",
			exportTemplateName = "Export Template Name Edit"
		);

		LAR.exportExportTemplateCP(
			exportTemplateDescription = "Export Template Description Edit",
			exportTemplateName = "Export Template Name Edit",
			larFileName = "Edited Export Template Name"
		);

		var larFileName = LAR.getLarFileName();

		AssertTextEquals.assertPartialText(
			locator1 = "SitePagesExport#CURRENT_AND_PREVIOUS_STATUS",
			value1 = "Successful"
		);

		LAR.downloadLar();

		Pause(locator1 = "5000");

		LAR.importSiteCP(larFileName = "${larFileName}", siteName = "Site Name");

		ProductMenu.gotoSite(site = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Blogs"
		);

		BlogsNavigator.gotoEntryCP(entryTitle = "Blogs Entry Title");

		BlogsEntry.viewEntry(
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs Entry Title"
		);
	}

	@priority = "5"
	test ExportImportDDLViaGlobal {
		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Sites"
		);

		Site.addBlankCP(siteName = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Sites"
		);

		Page.add(pageName = "Test Page", siteName = "Site Name");

		ProductMenu.gotoSite(site = "Global");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Dynamic Data Lists"
		);

		DDLDataDefinition.addCP(
			ddlDataDefinitionDescription = "DDL Definition Description",
			ddlDataDefinitionName = "DDL Definition"
		);

		DynamicDataMapping.addField(
			field = "Text",
			fieldFieldLabel = "Text Label",
			fieldName = "TextName"
		);

		DDLDataDefinition.save();

		ProductMenu.gotoSite(site = "Global");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Dynamic Data Lists"
		);

		DDLList.addCP(
			ddlListDescription = "DDL List Description",
			ddlListName = "DDL List"
		);

		DDLDataDefinition.selectCP(ddlDataDefinitionName = "DDL Definition");

		DDLDataDefinition.save();

		DDLRecord.addCP(
			ddlDataDefinitionName = "DDL Definition",
			ddlListName = "DDL List"
		);

		DDLRecord.populateFieldText(
			ddlRecordFieldData = "DDL Definition Record",
			field = "Text",
			fieldFieldLabel = "Text Label",
			fieldName = "TextName"
		);

		PortletEntry.publish();

		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Sites"
		);

		ProductMenu.gotoSite(site = "Global");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Dynamic Data Lists"
		);

		LAR.exportPortlet(larFileName = "DDL.portlet.lar", siteScopeName = "Global");

		ProductMenu.gotoSite(site = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Dynamic Data Lists"
		);

		LAR.importPortlet(larFileName = "DDL.portlet.lar", siteName = "Site Name");

		Navigator.openURL();

		ProductMenu.gotoSite(site = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Dynamic Data Lists"
		);

		DDLNavigator.gotoListRecords(ddlListName = "DDL List");

		DDLRecord.viewFirstFieldCP(
			ddlRecordFieldData = "DDL Definition Record",
			field = "Text",
			fieldFieldLabel = "Text Label"
		);
	}

	@priority = "3"
	test ExportImportPortletWithADT {
		property test.name.skip.portal.instance = "ExportImport#ExportImportPortletWithADT";

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Application Display Template"
		);

		ApplicationDisplayTemplates.addCP(
			adtFile = "adt_blogs_basic.ftl",
			adtType = "Blogs"
		);

		Page.add(pageName = "Test Page Name");

		Portlet.addPG(portletName = "Blogs");

		Blogs.addEntry(
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs Entry Title"
		);

		Navigator.gotoPage(pageName = "Test Page Name");

		ApplicationDisplayTemplates.selectPortletADT(templateName = "Blogs Test ADT");

		Navigator.gotoPage(pageName = "Test Page Name");

		var key_entryTitle = "Blogs Entry Title";

		AssertElementNotPresent(locator1 = "Link#EDIT");

		AssertElementNotPresent(locator1 = "Link#MOVE_TO_THE_RECYCLE_BIN");

		LAR.configureExportSiteCP();

		LAR.exportSuccess();

		var larFileName = LAR.getLarFileName();

		LAR.downloadLar();

		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Sites"
		);

		Site.addBlankCP(siteName = "Site Name");

		LAR.importSiteCP(larFileName = "${larFileName}", siteName = "Site Name");

		Navigator.gotoSitePage(pageName = "Test Page Name", siteName = "Site Name");

		var key_entryTitle = "Blogs Entry Title";

		AssertElementNotPresent(locator1 = "Link#EDIT");

		AssertElementNotPresent(locator1 = "Link#MOVE_TO_THE_RECYCLE_BIN");
	}

	@priority = "5"
	test ExportImportPrivatePage {
		property portal.acceptance = "true";
		property testray.component.names = "Training";

		Page.add(pageName = "Private Page", sitePagePrivacy = "Private");

		ProductMenu.gotoPortlet(
			category = "Publishing",
			panel = "Site Administration",
			portlet = "Export"
		);

		LAR.exportSiteCP(larFileName = "ExportPrivatePage", privateLayout = "true");

		var key_larFileName = "${larFileName}";

		AssertTextEquals.assertPartialText(
			locator1 = "SitePagesExport#CURRENT_AND_PREVIOUS_STATUS",
			value1 = "Successful"
		);

		var larFileName = LAR.getLarFileName();

		LAR.downloadLar();

		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Sites"
		);

		Site.addBlankCP(siteName = "Site Name");

		LAR.importSiteCP(
			larFileName = "${larFileName}",
			privateLayout = "true",
			siteName = "Site Name"
		);

		Navigator.gotoPage(pageName = "Private Page", sitePagePrivacy = "true");
	}

	@priority = "5"
	test ExportImportSampleLARPortlet {
		property portal.acceptance = "true";
		property portlet.plugins.includes = "sample-lar-portlet";

		Page.add(pageName = "Test Page Name");

		Navigator.gotoPage(pageName = "Test Page Name");

		Portlet.addPG(portletName = "Sample LAR");

		SampleLARPortlet.addSampleBooking();

		var bookingNumber = selenium.getText("//tbody[@class='table-data']/tr/td[2]");

		echo("Booking Number ${bookingNumber}");

		SampleLARPortlet.viewSampleBookingNumber(bookingNumber = "${bookingNumber}");

		LAR.exportPortlet(larFileName = "SampleLARPortlet.lar");

		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Sites"
		);

		Site.addBlankCP(siteName = "Test Site Name");

		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Sites"
		);

		Page.add(pageName = "Test Site Page", siteName = "Test Site Name");

		Navigator.gotoSitePage(pageName = "Test Site Page", siteName = "Test Site Name");

		Portlet.addPG(portletName = "Sample LAR");

		LAR.importPortlet(larFileName = "SampleLARPortlet.lar");

		Navigator.gotoSitePage(pageName = "Test Site Page", siteName = "Test Site Name");

		SampleLARPortlet.viewSampleBookingNumber(bookingNumber = "${bookingNumber}");
	}

	@priority = "5"
	test ExportImportSmoke {
		property portal.acceptance = "true";
		property testray.component.names = "Training";

		LAR.configureExportSiteCP();

		AssertClick(locator1 = "SitePagesExport#EXPORT_BUTTON", value1 = "Export");

		var key_larFileName = "${larFileName}";

		AssertTextEquals.assertPartialText(
			locator1 = "SitePagesExport#CURRENT_AND_PREVIOUS_STATUS",
			value1 = "Successful"
		);

		var larFileName = LAR.getLarFileName();

		LAR.downloadLar();

		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Sites"
		);

		Site.addBlankCP(siteName = "Site Name");

		LAR.importSiteCP(larFileName = "${larFileName}", siteName = "Site Name");
	}

	@priority = "5"
	test ExportImportValidation {
		property portal.acceptance = "true";
		property test.name.skip.portal.instance = "ExportImport#ExportImportValidation";
		property testray.component.names = "Training";

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Documents and Media"
		);

		DMDocument.addCP(
			dmDocumentDescription = "DM Document Description",
			dmDocumentFile = "Document_1.jpg",
			dmDocumentTitle = "DM Document Title"
		);

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Blogs"
		);

		Blogs.addEntry(
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs Entry Title"
		);

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Blogs"
		);

		BlogsNavigator.gotoEditCP(entryTitle = "Blogs Entry Title");

		Click.pauseClickAt(locator1 = "AlloyEditor#CONTENT_FIELD");

		Click(locator1 = "AlloyEditor#CONTENT_ADD_BUTTON");

		Click(locator1 = "AlloyEditor#CONTENT_ADD_MENUBAR_IMAGE");

		ItemSelector.selectDMImage(imageFileName = "DM Document Title");

		PortletEntry.publish();

		LAR.configureExportSiteCP(
			checkContentNameList = "Blogs",
			mainContent = "Blogs",
			uncheckContentNameList = "Documents and Media",
			uncheckSubContent = "Referenced Content"
		);

		LAR.exportSuccess();

		var larFileName = LAR.getLarFileName();

		LAR.downloadLar();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Documents and Media"
		);

		DMDocument.deleteCP(dmDocumentTitle = "DM Document Title");

		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Sites"
		);

		Site.addBlankCP(siteName = "Site Name");

		LAR.importSiteCP(
			importValidationMissingItem = "DM Document Title",
			larFileName = "${larFileName}",
			siteName = "Site Name"
		);
	}

	@priority = "4"
	test ExportImportWithExportTemplate {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Publishing",
			panel = "Site Administration",
			portlet = "Export"
		);

		LAR.addExportTemplateCP(
			exportTemplateDescription = "Export Template Description",
			exportTemplateName = "Export Template Name"
		);

		LAR.saveExportTemplateCP(
			exportTemplateDescription = "Export Template Description",
			exportTemplateName = "Export Template Name"
		);

		LAR.viewExportTemplateCP(
			exportTemplateDescription = "Export Template Description",
			exportTemplateName = "Export Template Name"
		);

		LAR.exportExportTemplateCP(
			exportTemplateDescription = "Export Template Description",
			exportTemplateName = "Export Template Name"
		);

		var larFileName = LAR.getLarFileName();

		LAR.downloadLar();

		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Sites"
		);

		Site.addBlankCP(siteName = "Site Name");

		LAR.importSiteCP(larFileName = "${larFileName}", siteName = "Site Name");
	}

	@priority = "5"
	test ImportCorruptedFile {
		property portal.acceptance = "true";

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Bookmarks"
		);

		AssertTextEquals(locator1 = "Portlet#HEADER", value1 = "Bookmarks");

		LAR.importPortlet(
			cannotImport = "true",
			larFileName = "bookmarks-corrupted.portlet.lar",
			uploadFrom = "dependencies"
		);
	}
}