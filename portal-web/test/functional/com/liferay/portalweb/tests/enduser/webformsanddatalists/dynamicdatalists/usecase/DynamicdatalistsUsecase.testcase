@component-name = "portal-web-forms-and-data-lists"
definition {
	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Dynamic Data Lists";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			User.firstLoginPG();

			DDLTemplate.tearDownTemplateCP();

			DDLTemplate.tearDownTemplateCP(
				ddlDataDefinitionName = "Data Definition Clone With Form Template"
			);

			DDLList.tearDownCP();

			DDLDataDefinition.tearDownCP();

			DMDocument.tearDownCP();

			User.tearDownCP();

			Page.tearDownPG();

			Site.tearDownCP();
		}
	}

	@priority = "3"
	test AddDataDefinitionWithoutANameAndAssertErrorMessage {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Dynamic Data Lists"
		);

		DDLDataDefinition.addCP(ddlDataDefinitionName = "");

		DynamicDataMapping.addField(
			field = "Text",
			fieldFieldLabel = "Text",
			fieldName = "Text"
		);

		DDLDataDefinition.clickSave();

		Alert.viewRequiredField();
	}

	@priority = "3"
	test AddListWithoutDataDefinitionAndAssertErrorMessage {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Dynamic Data Lists"
		);

		LexiconEntry.gotoAdd();

		Type.clickAtType(locator1 = "TextInput#NAME", value1 = "List Name");

		Button.clickSave();

		Alert.viewRequestFailedToComplete();

		AssertTextEquals.assertPartialText(
			locator1 = "Message#ERROR_2",
			value1 = "Please enter a valid definition."
		);
	}

	@description = "This is a use case for LPS-50557."
	@priority = "4"
	test AddListWithXSSWorkflowDefinition {
		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Control Panel",
			portlet = "Workflow Definition"
		);

		Workflow.uploadDefinition(
			workflowDefinitionFile = "workflow_definition_xss.xml",
			workflowDefinitionTitle = "New Uploaded Definition"
		);

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Dynamic Data Lists"
		);

		DDLList.addCP();

		DDLDataDefinition.selectCP(ddlDataDefinitionName = "To Do");

		DDLDataDefinition.save();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Dynamic Data Lists"
		);

		DDLList.viewCP();
	}

	@priority = "4"
	test AddRecord {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Dynamic Data Lists"
		);

		DDLDataDefinition.addCP(
			ddlDataDefinitionDescription = "DDL Definition Description",
			ddlDataDefinitionName = "DDL Definition"
		);

		DynamicDataMapping.addField(
			field = "Text",
			fieldFieldLabel = "Text Label",
			fieldName = "TextName"
		);

		DDLDataDefinition.save();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Dynamic Data Lists"
		);

		DDLList.addCP(
			ddlListDescription = "DDL List Description",
			ddlListName = "DDL List"
		);

		DDLDataDefinition.selectCP(ddlDataDefinitionName = "DDL Definition");

		DDLDataDefinition.save();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Dynamic Data Lists"
		);

		DDLRecord.addCP(
			ddlDataDefinitionName = "DDL Definition",
			ddlListName = "DDL List"
		);

		DDLRecord.populateFieldText(
			ddlRecordFieldData = "Record Text",
			fieldFieldLabel = "Text Label",
			fieldName = "TextName"
		);

		PortletEntry.publish();

		Page.add(pageName = "Dynamic Data Lists Display Page");

		Navigator.gotoPage(pageName = "Dynamic Data Lists Display Page");

		Portlet.addPG(portletName = "Dynamic Data Lists Display");

		Navigator.gotoPage(pageName = "Dynamic Data Lists Display Page");

		DDLList.selectViaDDLDisplayPG(ddlListName = "DDL List");

		Navigator.gotoPage(pageName = "Dynamic Data Lists Display Page");

		DDLRecord.addViaDDLDisplayPG(ddlDataDefinitionName = "DDL Definition");

		DDLRecord.populateFieldText(
			ddlRecordFieldData = "Record Text",
			fieldFieldLabel = "Text Label",
			fieldName = "TextName"
		);

		PortletEntry.publish();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Dynamic Data Lists"
		);

		DDLNavigator.gotoListRecords(ddlListName = "DDL List");

		DDLRecord.viewFirstFieldCP(
			ddlRecordFieldData = "Record Text",
			field = "Text",
			fieldFieldLabel = "Text Label",
			fieldName = "TextName"
		);
	}

	@description = "This is a use case for LPS-51513."
	@priority = "3"
	test AddRecordBlankDateField {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Dynamic Data Lists"
		);

		DDLDataDefinition.addCP(ddlDataDefinitionName = "Data Definition");

		DynamicDataMapping.addField(
			field = "Date",
			fieldFieldLabel = "Date",
			fieldName = "Date"
		);

		DDLDataDefinition.save();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Dynamic Data Lists"
		);

		DDLDataDefinition.viewCP(ddlDataDefinitionName = "Data Definition");

		DynamicDataMapping.viewField(fieldFieldLabel = "Date", fieldName = "Date");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Dynamic Data Lists"
		);

		DDLList.addCP(ddlListName = "List Name");

		DDLDataDefinition.selectCP(ddlDataDefinitionName = "Data Definition");

		DDLDataDefinition.save();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Dynamic Data Lists"
		);

		DDLRecord.addCP(
			ddlDataDefinitionName = "Data Definition",
			ddlListName = "List Name"
		);

		DDLRecord.populateFieldDate(
			ddlRecordFieldData = "04/01/2017",
			fieldName = "Date"
		);

		PortletEntry.publish();

		DDLRecord.viewFieldCP(ddlRecordFieldData = "4/1/17", fieldFieldLabel = "Date");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Dynamic Data Lists"
		);

		DDLRecord.addCP(
			ddlDataDefinitionName = "Data Definition",
			ddlListName = "List Name"
		);

		DDLRecord.populateFieldDate(ddlRecordFieldData = "", fieldName = "Date");

		PortletEntry.publish();

		DDLRecord.viewFieldCP(ddlRecordFieldData = "4/1/17", fieldFieldLabel = "Date");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Dynamic Data Lists"
		);

		DDLNavigator.gotoListRecords(ddlListName = "List Name");

		DDLRecord.viewSecondFieldCP(ddlRecordFieldData = "", fieldFieldLabel = "Date");
	}

	@description = "This is a use case for LPS-66229."
	@priority = "3"
	test AddRecordWithBlankDocumentsAndMediaField {
		Navigator.openURL();

		Page.add(pageName = "DDL Page");

		Navigator.gotoPage(pageName = "DDL Page");

		Portlet.addPG(pageName = "DDL Page", portletName = "Dynamic Data Lists Display");

		DDLList.addViaDDLDisplayPG();

		DDLDataDefinition.addViaDDLDisplayPG();

		DynamicDataMapping.addField(
			field = "Documents and Media",
			fieldFieldLabel = "Documents and Media",
			fieldName = "DocumentsAndMedia"
		);

		DDLDataDefinition.saveViaDDLDisplayPG();

		DDLDataDefinition.selectViaDDLDisplayPG();

		DDLList.saveViaDDLDisplayPG();

		Navigator.gotoPage(pageName = "DDL Page");

		DDLRecord.addViaDDLDisplayPG();

		PortletEntry.publish();

		Navigator.gotoPage(pageName = "DDL Page");

		DDLRecord.viewViaDDLDisplayTable(
			ddlRecordFieldData = "",
			fieldFieldLabel = "Documents and Media"
		);
	}

	@description = "This is a use case for LPS-66229."
	@priority = "3"
	test AddRecordWithBlankLinkToPageField {
		Navigator.openURL();

		Page.add(pageName = "DDL Page");

		Navigator.gotoPage(pageName = "DDL Page");

		Portlet.addPG(pageName = "DDL Page", portletName = "Dynamic Data Lists Display");

		DDLList.addViaDDLDisplayPG();

		DDLDataDefinition.addViaDDLDisplayPG();

		DynamicDataMapping.addField(
			field = "Link to Page",
			fieldFieldLabel = "Link to Page",
			fieldName = "LinkToPage"
		);

		DDLDataDefinition.saveViaDDLDisplayPG();

		DDLDataDefinition.selectViaDDLDisplayPG();

		DDLList.saveViaDDLDisplayPG();

		Navigator.gotoPage(pageName = "DDL Page");

		DDLRecord.addViaDDLDisplayPG();

		PortletEntry.publish();

		Navigator.gotoPage(pageName = "DDL Page");

		DDLRecord.viewViaDDLDisplayTable(
			ddlRecordFieldData = "",
			fieldFieldLabel = "Link to Page"
		);
	}

	@description = "This is a use case for LPS-66229."
	@priority = "3"
	test AddRecordWithBlankWebContentField {
		Navigator.openURL();

		Page.add(pageName = "DDL Page");

		Navigator.gotoPage(pageName = "DDL Page");

		Portlet.addPG(pageName = "DDL Page", portletName = "Dynamic Data Lists Display");

		DDLList.addViaDDLDisplayPG();

		DDLDataDefinition.addViaDDLDisplayPG();

		DynamicDataMapping.addField(
			field = "Web Content",
			fieldFieldLabel = "Web Content",
			fieldName = "WebContent"
		);

		DDLDataDefinition.saveViaDDLDisplayPG();

		DDLDataDefinition.selectViaDDLDisplayPG();

		DDLList.saveViaDDLDisplayPG();

		Navigator.gotoPage(pageName = "DDL Page");

		DDLRecord.addViaDDLDisplayPG();

		PortletEntry.publish();

		Navigator.gotoPage(pageName = "DDL Page");

		DDLRecord.viewViaDDLDisplayTable(
			ddlRecordFieldData = "",
			fieldFieldLabel = "Web Content"
		);
	}

	@description = "This is a use case for LPS-66439."
	@priority = "5"
	test AddRecordWithPopulatedWebContentField {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoAddCP();

		WebContent.addCP(
			webContentContent = "WC WebContent Content",
			webContentTitle = "WC WebContent Title"
		);

		PortletEntry.publish();

		Page.add(pageName = "DDL Page");

		Navigator.gotoPage(pageName = "DDL Page");

		Portlet.addPG(pageName = "DDL Page", portletName = "Dynamic Data Lists Display");

		DDLList.addViaDDLDisplayPG();

		DDLDataDefinition.addViaDDLDisplayPG();

		DynamicDataMapping.addField(
			field = "Web Content",
			fieldFieldLabel = "Web Content",
			fieldName = "WebContent"
		);

		DDLDataDefinition.saveViaDDLDisplayPG();

		DDLDataDefinition.selectViaDDLDisplayPG();

		DDLList.saveViaDDLDisplayPG();

		Navigator.gotoPage(pageName = "DDL Page");

		DDLRecord.addViaDDLDisplayPG();

		DDLRecord.populateFieldWebContentChooseFromWebContentLibrary(
			fieldName = "WebContent",
			webContentTitle = "WC WebContent Title"
		);

		PortletEntry.publish();

		Navigator.gotoPage(pageName = "DDL Page");

		DDLRecord.viewViaDDLDisplayPG(
			ddlRecordFieldData = "WC WebContent Title",
			fieldFieldLabel = "Web Content"
		);
	}

	@description = "This is a use case for LPS-65069."
	@priority = "5"
	test AddRecordWithRepeatableTextField {
		property portal.acceptance = "true";

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Dynamic Data Lists"
		);

		DDLDataDefinition.addCP();

		DynamicDataMapping.addField(
			field = "Text",
			fieldFieldLabel = "Text",
			fieldName = "Text"
		);

		DynamicDataMapping.editFieldRepeatable(fieldFieldLabel = "Text");

		DDLDataDefinition.save();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Dynamic Data Lists"
		);

		DDLList.addCP();

		DDLDataDefinition.selectCP();

		DDLDataDefinition.save();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Dynamic Data Lists"
		);

		DDLRecord.addCP();

		DDLRecord.addRepeatableField(fieldName = "Text");

		DDLRecord.populateFieldText(ddlRecordFieldData = "Content", fieldName = "Text");

		DDLRecord.viewTextFieldRepeated(
			ddlRecordFieldData1 = "Content",
			ddlRecordFieldData2 = "Content 2"
		);

		PortletEntry.publish();

		Navigator.openURL();

		Page.add(pageName = "DDL Page");

		Navigator.gotoPage(pageName = "DDL Page");

		Portlet.addPG(pageName = "DDL Page", portletName = "Dynamic Data Lists Display");

		DDLList.addViaDDLDisplayPG(ddlListName = "Dynamic Data List 2");

		DDLDataDefinition.selectViaDDLDisplayPG();

		DDLList.saveViaDDLDisplayPG();

		Navigator.gotoPage(pageName = "DDL Page");

		DDLRecord.addViaDDLDisplayPG(ddlListName = "Dynamic Data List 2");

		DDLRecord.addRepeatableField(fieldName = "Text");

		DDLRecord.populateFieldText(ddlRecordFieldData = "Content", fieldName = "Text");

		DDLRecord.viewTextFieldRepeated(
			ddlRecordFieldData1 = "Content",
			ddlRecordFieldData2 = "Content 2"
		);

		PortletEntry.publish();
	}

	@priority = "4"
	test AddRepeatableFieldAndAssertOrderInTranslation {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Dynamic Data Lists"
		);

		DDLDataDefinition.addCP(ddlDataDefinitionName = "Data Definition");

		DynamicDataMapping.addField(
			field = "Text",
			fieldFieldLabel = "Text",
			fieldName = "Text"
		);

		DynamicDataMapping.editFieldRepeatable(fieldFieldLabel = "Text");

		DDLDataDefinition.save();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Dynamic Data Lists"
		);

		DDLList.addCP(ddlListName = "Dynamic Data List");

		DDLDataDefinition.selectCP(ddlDataDefinitionName = "Data Definition");

		DDLDataDefinition.save();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Dynamic Data Lists"
		);

		DDLRecord.addCP(
			ddlDataDefinitionName = "Data Definition",
			ddlListName = "Dynamic Data List"
		);

		DDLRecord.addRepeatableField(fieldName = "Text");

		DDLRecord.populateFieldText(ddlRecordFieldData = "Content", fieldName = "Text");

		DDLRecord.saveAsDraftCP();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Dynamic Data Lists"
		);

		DDLRecord.editCP(
			ddlListName = "Dynamic Data List",
			ddlRecordFieldData = "Content, Content 2"
		);

		DDLRecord.addTranslation(localizedLanguage = "Catalan (Spain)");

		DDLRecord.populateTranslationFieldText(
			ddlRecordFieldData = "Contenido",
			fieldName = "Text"
		);

		PortletEntry.publish();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Dynamic Data Lists"
		);

		DDLRecord.editCP(
			ddlListName = "Dynamic Data List",
			ddlRecordFieldData = "Content, Content 2"
		);

		DDLRecord.addRepeatableField(fieldName = "Text");

		DDLRecord.populateFieldText(ddlRecordFieldData = "Content", fieldName = "Text");

		PortletEntry.publish();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Dynamic Data Lists"
		);

		DDLRecord.editCP(
			ddlListName = "Dynamic Data List",
			ddlRecordFieldData = "Content, Content 2, Content 3"
		);

		DDLRecord.editTranslation(localizedLanguage = "Catalan (Spain)");

		DDLRecord.viewTextFieldRepeated(
			ddlRecordFieldData1 = "Contenido",
			ddlRecordFieldData2 = "Content 2",
			ddlRecordFieldData3 = "Contenido 2"
		);
	}

	@description = "This is a use case for LPS-69273."
	@priority = "4"
	test AddRepeatableFieldAsNonAdminUser {
		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Roles"
		);

		Role.addCP(roleName = "DDMRegRole Name");

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Roles"
		);

		Role.definePermissionCmdCP(
			permissionDefinitionKey = "SITE_ADMIN_CONTENT_DYNAMIC_DATA_LISTS_GENERAL_PERMISSIONS_ACTION_CHECKBOX",
			permissionDefinitionValue = "Action",
			permissionNavigationKey = "SITE_ADMIN_CONTENT_DYNAMIC_DATA_LISTS",
			permissionNavigationValue = "Dynamic Data Lists",
			roleName = "DDMRegRole Name"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Roles"
		);

		Role.definePermissionCmdCP(
			permissionDefinitionKey = "SITE_ADMIN_CONTENT_DYNAMIC_DATA_LISTS_RESOURCE_PERMISSIONS_DYNAMIC_DATA_LISTS_RECORD_SET_ADD_RECORD_CHECKBOX",
			permissionDefinitionValue = "Add Record",
			permissionNavigationKey = "SITE_ADMIN_CONTENT_DYNAMIC_DATA_LISTS",
			permissionNavigationValue = "Dynamic Data Lists",
			roleName = "DDMRegRole Name"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Roles"
		);

		Role.definePermissionCmdCP(
			permissionDefinitionKey = "SITE_ADMIN_CONTENT_DYNAMIC_DATA_LISTS_RESOURCE_PERMISSIONS_DYNAMIC_DATA_LISTS_RECORD_SET_VIEW_CHECKBOX",
			permissionDefinitionValue = "View",
			permissionNavigationKey = "SITE_ADMIN_CONTENT_DYNAMIC_DATA_LISTS",
			permissionNavigationValue = "Dynamic Data Lists",
			roleName = "DDMRegRole Name"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.addCP(
			userEmailAddress = "userea1@liferay.com",
			userFirstName = "userfn1",
			userLastName = "userln1",
			userScreenName = "usersn1"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.editPasswordCP(
			userEmailAddress = "userea1@liferay.com",
			userScreenName = "usersn1"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Roles"
		);

		Role.assignRegRoleCP(roleName = "DDMRegRole Name", userScreenName = "usersn1");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Dynamic Data Lists"
		);

		DDLDataDefinition.addCP();

		DynamicDataMapping.addField(
			field = "Text",
			fieldFieldLabel = "Text",
			fieldName = "Text"
		);

		DynamicDataMapping.editFieldRepeatable(fieldFieldLabel = "Text");

		DDLDataDefinition.save();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Dynamic Data Lists"
		);

		DDLList.addCP();

		DDLDataDefinition.selectCP();

		DDLDataDefinition.save();

		User.logoutAndLoginPG(
			userLoginEmailAddress = "userea1@liferay.com",
			userLoginFullName = "userfn1 userln1"
		);

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Dynamic Data Lists"
		);

		DDLRecord.addCP();

		DDLRecord.addRepeatableField(fieldName = "Text");

		DDLRecord.populateFieldText(ddlRecordFieldData = "Content", fieldName = "Text");

		DDLRecord.viewTextFieldRepeated(
			ddlRecordFieldData1 = "Content",
			ddlRecordFieldData2 = "Content 2"
		);

		PortletEntry.publish();
	}

	@description = "This is a use case for LPS-68216."
	@priority = "4"
	test AddSelectFieldWithTranslationAndViewInSpreadsheetView {
		var portalURL = PropsUtil.get("portal.url");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Dynamic Data Lists"
		);

		DDLDataDefinition.addCP(ddlDataDefinitionName = "Data Definition");

		DynamicDataMapping.addField(
			field = "Select",
			fieldFieldLabel = "SelectENG",
			fieldName = "Select"
		);

		DynamicDataMapping.editFieldOptions(
			field = "Select",
			fieldFieldLabel = "SelectENG",
			fieldName = "Select",
			fieldOptionsNames = "ENGOption1",
			fieldOptionsValue = "value 1"
		);

		DDLRecord.editTranslation(localizedLanguage = "Japanese (Japan)");

		DynamicDataMapping.editField(
			field = "Select",
			fieldFieldLabel = "SelectENG",
			fieldFieldLabelEdit = "SelectJA"
		);

		DynamicDataMapping.editFieldOptions(
			field = "Select",
			fieldFieldLabel = "SelectJA",
			fieldName = "Select",
			fieldOptionsNames = "JAOption1"
		);

		DDLDataDefinition.save();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Dynamic Data Lists"
		);

		DDLList.addCP(ddlListName = "DDL List");

		DDLDataDefinition.selectCP(ddlDataDefinitionName = "Data Definition");

		DDLDataDefinition.save();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Dynamic Data Lists"
		);

		DDLRecord.addCP(
			ddlDataDefinitionName = "Data Definition",
			ddlListName = "DDL List"
		);

		DDLRecord.populateFieldSelect(
			ddlRecordFieldData = "ENGOption1",
			fieldFieldLabel = "SelectENG",
			fieldName = "Select"
		);

		PortletEntry.publish();

		Navigator.openURL();

		Page.add(pageName = "Dynamic Data Lists Page");

		Navigator.gotoPage(pageName = "Dynamic Data Lists Page");

		Portlet.addPG(portletName = "Dynamic Data Lists Display");

		DDLList.selectViaDDLDisplayPG(ddlListName = "DDL List");

		Navigator.gotoPage(pageName = "Dynamic Data Lists Page");

		DDLDisplayPortlet.configureListViewPG(
			configureCheckBoxName = "TEMPLATES_SPREADSHEET_VIEW_CHECKBOX",
			configureChecked = "true",
			ddlListName = "DDL List"
		);

		Navigator.gotoPage(pageName = "Dynamic Data Lists Page");

		DDLDisplayPortlet.viewFieldSelectViaSpreadsheetView(
			ddlRecordFieldData = "ENGOption1",
			ddlRecordRow = "1",
			fieldName = "Select"
		);

		Navigator.openSpecificURL(url = "${portalURL}/ja/");

		Navigator.gotoPage(pageName = "Dynamic Data Lists Page");

		DDLDisplayPortlet.viewFieldSelectViaSpreadsheetView(
			ddlRecordFieldData = "JAOption1",
			ddlRecordRow = "1",
			fieldName = "Select"
		);
	}

	@description = "This is a use case for LPS-50549."
	@priority = "4"
	test AddXSSToHTMLField {

		var ddlRecordFieldData1 = '''<img src=x onerror=alert(/xss/) />''';

		var ddlRecordFieldData2 = ''''+alert('xss')+'"+alert("xss")+"''';

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Dynamic Data Lists"
		);

		DDLDataDefinition.addCP();

		DynamicDataMapping.addField(
			field = "HTML",
			fieldFieldLabel = "HTML",
			fieldName = "HTML"
		);

		DynamicDataMapping.editFieldPredefinedValue(
			field = "HTML",
			fieldFieldLabel = "HTML",
			fieldName = "HTML",
			fieldPredefinedValue = "${ddlRecordFieldData2}"
		);

		DDLDataDefinition.save();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Dynamic Data Lists"
		);

		DDLDataDefinition.viewCP(fieldFieldLabel = "HTML");

		DynamicDataMapping.viewField(
			field = "HTML",
			fieldFieldLabel = "HTML",
			fieldName = "HTML"
		);

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Dynamic Data Lists"
		);

		DDLList.addCP();

		DDLDataDefinition.selectCP();

		DDLDataDefinition.save();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Dynamic Data Lists"
		);

		DDLRecord.addCP();

		DDLRecord.populateFieldHTML(
			ddlRecordFieldData = "${ddlRecordFieldData1}",
			fieldFieldLabel = "HTML",
			fieldName = "HTML"
		);

		PortletEntry.publish();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Dynamic Data Lists"
		);

		DDLNavigator.gotoListRecords();

		DDLRecord.gotoRecordPreview();

		DDLRecord.viewInvalidHTMLfield();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Dynamic Data Lists"
		);

		DDLRecord.deleteCP(ddlRecordFieldData = "(Preview)");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Dynamic Data Lists"
		);

		DDLRecord.addCP();

		PortletEntry.publish();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Dynamic Data Lists"
		);

		DDLNavigator.gotoListRecords();

		DDLRecord.viewFirstFieldCP(
			ddlRecordFieldData = "${ddlRecordFieldData2}",
			field = "HTML",
			fieldFieldLabel = "HTML",
			fieldName = "HTML"
		);
	}

	@priority = "2"
	test AssertConfigurationMenulist {
		Page.add(pageName = "Dynamic Data Lists Display Page");

		Navigator.gotoPage(pageName = "Dynamic Data Lists Display Page");

		Portlet.addPG(portletName = "Dynamic Data Lists Display");

		DDLList.addViaDDLDisplayPG(ddlListName = "List Name");

		DDLDataDefinition.selectViaDDLDisplayPG(ddlDataDefinitionName = "To Do");

		DDLList.saveViaDDLDisplayPG();

		Navigator.gotoPage(pageName = "Dynamic Data Lists Display Page");

		DDLDisplayPortlet.configureListViewPG(
			configureCheckBoxName = "TEMPLATES_EDITABLE_CHECKBOX",
			configureChecked = "false",
			ddlListName = "List Name"
		);

		Navigator.gotoPage(pageName = "Dynamic Data Lists Display Page");

		DDLDisplayPortlet.configureListViewPG(
			configureCheckBoxName = "TEMPLATES_SPREADSHEET_VIEW_CHECKBOX",
			ddlListName = "List Name"
		);

		Navigator.gotoPage(pageName = "Dynamic Data Lists Display Page");

		DDLDisplayPortlet.assertCannotEditSpreadsheet();

		Portlet.viewPortletOptionsMenulist();
	}

	@priority = "3"
	test AssertDecimalFieldInvalidDataErrorMessage {
		Page.add(pageName = "Dynamic Data Lists Display Page");

		Navigator.gotoPage(pageName = "Dynamic Data Lists Display Page");

		Portlet.addPG(portletName = "Dynamic Data Lists Display");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Dynamic Data Lists"
		);

		DDLDataDefinition.addCP(
			ddlDataDefinitionName = "Decimal Invalid Value Data Definition Name"
		);

		DynamicDataMapping.addField(
			field = "Decimal",
			fieldFieldLabel = "Decimal",
			fieldName = "Decimal"
		);

		DDLDataDefinition.save();

		Navigator.gotoPage(pageName = "Dynamic Data Lists Display Page");

		DDLList.addViaDDLDisplayPG(ddlListName = "List Name");

		DDLDataDefinition.selectViaDDLDisplayPG(
			ddlDataDefinitionName = "Decimal Invalid Value Data Definition Name"
		);

		DDLList.saveViaDDLDisplayPG();

		Navigator.gotoPage(pageName = "Dynamic Data Lists Display Page");

		DDLRecord.addViaDDLDisplayPG(
			ddlDataDefinitionName = "Decimal Invalid Value Data Definition Name",
			ddlListName = "List Name"
		);

		var key_fieldName = "Decimal";

		Type(locator1 = "TextInput#DDM", value1 = "0.987a");

		AssertClick(locator1 = "Button#PUBLISH", value1 = "Publish");

		AssertTextEquals(
			locator1 = "Message#ERROR_ALERT",
			value1 = "Please enter a valid number."
		);
	}

	@description = "This is a use case for LPS-48736."
	@priority = "3"
	test AssertFieldAfterNavigatingToManageTemplates {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Dynamic Data Lists"
		);

		DDLDataDefinition.addCP(ddlDataDefinitionName = "Data Definition Title");

		DynamicDataMapping.addField(
			field = "Text",
			fieldFieldLabel = "Text",
			fieldName = "Text"
		);

		DDLDataDefinition.save();

		Type(locator1 = "NavBar#BASIC_SEARCH_FIELD", value1 = "Data Definition Title");

		Click(locator1 = "Icon#BASIC_SEARCH");

		Click.waitForMenuToggleJSClick(
			locator1 = "DDMSelectStructure#DDM_STRUCTURE_ELLIPSIS_1"
		);

		MenuItem.click(menuItem = "Manage Templates");

		Click(locator1 = "Icon#ANGLE_LEFT_BACK");

		var key_ddlDataDefinitionName = "Data Definition Title";

		Click(locator1 = "DDMSelectStructure#DDM_STRUCTURE_TABLE_NAME_LINK");

		AssertTextEquals(locator1 = "Portlet#HEADER", value1 = "Data Definition Title");

		AssertTextEquals(locator1 = "TextInput#NAME", value1 = "Data Definition Title");

		DynamicDataMapping.viewField(fieldFieldLabel = "Text", fieldName = "Text");
	}

	@priority = "4"
	test AssertGuestCannotEditRecord {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Dynamic Data Lists"
		);

		DDLDataDefinition.addCP(
			ddlDataDefinitionDescription = "Data Definition Description",
			ddlDataDefinitionName = "Data Definition"
		);

		DynamicDataMapping.addField(
			field = "Text",
			fieldFieldLabel = "Text",
			fieldName = "Text"
		);

		DynamicDataMapping.addField(
			field = "Documents and Media",
			fieldFieldLabel = "Document",
			fieldName = "Document"
		);

		DDLDataDefinition.save();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Dynamic Data Lists"
		);

		DDLNavigator.gotoDataDefinitionPermissions(
			ddlDataDefinitionName = "Data Definition"
		);

		DDLDataDefinition.editPermissionsCP(
			addOrRemoveViewPermission = "Add",
			roleList = "Guest"
		);

		Navigator.openURL();

		Page.add(pageName = "Dynamic Data Lists Display Page");

		Navigator.gotoPage(pageName = "Dynamic Data Lists Display Page");

		Portlet.addPG(portletName = "Dynamic Data Lists Display");

		DDLList.addViaDDLDisplayPG(
			ddlListDescription = "List Description",
			ddlListName = "List Name"
		);

		DDLDataDefinition.selectViaDDLDisplayPG(
			ddlDataDefinitionName = "Data Definition"
		);

		DDLList.saveViaDDLDisplayPG();

		Navigator.gotoPage(pageName = "Dynamic Data Lists Display Page");

		DDLRecord.addViaDDLDisplayPG(
			ddlDataDefinitionName = "Data Definition",
			ddlListName = "List Name"
		);

		DDLRecord.populateFieldText(
			ddlRecordFieldData = "Text",
			fieldFieldLabel = "Text",
			fieldName = "Text"
		);

		DDLRecord.populateFieldDocumentsAndMediaChooseFromDocumentLibrary(
			document = "Document_1.doc",
			fieldFieldLabel = "Document",
			fieldName = "Document"
		);

		PortletEntry.publish();

		Navigator.gotoPage(pageName = "Dynamic Data Lists Display Page");

		DDLNavigator.gotoView();

		Pause(locator1 = "1000");

		var adminViewURL = Navigator.getCurrentURL(adminViewURL = "${adminViewURL}");

		Navigator.gotoPage(pageName = "Dynamic Data Lists Display Page");

		DDLRecord.editPG();

		Pause(locator1 = "1000");

		var adminEditURL = Navigator.getCurrentURL(adminEditURL = "${adminEditURL}");

		User.logoutPG();

		Navigator.gotoPage(pageName = "Dynamic Data Lists Display Page");

		DDLRecord.viewViaDDLDisplayPG(
			ddlRecordFieldData = "Text",
			ddlRecordFieldDataTableDisplay = "Text",
			fieldFieldLabel = "Text",
			userRole = "Guest"
		);

		Portlet.viewCannotEdit();

		Navigator.gotoPage(pageName = "Dynamic Data Lists Display Page");

		DDLRecord.viewSecondRecordViaDDLDisplayTemplate(
			ddlRecordFieldData = "Document_1.doc",
			fieldFieldLabel = "Document"
		);

		Portlet.viewCannotEdit();

		Navigator.openSpecificURL(url = "${adminEditURL}");

		DDLRecord.editTranslation(localizedLanguage = "Catalan (Spain)");

		Portlet.viewCannotPublish();

		Navigator.gotoPage(pageName = "Dynamic Data Lists Display Page");

		Navigator.openSpecificURL(url = "${adminEditURL}");

		DDLRecord.viewTranslationNotAvailable(localizedLanguage = "Catalan (Spain)");

		DDLRecord.populateFieldText(
			ddlRecordFieldData = "Text Edit",
			fieldFieldLabel = "Text",
			fieldName = "Text"
		);

		Portlet.viewCannotPublish();

		Navigator.openSpecificURL(url = "${adminEditURL}");

		DDLRecord.populateFieldDocumentsAndMediaChooseFromDocumentLibrary(
			fieldName = "Document",
			userRole = "Guest"
		);

		Navigator.openSpecificURL(url = "${adminEditURL}");

		DDLRecord.clearFieldDocumentsAndMedia(fieldName = "Document");

		Portlet.viewCannotPublish();

		Navigator.openSpecificURL(url = "${adminEditURL}");

		Portlet.viewCannotSaveAsDraft();
	}

	@priority = "3"
	test AssertIntegerFieldInvalidDataErrorMessage {
		Page.add(pageName = "Dynamic Data Lists Display Page");

		Navigator.gotoPage(pageName = "Dynamic Data Lists Display Page");

		Portlet.addPG(portletName = "Dynamic Data Lists Display");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Dynamic Data Lists"
		);

		DDLDataDefinition.addCP(
			ddlDataDefinitionName = "Integer Invalid Value Data Definition Name"
		);

		DynamicDataMapping.addField(
			field = "Integer",
			fieldFieldLabel = "Integer",
			fieldName = "Integer"
		);

		DDLDataDefinition.save();

		Navigator.gotoPage(pageName = "Dynamic Data Lists Display Page");

		DDLList.addViaDDLDisplayPG(ddlListName = "List Name");

		DDLDataDefinition.selectViaDDLDisplayPG(
			ddlDataDefinitionName = "Integer Invalid Value Data Definition Name"
		);

		DDLList.saveViaDDLDisplayPG();

		Navigator.gotoPage(pageName = "Dynamic Data Lists Display Page");

		DDLRecord.addViaDDLDisplayPG(
			ddlDataDefinitionName = "Integer Invalid Value Data Definition Name",
			ddlListName = "List Name"
		);

		var key_fieldName = "Integer";

		Type(locator1 = "TextInput#DDM_FUZZY", value1 = "aaaa");

		AssertClick(locator1 = "Button#PUBLISH", value1 = "Publish");

		AssertTextEquals(
			locator1 = "Message#ERROR_ALERT",
			value1 = "Please enter only digits."
		);
	}

	@priority = "4"
	test AssertNumberFieldInvalidDataErrorMessage {
		Page.add(pageName = "Dynamic Data Lists Display Page");

		Navigator.gotoPage(pageName = "Dynamic Data Lists Display Page");

		Portlet.addPG(portletName = "Dynamic Data Lists Display");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Dynamic Data Lists"
		);

		DDLDataDefinition.addCP(
			ddlDataDefinitionName = "Number Predefined Value Data Definition Name"
		);

		DynamicDataMapping.addField(
			field = "Number",
			fieldFieldLabel = "Number",
			fieldName = "Number"
		);

		DDLDataDefinition.save();

		Navigator.gotoPage(pageName = "Dynamic Data Lists Display Page");

		DDLList.addViaDDLDisplayPG(ddlListName = "List Name");

		DDLDataDefinition.selectViaDDLDisplayPG(
			ddlDataDefinitionName = "Number Predefined Value Data Definition Name"
		);

		DDLList.saveViaDDLDisplayPG();

		Navigator.gotoPage(pageName = "Dynamic Data Lists Display Page");

		DDLRecord.addViaDDLDisplayPG(
			ddlDataDefinitionName = "Number Predefined Value Data Definition Name",
			ddlListName = "List Name"
		);

		var key_fieldName = "Number";

		Type(locator1 = "TextInput#DDM", value1 = "555b");

		AssertClick(locator1 = "Button#PUBLISH", value1 = "Publish");

		AssertTextEquals(
			locator1 = "Message#ERROR_ALERT",
			value1 = "Please enter a valid number."
		);
	}

	@priority = "4"
	test AssertUserCannotDeleteEntryAfterPermissionRemoved {
		var siteName = TestCase.getSiteName(siteName = "${siteName}");

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.addCP(
			userEmailAddress = "userea1@liferay.com",
			userFirstName = "userfn1",
			userLastName = "userln1",
			userScreenName = "usersn1"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.editPasswordCP(
			userEmailAddress = "userea1@liferay.com",
			userScreenName = "usersn1"
		);

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Dynamic Data Lists"
		);

		DDLDataDefinition.addCP(
			ddlDataDefinitionDescription = "Data Definition Description",
			ddlDataDefinitionName = "Data Definition Name"
		);

		DynamicDataMapping.addField(
			field = "Text",
			fieldFieldLabel = "Text",
			fieldName = "Text"
		);

		DDLDataDefinition.save();

		Page.add(pageName = "Data Definition Page Name");

		Portlet.addPG(portletName = "Dynamic Data Lists Display");

		DDLList.addViaDDLDisplayPG(
			ddlListDescription = "DDL List Description",
			ddlListName = "DDL List Name"
		);

		DDLDataDefinition.selectViaDDLDisplayPG(
			ddlDataDefinitionName = "Data Definition Name"
		);

		DDLList.saveViaDDLDisplayPG();

		Navigator.gotoPage(pageName = "Data Definition Page Name");

		DDLRecord.addViaDDLDisplayPG(
			ddlDataDefinitionName = "Data Definition Name",
			ddlListName = "DDL List Name"
		);

		DDLRecord.populateFieldText(
			ddlRecordFieldData = "Text",
			fieldFieldLabel = "Text",
			fieldName = "Text"
		);

		PortletEntry.publish();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Dynamic Data Lists"
		);

		DDLList.editPermissions(ddlListName = "DDL List Name");

		Role.definePermissionPG(
			permissionDefinitionKey = "CONTENT_PERMISSIONS_DELETE_CHECKBOX",
			roleName = "Guest"
		);

		Navigator.gotoPage(pageName = "Data Definition Page Name");

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.impersonateCP(siteName = "${siteName}", userScreenName = "usersn1");

		Navigator._gotoPage(pageName = "Data Definition Page Name");

		DDLList.viewDeleteRecordOptionViaDDLDisplayPG(ddlListRecordName = "Text");

		Navigator.closeSpecificWindow(
			closeWindowTitle = "Data Definition Page Name - ${siteName}",
			selectWindowTitle = "Users and Organizations - Control Panel - ${siteName}"
		);

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Dynamic Data Lists"
		);

		DDLList.editPermissions(ddlListName = "DDL List Name");

		Role.removePermissionPG(
			permissionDefinitionKey = "CONTENT_PERMISSIONS_DELETE_CHECKBOX",
			roleName = "Guest"
		);

		Navigator.gotoPage(pageName = "Data Definition Page Name");

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.impersonateCP(siteName = "${siteName}", userScreenName = "usersn1");

		Navigator._gotoPage(pageName = "Data Definition Page Name");

		DDLList.assertCannotDeleteRecordViaDDLDisplayPG();
	}

	@priority = "4"
	test AssertUserUpdateRejectedRecord {
		Page.add(pageName = "Dynamic Data Lists Display Page");

		Navigator.gotoPage(pageName = "Dynamic Data Lists Display Page");

		Portlet.addPG(portletName = "Dynamic Data Lists Display");

		DDLList.addViaDDLDisplayPG(
			ddlListName = "DDL List",
			workflowDefinition = "Single Approver (Version 1)"
		);

		DDLDataDefinition.selectViaDDLDisplayPG(ddlDataDefinitionName = "To Do");

		DDLList.saveViaDDLDisplayPG();

		Navigator.openURL();

		Permissions.definePermissionViaJSONAPI(
			resourceAction = "ADD_RECORD",
			resourceName = "com.liferay.dynamic.data.lists.model.DDLRecordSet",
			roleName = "User"
		);

		Permissions.definePermissionViaJSONAPI(
			resourceAction = "VIEW",
			resourceName = "com.liferay.dynamic.data.lists.model.DDLRecordSet",
			roleName = "User"
		);

		Permissions.definePermissionViaJSONAPI(
			resourceAction = "UPDATE",
			resourceName = "com.liferay.dynamic.data.lists.model.DDLRecordSet",
			roleName = "User"
		);

		Permissions.definePermissionViaJSONAPI(
			resourceAction = "ACCESS_IN_CONTROL_PANEL",
			resourceName = "90",
			roleName = "User"
		);

		Permissions.definePermissionViaJSONAPI(
			resourceAction = "ACCESS_IN_CONTROL_PANEL",
			resourceName = "com_liferay_portal_workflow_task_web_portlet_MyWorkflowTaskPortlet",
			roleName = "User"
		);

		Permissions.definePermissionViaJSONAPI(
			resourceAction = "VIEW",
			resourceName = "com_liferay_portal_workflow_task_web_portlet_MyWorkflowTaskPortlet",
			roleName = "User"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.addCP(
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userScreenName = "usersn"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.editPasswordCP(
			userEmailAddress = "userea@liferay.com",
			userScreenName = "usersn"
		);

		User.logoutPG();

		User.loginUserPG(password = "test", userEmailAddress = "userea@liferay.com");

		Navigator.gotoPage(pageName = "Dynamic Data Lists Display Page");

		DDLRecord.addViaDDLDisplayPG(ddlDataDefinitionName = "To Do");

		DDLRecord.populateFieldText(
			ddlRecordFieldData = "DDL Record Title",
			fieldFieldLabel = "Title",
			fieldName = "title"
		);

		DDLRecord.submitForPublication();

		User.logoutPG();

		User.loginUserPG(password = "test", userEmailAddress = "test@liferay.com");

		Page.gotoMyAccount(portletName = "My Workflow Tasks");

		Workflow.assignToMeTaskByActions(
			ddlDataDefinitionName = "To Do",
			workflowAssetTitle = "New To Do for List: DDL List",
			workflowAssetType = "Dynamic Data Lists Record",
			workflowTask = "Review"
		);

		Page.gotoMyAccount(portletName = "My Workflow Tasks");

		Workflow.rejectTaskByActions(
			ddlDataDefinitionName = "To Do",
			workflowAssetTitle = "New To Do for List: DDL List",
			workflowAssetType = "Dynamic Data Lists Record",
			workflowTask = "Review"
		);

		User.logoutPG();

		User.loginUserPG(password = "test", userEmailAddress = "userea@liferay.com");

		Page.gotoMyAccount(portletName = "My Workflow Tasks");

		Workflow.viewRejectedTask(
			ddlDataDefinitionName = "To Do",
			workflowAssetTitle = "New To Do for List: DDL List",
			workflowAssetType = "Dynamic Data Lists Record"
		);

		Workflow.viewTaskAssignedToMeDetails(
			workflowAssetContent = "DDL Record Title",
			workflowAssetTitle = "New To Do for List: DDL List",
			workflowAssignedTo = "userfn userln",
			workflowTask = "Update"
		);

		DDLNavigator.gotoDDLRecordEditViaWorkflow(
			userName = "userfn userln",
			workflowStatus = "Pending (Update)"
		);

		User.logoutPG();

		User.loginUserPG(password = "test", userEmailAddress = "test@liferay.com");
	}

	@description = "This is a use case for LPS-50557."
	@priority = "3"
	test CreateSiteAndViewDefaultDataDefinitions {
		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Sites"
		);

		Site.addBlankCP(siteName = "Site Name");

		ProductMenu.gotoSite(site = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Dynamic Data Lists"
		);

		DDLNavigator.gotoManageDataDefinitions();

		for (var ddlDataDefinitionName : list "Contacts,Events,Inventory,Issues Tracking,Meeting Minutes,To Do") {
			DDLDataDefinition.viewName(ddlDataDefinitionName = "${ddlDataDefinitionName}");
		}
	}

	@priority = "3"
	test DeleteStructure {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Dynamic Data Lists"
		);

		DDLDataDefinition.addCP(
			ddlDataDefinitionDescription = "DDL Definition Description",
			ddlDataDefinitionName = "DDL Definition"
		);

		DynamicDataMapping.addField(
			field = "Text",
			fieldFieldLabel = "Text Label",
			fieldName = "TextName"
		);

		DDLDataDefinition.save();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Dynamic Data Lists"
		);

		DDLList.addCP(
			ddlListDescription = "DDL List Description",
			ddlListName = "DDL List"
		);

		DDLDataDefinition.selectCP(ddlDataDefinitionName = "DDL Definition");

		DDLDataDefinition.save();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Dynamic Data Lists"
		);

		DDLRecord.addCP(
			ddlDataDefinitionName = "DDL Definition",
			ddlListName = "DDL List"
		);

		DDLRecord.populateFieldText(
			ddlRecordFieldData = "Record Text",
			fieldFieldLabel = "Text Label",
			fieldName = "TextName"
		);

		PortletEntry.publish();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Dynamic Data Lists"
		);

		DDLDataDefinition.deleteNoCP(ddlDataDefinitionName = "DDL Definition");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Dynamic Data Lists"
		);

		DDLList.deleteCP(ddlListName = "DDL List");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Dynamic Data Lists"
		);

		DDLDataDefinition.deleteCP(ddlDataDefinitionName = "DDL Definition");
	}

	@description = "This is a use case for LPS-59154 and LPS-62523."
	@priority = "3"
	test EditDefaultLanguageAndPublishRecord {
		property test.name.skip.portal.instance = "DynamicdatalistUsecase#EditDefaultLanguageAndPublishRecord";

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Control Panel",
			portlet = "Instance Settings"
		);

		PortalSettings.configureCurrentLanguagesCP(
			defaultPortalLanguage = "Spanish (Spain)"
		);

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Dynamic Data Lists"
		);

		DDLDataDefinition.addCP(ddlDataDefinitionName = "Data Definition");

		DynamicDataMapping.addField(
			field = "Text",
			fieldFieldLabel = "Text",
			fieldName = "Text"
		);

		DDLDataDefinition.save();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Dynamic Data Lists"
		);

		DDLList.addCP(ddlListName = "List Name");

		DDLDataDefinition.selectCP(ddlDataDefinitionName = "Data Definition");

		DDLDataDefinition.save();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Dynamic Data Lists"
		);

		DDLRecord.addCP(
			ddlDataDefinitionName = "Data Definition",
			ddlListName = "List Name"
		);

		DDLRecord.viewDefaultLanguage(defaultLanguage = "Spanish (Spain)");

		DDLRecord.populateFieldText(
			ddlRecordFieldData = "Text Spanish",
			fieldName = "Text"
		);

		DDLRecord.editTranslation(localizedLanguage = "English (United States)");

		DDLRecord.populateFieldText(
			ddlRecordFieldData = "Text English",
			fieldName = "Text"
		);

		PortletEntry.publish();

		DDLRecord.viewFieldCP(
			ddlRecordFieldData = "Text English",
			fieldFieldLabel = "Text"
		);

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Dynamic Data Lists"
		);

		DDLRecord.editCP(ddlListName = "List Name", ddlRecordFieldData = "Text English");

		DDLRecord.removeTranslation(localizedLanguage = "English (United States)");

		DDLRecord.addTranslation(localizedLanguage = "Hebrew (Israel)");

		DDLRecord.editTranslation(localizedLanguage = "Hebrew (Israel)");

		DDLRecord.populateFieldText(
			ddlRecordFieldData = "Text Hebrew",
			fieldName = "Text"
		);

		PortletEntry.publish();

		DDLRecord.viewFieldCP(
			ddlRecordFieldData = "Text Spanish",
			fieldFieldLabel = "Text"
		);

		Navigator.openURL();

		Page.add(pageName = "Dynamic Data Lists Display Page");

		Navigator.gotoPage(pageName = "Dynamic Data Lists Display Page");

		Portlet.addPG(portletName = "Dynamic Data Lists Display");

		DDLList.addViaDDLDisplayPG(ddlListName = "List Name Display");

		DDLDataDefinition.selectViaDDLDisplayPG(
			ddlDataDefinitionName = "Data Definition"
		);

		DDLList.saveViaDDLDisplayPG();

		Navigator.gotoPage(pageName = "Dynamic Data Lists Display Page");

		DDLRecord.addViaDDLDisplayPG(ddlDataDefinitionName = "Data Definition");

		DDLRecord.viewDefaultLanguage(defaultLanguage = "Spanish (Spain)");

		DDLRecord.populateFieldText(
			ddlRecordFieldData = "Text Spanish",
			fieldName = "Text"
		);

		DDLRecord.editTranslation(localizedLanguage = "English (United States)");

		DDLRecord.populateFieldText(
			ddlRecordFieldData = "Text English",
			fieldName = "Text"
		);

		PortletEntry.publish();

		DDLRecord.viewViaDDLDisplayPG(
			ddlListName = "List Name Display",
			ddlRecordFieldData = "Text English",
			fieldFieldLabel = "Text"
		);

		Navigator.gotoPage(pageName = "Dynamic Data Lists Display Page");

		DDLRecord.editPG();

		DDLRecord.removeTranslation(localizedLanguage = "English (United States)");

		DDLRecord.addTranslation(localizedLanguage = "Hebrew (Israel)");

		DDLRecord.editTranslation(localizedLanguage = "Hebrew (Israel)");

		DDLRecord.populateFieldText(
			ddlRecordFieldData = "Text Hebrew",
			fieldName = "Text"
		);

		PortletEntry.publish();

		DDLRecord.viewViaDDLDisplayPG(
			ddlListName = "List Name Display",
			ddlRecordFieldData = "Text Spanish",
			fieldFieldLabel = "Text"
		);
	}

	@description = "This is a use case for LPS-59272."
	@priority = "3"
	test EditListRecordWithNestedFieldViaSpreadsheetView {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Dynamic Data Lists"
		);

		DDLDataDefinition.addCP(ddlDataDefinitionName = "Data Definition Name");

		DynamicDataMapping.addField(
			field = "Text",
			fieldFieldLabel = "Text",
			fieldName = "Text"
		);

		DynamicDataMapping.addFieldNested(
			field = "Select",
			fieldFieldLabel = "Select",
			fieldName = "Select"
		);

		DDLDataDefinition.save();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Dynamic Data Lists"
		);

		DDLList.addCP(
			ddlListDescription = "List Description",
			ddlListName = "List Name"
		);

		DDLDataDefinition.selectCP(ddlDataDefinitionName = "Data Definition Name");

		DDLDataDefinition.save();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Dynamic Data Lists"
		);

		DDLRecord.addCP(
			ddlDataDefinitionName = "Data Definition Name",
			ddlListName = "List Name"
		);

		DDLRecord.populateFieldText(ddlRecordFieldData = "Text", fieldName = "Text");

		DDLRecord.populateFieldSelect(
			ddlRecordFieldData = "option 1",
			fieldName = "Select"
		);

		PortletEntry.publish();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Dynamic Data Lists"
		);

		DDLNavigator.gotoSpreadsheetView(ddlListName = "List Name");

		DDLRecord.populateFieldTextViaSpreadsheetView(
			ddlRecordFieldData = "Text Edit",
			ddlRecordRow = "1",
			fieldName = "Text"
		);

		DDLRecord.populateFieldSelectViaSpreadsheetView(
			ddlRecordFieldData = "option 2",
			ddlRecordRow = "1",
			fieldName = "Select"
		);

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Dynamic Data Lists"
		);

		DDLList.viewCP(ddlListName = "List Name");

		DDLRecord.viewFieldCP(
			ddlRecordFieldData = "Text Edit",
			ddlRecordNestedFieldData = "option 2",
			fieldFieldLabel = "Text",
			nestedFieldFieldLabel = "Select"
		);
	}

	@priority = "4"
	test FormTemplateUniqueField {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Dynamic Data Lists"
		);

		DDLDataDefinition.addCP(
			ddlDataDefinitionDescription = "DDL Definition Description",
			ddlDataDefinitionName = "DDL Data Definition"
		);

		DynamicDataMapping.addField(
			field = "Boolean",
			fieldFieldLabel = "This is a unique field",
			fieldName = "ThisIsAUniqueField"
		);

		DDLDataDefinition.save();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Dynamic Data Lists"
		);

		DDLTemplate.addFormTemplateCP(
			ddlDataDefinitionName = "DDL Data Definition",
			ddlFormTemplateName = "DDL Data Definition Form Template Name"
		);

		DynamicDataMapping.viewCannotAddField(field = "This is a unique field");

		DynamicDataMapping.addFieldFormTemplateSpecific(field = "Separator");

		DynamicDataMapping.viewCanAddField(field = "Separator");

		DynamicDataMapping.deleteField(
			fieldFieldLabel = "This is a unique field",
			fieldName = "ThisIsAUniqueField"
		);

		DynamicDataMapping.addFieldFormTemplateSpecific(
			field = "Fieldset",
			fieldFieldLabel = "This is not a unique field"
		);

		DynamicDataMapping.viewCanAddField(field = "Separator");

		DynamicDataMapping.deleteField(
			fieldFieldLabel = "Separator",
			fieldName = "Separator"
		);

		DynamicDataMapping.viewCanAddField(field = "This is a unique field");

		DynamicDataMapping.addFieldFormTemplateSpecific(
			field = "This is a unique field"
		);

		DynamicDataMapping.addFieldFormTemplateSpecific(
			field = "Fieldset",
			fieldFieldLabel = "This is not a unique field"
		);

		DynamicDataMapping.viewCannotAddField(field = "This is a unique field");

		DDLDataDefinition.save();
	}

	@description = "This is a use case for LPS-65479."
	@priority = "4"
	test RemoveRepeatableDateField {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Dynamic Data Lists"
		);

		DDLDataDefinition.addCP();

		DynamicDataMapping.addField(
			field = "Date",
			fieldFieldLabel = "Date",
			fieldName = "Date"
		);

		DynamicDataMapping.editFieldRepeatable(fieldFieldLabel = "Date");

		DDLDataDefinition.save();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Dynamic Data Lists"
		);

		DDLList.addCP();

		DDLDataDefinition.selectCP();

		DDLDataDefinition.save();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Dynamic Data Lists"
		);

		DDLRecord.addCP();

		DDLRecord.populateFieldDate(
			ddlRecordFieldData = "04/01/2018",
			fieldFieldLabel = "Date",
			fieldName = "Date"
		);

		DDLRecord.addRepeatableField(fieldName = "Date");

		DDLRecord.addRepeatableField(fieldName = "Date");

		DDLRecord.deleteRepeatableField(fieldName = "Date", fieldNumber = "2");

		DDLRecord.deleteRepeatableField(fieldName = "Date", fieldNumber = "2");

		DDLRecord.viewFieldRepeatedNotPresent(
			ddlRecordFieldData = "04/01/2018",
			fieldName = "Date"
		);

		PortletEntry.publish();
	}

	@priority = "3"
	test RemoveRepeatableFieldAndAssertOrderInTranslation {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Dynamic Data Lists"
		);

		DDLDataDefinition.addCP(ddlDataDefinitionName = "Data Definition");

		DynamicDataMapping.addField(
			field = "Text",
			fieldFieldLabel = "Text",
			fieldName = "Text"
		);

		DynamicDataMapping.editFieldRepeatable(fieldFieldLabel = "Text");

		DDLDataDefinition.save();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Dynamic Data Lists"
		);

		DDLList.addCP(ddlListName = "Dynamic Data List");

		DDLDataDefinition.selectCP(ddlDataDefinitionName = "Data Definition");

		DDLDataDefinition.save();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Dynamic Data Lists"
		);

		DDLRecord.addCP(
			ddlDataDefinitionName = "Data Definition",
			ddlListName = "Dynamic Data List"
		);

		DDLRecord.addRepeatableField(fieldName = "Text");

		DDLRecord.addRepeatableField(fieldName = "Text");

		DDLRecord.populateFieldText(ddlRecordFieldData = "Content", fieldName = "Text");

		DDLRecord.saveAsDraftCP();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Dynamic Data Lists"
		);

		DDLRecord.editCP(
			ddlListName = "Dynamic Data List",
			ddlRecordFieldData = "Content, Content 2, Content 3"
		);

		DDLRecord.addTranslation(localizedLanguage = "Catalan (Spain)");

		DDLRecord.populateTranslationFieldText(
			ddlRecordFieldData = "Contenido",
			fieldName = "Text"
		);

		PortletEntry.publish();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Dynamic Data Lists"
		);

		DDLRecord.editCP(
			ddlListName = "Dynamic Data List",
			ddlRecordFieldData = "Content, Content 2, Content 3"
		);

		DDLRecord.deleteRepeatableField(fieldName = "Text", fieldNumber = "2");

		PortletEntry.publish();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Dynamic Data Lists"
		);

		DDLRecord.editCP(
			ddlListName = "Dynamic Data List",
			ddlRecordFieldData = "Content, Content 3"
		);

		DDLRecord.editTranslation(localizedLanguage = "Catalan (Spain)");

		DDLRecord.viewTextFieldRepeated(
			ddlRecordFieldData1 = "Contenido",
			ddlRecordFieldData2 = "Contenido 3"
		);
	}

	@description = "This is a use case for LPS-69667."
	@priority = "2"
	test SelectLinkToPagePage {
		Navigator.openURL();

		for (var pageName : list "P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12") {
			Page.add(pageName = "${pageName}");
		}

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Dynamic Data Lists"
		);

		DDLDataDefinition.addCP(ddlDataDefinitionName = "Link To Page Data Definition");

		DynamicDataMapping.addField(
			field = "Link to Page",
			fieldFieldLabel = "Link to Page",
			fieldName = "LinkToPage"
		);

		DDLDataDefinition.save();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Dynamic Data Lists"
		);

		DDLList.addCP(ddlListName = "List Name");

		DDLDataDefinition.selectCP(
			ddlDataDefinitionName = "Link To Page Data Definition"
		);

		DDLDataDefinition.save();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Dynamic Data Lists"
		);

		DDLRecord.addCP(
			ddlDataDefinitionName = "Link To Page Data Definition",
			ddlListName = "List Name"
		);

		DDLRecord.populateFieldLinkToPage(
			ddlRecordFieldData = "P10",
			fieldName = "LinkToPage",
			pagePrivacy = "Public"
		);

		PortletEntry.publish();

		DDLRecord.viewFirstFieldCP(
			ddlRecordFieldData = "P10",
			fieldFieldLabel = "Link to Page"
		);
	}

	@description = "This is a use case for LPS-48743."
	@priority = "3"
	test TemplateAddDeletedField {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Dynamic Data Lists"
		);

		DDLDataDefinition.addCP(ddlDataDefinitionName = "Data Definition");

		DynamicDataMapping.addField(
			field = "Text",
			fieldFieldLabel = "Text",
			fieldName = "Text"
		);

		DynamicDataMapping.addField(
			field = "Text Box",
			fieldFieldLabel = "Text Box",
			fieldName = "TextBox"
		);

		DDLDataDefinition.save();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Dynamic Data Lists"
		);

		DDLTemplate.addFormTemplateCP(
			ddlDataDefinitionName = "Data Definition",
			ddlFormTemplateName = "Form Template Name"
		);

		DynamicDataMapping.viewCannotAddField(field = "Text Box");

		DynamicDataMapping.deleteField(fieldFieldLabel = "Text Box");

		DynamicDataMapping.viewCanAddField(field = "Text Box");

		DDLTemplate.saveAndContinueFormTemplateCP();

		DynamicDataMapping.viewCanAddField(field = "Text Box");

		DynamicDataMapping.addFieldWithoutRename(
			field = "Text Box",
			fieldFieldLabel = "Text Box"
		);

		DynamicDataMapping.viewField(
			fieldFieldLabel = "Text Box",
			fieldName = "TextBox"
		);

		DDLDataDefinition.save();
	}

	@description = "This is a use case for LPS-52865."
	@priority = "4"
	test ViewCannotSaveWithDuplicateFieldNames {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Dynamic Data Lists"
		);

		DDLDataDefinition.addCP(
			ddlDataDefinitionDescription = "Data Definition Description",
			ddlDataDefinitionName = "Data Definition Name"
		);

		DynamicDataMapping.addField(
			field = "Text",
			fieldFieldLabel = "Text",
			fieldName = "Text"
		);

		DynamicDataMapping.addFieldNested(
			field = "Text",
			fieldFieldLabel = "Text",
			fieldName = "Text"
		);

		DynamicDataMapping.editFieldNestedWithDuplicateName(
			fieldName = "Text",
			fieldNameEdit = "Text2"
		);

		DynamicDataMapping.viewFieldNameNested(fieldNameNested = "Text2");
	}

	@description = "This is a use case for LPS-66228."
	@priority = "4"
	test ViewDisplayTemplateClassLinks {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Dynamic Data Lists"
		);

		DDLNavigator.gotoManageTemplates(ddlDataDefinitionName = "Contacts");

		LexiconEntry.gotoAddMenuItem(menuItem = "Add Display Template");

		var siteName = TestCase.getSiteName(siteName = "${siteName}");

		for (var fieldName : list "Device,Company,Permission Checker") {
			var key_fieldName = "${fieldName}";

			if ("${fieldName}" == "Permission Checker") {
				MouseOver(locator1 = "DDMEditTemplate#SCRIPT_UTIL");

				var fieldName = "PermissionChecker";
			}
			else {
				MouseOver(locator1 = "DDMEditTemplate#SCRIPT_VARIABLE");
			}

			Pause(locator1 = "1000");

			AssertClick(
				locator1 = "JavaDocs#TOOLTIP_JAVA_CLASS_LINK",
				value1 = "${fieldName}"
			);

			SelectWindow.selectPopUp(locator1 = "null");

			AssertTextEquals(locator1 = "JavaDocs#JAVA_CLASS_NAME", value1 = "${fieldName}");

			Close.closeAndSelectWindow(
				locator1 = "title=New Template for Structure: Contacts - ${siteName}"
			);
		}
	}

	@description = "This is a use case for LPS-48913."
	@priority = "3"
	test ViewFieldsNestedInDDLRecord {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Dynamic Data Lists"
		);

		DDLDataDefinition.addCP(ddlDataDefinitionName = "Data Definition Name");

		DynamicDataMapping.addField(
			field = "Text",
			fieldFieldLabel = "Text",
			fieldName = "Text"
		);

		DynamicDataMapping.addFieldNested(
			field = "Integer",
			fieldFieldLabel = "Integer",
			fieldName = "Integer"
		);

		DDLDataDefinition.save();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Dynamic Data Lists"
		);

		DDLList.addCP(
			ddlListDescription = "List Description",
			ddlListName = "List Name"
		);

		DDLDataDefinition.selectCP(ddlDataDefinitionName = "Data Definition Name");

		DDLDataDefinition.save();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Dynamic Data Lists"
		);

		DDLRecord.addCP(
			ddlDataDefinitionName = "Data Definition Name",
			ddlListName = "List Name"
		);

		DDLRecord.populateFieldText(ddlRecordFieldData = "Text", fieldName = "Text");

		DDLRecord.populateFieldInteger(
			ddlRecordFieldData = "123",
			fieldName = "Integer"
		);

		PortletEntry.publish();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Dynamic Data Lists"
		);

		DDLNavigator.gotoListRecords(ddlListName = "List Name");

		DDLRecord.viewFieldCP(
			ddlRecordFieldData = "Text",
			ddlRecordNestedFieldData = "123",
			fieldFieldLabel = "Text",
			nestedFieldFieldLabel = "Integer"
		);
	}

	@description = "This is a use case for LPS-48591."
	@priority = "3"
	test ViewFormTemplateFieldsAfterBackNavigation {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Dynamic Data Lists"
		);

		DDLDataDefinition.addCP(ddlDataDefinitionName = "Data Definition");

		DynamicDataMapping.addField(
			field = "Text",
			fieldFieldLabel = "Text",
			fieldName = "Text"
		);

		DynamicDataMapping.addField(
			field = "Text Box",
			fieldFieldLabel = "Text Box",
			fieldName = "TextBox"
		);

		DDLDataDefinition.save();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Dynamic Data Lists"
		);

		DDLTemplate.addFormTemplateCP(
			ddlDataDefinitionName = "Data Definition",
			ddlFormTemplateName = "Data Definition Form Template Name"
		);

		DynamicDataMapping.viewCannotAddField(field = "Text Box");

		DynamicDataMapping.viewCannotAddField(field = "Text");

		DynamicDataMapping.viewCanAddField(field = "Separator");

		DynamicDataMapping.viewField(
			field = "Text",
			fieldFieldLabel = "Text",
			fieldName = "Text"
		);

		DynamicDataMapping.viewField(
			field = "Text Box",
			fieldFieldLabel = "Text Box",
			fieldName = "TextBox"
		);

		DDLTemplate.addFormTemplateViaBackButton(
			ddlFormTemplateName = "Data Definition Form Template Name"
		);

		DynamicDataMapping.viewCannotAddField(field = "Text Box");

		DynamicDataMapping.viewCannotAddField(field = "Text");

		DynamicDataMapping.viewCanAddField(field = "Separator");

		DynamicDataMapping.viewField(
			field = "Text",
			fieldFieldLabel = "Text",
			fieldName = "Text"
		);

		DynamicDataMapping.viewField(
			field = "Text Box",
			fieldFieldLabel = "Text Box",
			fieldName = "TextBox"
		);
	}

	@description = "This is a use case for LPS-67478 ."
	@priority = "3"
	test ViewLinkToPageBreadcrumb {
		Page.add(pageName = "Parent Page Name");

		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Sites"
		);

		Page.addChild(
			page = "Public Pages",
			pageName = "Parent Page Name",
			siteChildPageName = "Child Page Name"
		);

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Dynamic Data Lists"
		);

		DDLDataDefinition.addCP(ddlDataDefinitionName = "Data Definition");

		DynamicDataMapping.addField(
			field = "Link to Page",
			fieldFieldLabel = "Link to Page",
			fieldName = "LinkToPage"
		);

		DDLDataDefinition.save();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Dynamic Data Lists"
		);

		DDLDataDefinition.viewCP(
			ddlDataDefinitionName = "Data Definition",
			fieldFieldLabel = "Link to Page"
		);

		DynamicDataMapping.viewField(
			field = "Link to Page",
			fieldFieldLabel = "Link to Page",
			fieldName = "LinkToPage"
		);

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Dynamic Data Lists"
		);

		DDLList.addCP(ddlListName = "List Name");

		DDLDataDefinition.selectCP(ddlDataDefinitionName = "Data Definition");

		DDLDataDefinition.save();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Dynamic Data Lists"
		);

		DDLRecord.addCP(
			ddlDataDefinitionName = "Data Definition",
			ddlListName = "List Name"
		);

		DDLRecord.populateFieldLinkToPage(
			ddlRecordFieldData = "Child Page Name",
			fieldName = "LinkToPage",
			pagePrivacy = "Public",
			parentPage = "Parent Page Name"
		);

		DDLRecord.gotoLinkToPageSelect(fieldName = "LinkToPage");

		DDLRecord.viewLinkToPageBreadcrumbCount(count = "2");

		DDLRecord.gotoLinkToPageNavItem(pagePrivacy = "Private");

		DDLRecord.gotoLinkToPageNavItem(pagePrivacy = "Public");

		DDLRecord.gotoLinkToPageChildPages(parentPage = "Parent Page Name");

		DDLRecord.selectLinkToPageRadio(ddlRecordFieldData = "Child Page Name");

		DDLRecord.viewLinkToPageBreadcrumbCount(count = "2");
	}

	@description = "This is a use case for LPS-57993"
	@priority = "3"
	test ViewMultipleDDLRecordsInAssetPublisherAndSortByModifiedDate {
		Page.add(pageName = "Asset Publisher Page");

		Navigator.gotoPage(pageName = "Asset Publisher Page");

		Portlet.addPG(portletName = "Asset Publisher");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Dynamic Data Lists"
		);

		DDLDataDefinition.addCP();

		DynamicDataMapping.addField(
			field = "Text",
			fieldFieldLabel = "Text Label",
			fieldName = "TextName"
		);

		DDLDataDefinition.save();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Dynamic Data Lists"
		);

		DDLList.addCP();

		DDLDataDefinition.selectCP();

		DDLDataDefinition.save();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Dynamic Data Lists"
		);

		DDLNavigator.gotoListRecords();

		for (var ddlRecordFieldData : list "firstRecord,secondText,thirdTest") {
			DDLNavigator.gotoAddListRecord();

			DDLRecord.populateFieldText(
				ddlRecordFieldData = "${ddlRecordFieldData}",
				fieldFieldLabel = "${fieldFieldLabel}",
				fieldName = "TextName"
			);

			PortletEntry.publish();
		}

		Navigator.gotoPage(pageName = "Asset Publisher Page");

		AssetPublisherPortlet.viewMultipleDDLRecordsViaAP(
			ddlRecordFieldData1 = "thirdTest",
			ddlRecordFieldData2 = "secondText",
			ddlRecordFieldData3 = "firstRecord"
		);

		AssetPublisherPortlet.configureSelectedPG(
			selectedAsset = "Dynamic Data Lists Record"
		);

		Navigator.gotoPage(pageName = "Asset Publisher Page");

		AssetPublisherPortlet.configureAssetDisplayOrderPG(
			fieldNameOrder = "Modified Date",
			sortOrder = "Ascending"
		);

		Navigator.gotoPage(pageName = "Asset Publisher Page");

		AssetPublisherPortlet.viewMultipleDDLRecordsViaAP(
			ddlRecordFieldData1 = "firstRecord",
			ddlRecordFieldData2 = "secondText",
			ddlRecordFieldData3 = "thirdTest"
		);
	}

	@description = "This is a use case for LPS-51538."
	@priority = "3"
	test ViewNestedFieldDoesNotDisplayInRecordTable {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Dynamic Data Lists"
		);

		DDLDataDefinition.addCP(
			ddlDataDefinitionDescription = "Data Definition Description",
			ddlDataDefinitionName = "Data Definition"
		);

		DynamicDataMapping.addField(
			field = "Text",
			fieldFieldLabel = "Text",
			fieldName = "Text"
		);

		DynamicDataMapping.addFieldNested(
			field = "Integer",
			fieldFieldLabel = "Integer",
			fieldName = "Integer"
		);

		DDLDataDefinition.save();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Dynamic Data Lists"
		);

		DDLList.addCP(ddlListName = "Dynamic Data List");

		DDLDataDefinition.selectCP(ddlDataDefinitionName = "Data Definition");

		DDLDataDefinition.save();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Dynamic Data Lists"
		);

		DDLRecord.addCP(
			ddlDataDefinitionName = "Data Definition",
			ddlListName = "Dynamic Data List"
		);

		DDLRecord.populateFieldText(
			ddlRecordFieldData = "Test Data",
			fieldName = "Text"
		);

		DDLRecord.populateFieldInteger(
			ddlRecordFieldData = "253",
			fieldName = "Integer"
		);

		PortletEntry.publish();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Dynamic Data Lists"
		);

		DDLNavigator.gotoListRecords(ddlListName = "Dynamic Data List");

		DDLRecord.viewFieldCP(
			ddlRecordFieldData = "Test Data",
			ddlRecordNestedFieldData = "253",
			fieldFieldLabel = "Text",
			nestedFieldFieldLabel = "Integer"
		);
	}

	@description = "This is a use case for LPS-48969."
	@priority = "3"
	test ViewNestedFieldEntryWithBlankParentField {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Dynamic Data Lists"
		);

		DDLDataDefinition.addCP(
			ddlDataDefinitionDescription = "Data Definition Description",
			ddlDataDefinitionName = "Data Definition"
		);

		DynamicDataMapping.addField(
			field = "Text",
			fieldFieldLabel = "Text",
			fieldName = "Text"
		);

		DynamicDataMapping.addFieldNested(
			field = "Integer",
			fieldFieldLabel = "Integer",
			fieldName = "Integer"
		);

		DDLDataDefinition.save();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Dynamic Data Lists"
		);

		DDLList.addCP(ddlListName = "Dynamic Data List");

		DDLDataDefinition.selectCP(ddlDataDefinitionName = "Data Definition");

		DDLDataDefinition.save();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Dynamic Data Lists"
		);

		DDLRecord.addCP(
			ddlDataDefinitionName = "Data Definition",
			ddlListName = "Dynamic Data List"
		);

		DDLRecord.populateFieldInteger(
			ddlRecordFieldData = "253",
			fieldName = "Integer"
		);

		PortletEntry.publish();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Dynamic Data Lists"
		);

		DDLNavigator.gotoListRecords(ddlListName = "Dynamic Data List");

		DDLRecord.viewFieldCP(
			ddlRecordFieldData = "",
			ddlRecordNestedFieldData = "253",
			fieldFieldLabel = "Text",
			nestedFieldFieldLabel = "Integer"
		);
	}

	@description = "This is a use case for LPS-63290."
	@priority = "3"
	test ViewRepeatableNestedFields {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Dynamic Data Lists"
		);

		DDLDataDefinition.addCP(ddlDataDefinitionName = "Data Definition Name");

		DynamicDataMapping.addField(
			field = "Text",
			fieldFieldLabel = "Text",
			fieldName = "Text"
		);

		DynamicDataMapping.addFieldNested(
			field = "Documents and Media",
			fieldFieldLabel = "Documents and Media",
			fieldName = "DocumentsAndMedia"
		);

		DynamicDataMapping.editFieldRepeatable(fieldFieldLabel = "Text");

		DDLDataDefinition.save();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Dynamic Data Lists"
		);

		DDLList.addCP(
			ddlListDescription = "List Description",
			ddlListName = "List Name"
		);

		DDLDataDefinition.selectCP(ddlDataDefinitionName = "Data Definition Name");

		DDLDataDefinition.save();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Dynamic Data Lists"
		);

		DDLRecord.addCP(
			ddlDataDefinitionName = "Data Definition Name",
			ddlListName = "List Name"
		);

		DDLRecord.addRepeatableField(fieldName = "Text");

		DDLRecord.viewNestedFieldsRepeating(
			nestedChildFieldFieldName = "DocumentsAndMedia",
			nestedParentFieldFieldName = "Text"
		);
	}

	@description = "This is a use case for LPS-60155."
	@priority = "5"
	test ViewRequiredNestedDocumentsAndMediaField {
		property portal.acceptance = "true";
		property testray.component.names = "Training";

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Dynamic Data Lists"
		);

		DDLDataDefinition.addCP(ddlDataDefinitionName = "Data Definition Name");

		DynamicDataMapping.addField(
			field = "Text",
			fieldFieldLabel = "Text",
			fieldName = "Text"
		);

		DynamicDataMapping.editFieldRepeatable(fieldFieldLabel = "Text");

		DynamicDataMapping.editFieldRequired(fieldFieldLabel = "Text");

		DynamicDataMapping.addFieldNested(
			field = "Documents and Media",
			fieldFieldLabel = "Documents and Media",
			fieldName = "DocumentsAndMedia"
		);

		DynamicDataMapping.editFieldRequired(fieldFieldLabel = "Documents and Media");

		DDLDataDefinition.save();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Dynamic Data Lists"
		);

		DDLList.addCP(
			ddlListDescription = "List Description",
			ddlListName = "List Name"
		);

		DDLDataDefinition.selectCP(ddlDataDefinitionName = "Data Definition Name");

		DDLDataDefinition.save();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Dynamic Data Lists"
		);

		DDLRecord.addCP(
			ddlDataDefinitionName = "Data Definition Name",
			ddlListName = "List Name"
		);

		DDLRecord.populateFieldText(ddlRecordFieldData = "Text", fieldName = "Text");

		DDLRecord.populateFieldDocumentsAndMediaChooseFromDocumentLibrary(
			document = "Document_1.txt",
			fieldName = "DocumentsAndMedia"
		);

		DDLRecord.addRepeatableField(fieldName = "Text");

		DDLRecord.populateFieldText(ddlRecordFieldData = "Text", fieldName = "Text");

		Button.clickPublish();

		Alert.viewRequiredField();

		DDLRecord.populateFieldDocumentsAndMediaChooseFromDocumentLibrary(
			document = "Document_1.txt",
			fieldName = "DocumentsAndMedia",
			parentFieldName = "Text"
		);

		PortletEntry.publish();
	}

	@description = "This is a use case for LPS-51684."
	@priority = "4"
	test ViewUniqueFieldLabels {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Dynamic Data Lists"
		);

		DDLDataDefinition.addCP();

		DynamicDataMapping.addField(
			field = "Text",
			fieldFieldLabel = "Text1",
			fieldName = "Text1"
		);

		DynamicDataMapping.addField(
			field = "Text",
			fieldFieldLabel = "Text2",
			fieldName = "Text2"
		);

		DDLDataDefinition.save();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Dynamic Data Lists"
		);

		DDLDataDefinition.viewCP(fieldFieldLabel = "Text1");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Dynamic Data Lists"
		);

		DDLDataDefinition.viewCP(fieldFieldLabel = "Text2");
	}
}