@component-name = "portal-workflow"
definition {
	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Workflow";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			User.firstLoginPG();

			User.tearDownCP();

			BlogsEntry.tearDownCP();

			WebContent.tearDownCP();

			WikiNode.tearDownCP();

			WikiPage.tearDownCP();

			Page.tearDownPG();

			Workflow.tearDownPortalWorkflow();

			Workflow.tearDownSiteWorkflow();

			Workflow.tearDownSpecificWorkflowDefinition(
				workflowDefinitionTitle = "Single Approver Edited"
			);

			Workflow.tearDownWorkflowDefinitionsViaWorkflowCP();

			Site.tearDownCP();
		}
	}

	@priority = "4"
	test AddBlogsEntriesWithPortalScopeWorkflowAndAssertWorkflowScope {
		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Control Panel",
			portlet = "Workflow Configuration"
		);

		Workflow.configureWorkflow(
			workflowDefinition = "Single Approver (Version 1)",
			workflowResourceValue = "Blogs Entry"
		);

		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Sites"
		);

		Site.addBlankCP(siteName = "Site Name");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Blogs"
		);

		Blogs.addWithWorkflow(
			entryContent = "Blogs Entry Content - Liferay",
			entrySubtitle = "Subtitle",
			entryTitle = "Blogs Entry Title - Liferay"
		);

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Blogs"
		);

		BlogsEntry.viewWithWorkflowCP(
			entryContent = "Blogs Entry Content - Liferay",
			entryTitle = "Blogs Entry Title - Liferay"
		);

		Page.gotoMyAccount(portletName = "My Workflow Tasks");

		Workflow.assignToMeTaskByActions(
			workflowAssetTitle = "Blogs Entry Title - Liferay",
			workflowAssetType = "Blogs Entry",
			workflowTask = "Review"
		);

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Blogs"
		);

		BlogsEntry.viewWithWorkflowCP(
			entryContent = "Blogs Entry Content - Liferay",
			entryTitle = "Blogs Entry Title - Liferay"
		);

		Page.gotoMyAccount(portletName = "My Workflow Tasks");

		Workflow.approveTaskByActions(
			workflowAssetTitle = "Blogs Entry Title - Liferay",
			workflowAssetType = "Blogs Entry",
			workflowTask = "Review"
		);

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Blogs"
		);

		BlogsEntry.viewEntryTable(entryTitle = "Blogs Entry Title - Liferay");

		BlogsNavigator.gotoEntryCP(entryTitle = "Blogs Entry Title - Liferay");

		BlogsEntry.viewEntry(
			entryContent = "Blogs Entry Content - Liferay",
			entryTitle = "Blogs Entry Title - Liferay"
		);

		ProductMenu.gotoSite(site = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Blogs"
		);

		Blogs.addWithWorkflow(
			entryContent = "Blogs Entry Content - Site Name",
			entrySubtitle = "Subtitle",
			entryTitle = "Blogs Entry Title - Site Name"
		);

		ProductMenu.gotoSite(site = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Blogs"
		);

		BlogsEntry.viewWithWorkflowCP(
			entryContent = "Blogs Entry Content - Site Name",
			entryTitle = "Blogs Entry Title - Site Name"
		);

		Page.gotoMyAccount(portletName = "My Workflow Tasks");

		Workflow.assignToMeTaskByActions(
			workflowAssetTitle = "Blogs Entry Title - Site Name",
			workflowAssetType = "Blogs Entry",
			workflowTask = "Review"
		);

		ProductMenu.gotoSite(site = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Blogs"
		);

		BlogsEntry.viewWithWorkflowCP(
			entryContent = "Blogs Entry Content - Site Name",
			entryTitle = "Blogs Entry Title - Site Name"
		);

		Page.gotoMyAccount(portletName = "My Workflow Tasks");

		Workflow.approveTaskByActions(
			workflowAssetTitle = "Blogs Entry Title - Site Name",
			workflowAssetType = "Blogs Entry",
			workflowTask = "Review"
		);

		ProductMenu.gotoSite(site = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Blogs"
		);

		BlogsEntry.viewEntryTable(entryTitle = "Blogs Entry Title - Site Name");

		BlogsNavigator.gotoEntryCP(entryTitle = "Blogs Entry Title - Site Name");

		BlogsEntry.viewEntry(
			entryContent = "Blogs Entry Content - Site Name",
			entryTitle = "Blogs Entry Title - Site Name"
		);

		Page.gotoMyAccount(portletName = "My Workflow Tasks");

		Workflow.viewCompletedTask(
			workflowAssetTitle = "Blogs Entry Title - Liferay",
			workflowAssetType = "Blogs Entry",
			workflowTask = "Review"
		);

		Workflow.viewCompletedTask(
			workflowAssetTitle = "Blogs Entry Title - Site Name",
			workflowAssetType = "Blogs Entry",
			workflowTask = "Review"
		);
	}

	@priority = "4"
	test AddBlogsEntriesWithSiteScopeWorkflowAndAssertWorkflowScope {
		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Sites"
		);

		Site.addBlankCP(siteName = "Site Name");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Workflow Configuration"
		);

		Workflow.configureWorkflow(
			workflowDefinition = "Single Approver (Version 1)",
			workflowResourceValue = "Blogs Entry"
		);

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Blogs"
		);

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Blogs"
		);

		Blogs.addWithWorkflow(
			entryContent = "Blogs Entry Content - Liferay",
			entrySubtitle = "Subtitle",
			entryTitle = "Blogs Entry Title - Liferay"
		);

		Page.gotoMyAccount(portletName = "My Workflow Tasks");

		Workflow.assignToMeTaskByActions(
			workflowAssetTitle = "Blogs Entry Title - Liferay",
			workflowAssetType = "Blogs Entry",
			workflowTask = "Review"
		);

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Blogs"
		);

		Page.gotoMyAccount(portletName = "My Workflow Tasks");

		Workflow.approveTaskByActions(
			workflowAssetTitle = "Blogs Entry Title - Liferay",
			workflowAssetType = "Blogs Entry",
			workflowTask = "Review"
		);

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Blogs"
		);

		ProductMenu.gotoSite(site = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Blogs"
		);

		ProductMenu.gotoSite(site = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Blogs"
		);

		Page.gotoMyAccount(portletName = "My Workflow Tasks");

		Workflow.viewCompletedTask(
			workflowAssetTitle = "Blogs Entry Title - Liferay",
			workflowAssetType = "Blogs Entry",
			workflowTask = "Review"
		);

		Workflow.viewCompletedTasksTaskNotPresentCP(
			workflowAssetTitle = "Blogs Entry Title - Site Name"
		);
	}

	@priority = "5"
	test AddDDLRecordWithDoubleApproverDefinition {
		property portal.acceptance = "true";
		property testray.component.names = "Training";

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Control Panel",
			portlet = "Workflow Definition"
		);

		Workflow.uploadDefinition(
			workflowDefinitionFile = "workflow_definition_legal_marketing.xml",
			workflowDefinitionTitle = "Double Approver Definition"
		);

		Workflow.viewDefinition(
			workflowDefinitionName = "Legal and Marketing Approval",
			workflowDefinitionTitle = "Double Approver Definition",
			workflowDefinitionVersionNumber = "1"
		);

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Dynamic Data Lists"
		);

		DDLDataDefinition.addCP();

		DynamicDataMapping.addField(
			field = "Boolean",
			fieldFieldLabel = "Boolean",
			fieldName = "Boolean"
		);

		DDLDataDefinition.save();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Dynamic Data Lists"
		);

		DDLList.addCP(workflowDefinition = "Legal and Marketing Approval (Version 1)");

		DDLDataDefinition.selectCP();

		DDLDataDefinition.save();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Dynamic Data Lists"
		);

		DDLRecord.addCP();

		DDLRecord.populateFieldBoolean(
			ddlRecordFieldData = "Yes",
			fieldFieldLabel = "Boolean",
			fieldName = "Boolean"
		);

		DDLRecord.submitForPublication();

		Page.gotoMyAccount(portletName = "My Workflow Tasks");

		Workflow.assignToMeTaskByActions(
			ddlDataDefinitionName = "Data Definition Name",
			workflowAssetTitle = "List Name",
			workflowAssetType = "Dynamic Data Lists Record",
			workflowTask = "marketing-review"
		);

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Dynamic Data Lists"
		);

		DDLNavigator.gotoListRecords();

		DDLRecord.viewFirstFieldCP(
			ddlRecordFieldData = "Yes",
			field = "Boolean",
			fieldFieldLabel = "Boolean",
			fieldName = "Boolean",
			workflowStatus = "marketing-review"
		);

		Page.gotoMyAccount(portletName = "My Workflow Tasks");

		Workflow.approveTaskByActions(
			ddlDataDefinitionName = "Data Definition Name",
			workflowAssetTitle = "List Name",
			workflowAssetType = "Dynamic Data Lists Record",
			workflowDefinitionTask = "Marketing Approved",
			workflowTask = "marketing-review"
		);

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Dynamic Data Lists"
		);

		DDLNavigator.gotoListRecords();

		DDLRecord.viewFirstFieldCP(
			ddlRecordFieldData = "Yes",
			field = "Boolean",
			fieldFieldLabel = "Boolean",
			fieldName = "Boolean",
			workflowStatus = "legal-review"
		);

		Page.gotoMyAccount(portletName = "My Workflow Tasks");

		Workflow.assignToMeTaskByActions(
			ddlDataDefinitionName = "Data Definition Name",
			workflowAssetTitle = "List Name",
			workflowAssetType = "Dynamic Data Lists Record",
			workflowTask = "legal-review"
		);

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Dynamic Data Lists"
		);

		DDLNavigator.gotoListRecords();

		DDLRecord.viewFirstFieldCP(
			ddlRecordFieldData = "Yes",
			field = "Boolean",
			fieldFieldLabel = "Boolean",
			fieldName = "Boolean",
			workflowStatus = "legal-review"
		);

		Page.gotoMyAccount(portletName = "My Workflow Tasks");

		Workflow.approveTaskByActions(
			ddlDataDefinitionName = "Data Definition Name",
			workflowAssetTitle = "List Name",
			workflowAssetType = "Dynamic Data Lists Record",
			workflowDefinitionTask = "Legal Approval",
			workflowTask = "legal-review"
		);

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Dynamic Data Lists"
		);

		DDLNavigator.gotoListRecords(ddlListName = "${ddlListName}");

		DDLRecord.viewFirstFieldCP(
			ddlRecordFieldData = "Yes",
			field = "Boolean",
			fieldFieldLabel = "Boolean",
			fieldName = "Boolean"
		);
	}

	@priority = "3"
	test AddDocumentsAndMediaWithScriptedAssignmentDefinition {
		var siteName = TestCase.getSiteName(siteName = "${siteName}");

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Control Panel",
			portlet = "Workflow Definition"
		);

		Workflow.uploadDefinition(
			workflowDefinitionFile = "workflow_definition_scripted_assignments.xml",
			workflowDefinitionTitle = "Scripted Assignments"
		);

		Workflow.viewDefinition(
			workflowDefinitionName = "Scripted Single Approver",
			workflowDefinitionTitle = "Scripted Assignments",
			workflowDefinitionVersionNumber = "1"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		Organization.addCP(orgName = "Organization Name", orgType = "Organization");

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		UsersAndOrganizationsNavigator.gotoOrganizations();

		Organization.addSiteCP(orgName = "Organization Name");

		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Sites"
		);

		Page.add(
			pageName = "Organization Page",
			siteName = "Organization Name",
			sitePagePrivacy = "Public"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.addCP(
			userEmailAddress = "userea1@liferay.com",
			userFirstName = "userfn1",
			userLastName = "userln1",
			userScreenName = "usersn1"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.editPasswordCP(
			userEmailAddress = "userea1@liferay.com",
			userScreenName = "usersn1"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.editUserOrganizationCP(
			orgName = "Organization Name",
			userScreenName = "usersn1"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.assignOrgRoleCP(
			roleName = "Organization Content Reviewer",
			userScreenName = "usersn1"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.addCP(
			userEmailAddress = "userea2@liferay.com",
			userFirstName = "userfn2",
			userLastName = "userln2",
			userScreenName = "usersn2"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.editPasswordCP(
			userEmailAddress = "userea2@liferay.com",
			userScreenName = "usersn2"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.editUserSiteCP(siteName = "${siteName}", userScreenName = "usersn2");

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.assignSiteRoleCP(
			siteRoleName = "Site Content Reviewer",
			userScreenName = "usersn2"
		);

		Navigator.openSiteURL(siteName = "Organization Name");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Documents and Media"
		);

		Workflow.configureWorkflowViaPortlet(
			workflowDefinition = "Scripted Single Approver (Version 1)"
		);

		Navigator.openSiteURL(siteName = "Organization Name");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Documents and Media"
		);

		DMDocument.addWithWorkflowCP(
			dmDocumentDescription = "DM Document Description",
			dmDocumentFile = "Document_1.txt",
			dmDocumentTitle = "DM Document Organization"
		);

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Documents and Media"
		);

		Workflow.configureWorkflowViaPortlet(
			workflowDefinition = "Scripted Single Approver (Version 1)"
		);

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Documents and Media"
		);

		DMDocument.addWithWorkflowCP(
			dmDocumentDescription = "DM Document Description",
			dmDocumentFile = "Document_2.txt",
			dmDocumentTitle = "DM Document Liferay"
		);

		Page.gotoMyAccount(portletName = "My Workflow Tasks");

		Workflow.viewTaskAssignedToMyRoles(
			workflowAssetTitle = "DM Document Liferay",
			workflowAssetType = "Document",
			workflowTask = "Review"
		);

		Workflow.viewTaskAssignedToMyRoles(
			workflowAssetTitle = "DM Document Organization",
			workflowAssetType = "Document",
			workflowTask = "Review"
		);

		User.logoutAndLoginPG(
			userLoginEmailAddress = "userea1@liferay.com",
			userLoginFullName = "userfn1 userln1"
		);

		UserBar.gotoMyAccount();

		ProductMenu.gotoPortlet(
			category = "My Account",
			panel = "User",
			portlet = "My Workflow Tasks"
		);

		Workflow.viewTaskAssignedToMyRoles(
			workflowAssetTitle = "DM Document Organization",
			workflowAssetType = "Document",
			workflowTask = "Review"
		);

		Workflow.viewTaskNotPresentAssignedToMyRoles(
			workflowAssetTitle = "DM Document Liferay",
			workflowTask = "Review"
		);

		User.logoutAndLoginPG(
			userLoginEmailAddress = "userea2@liferay.com",
			userLoginFullName = "userfn2 userln2"
		);

		UserBar.gotoMyAccount();

		ProductMenu.gotoPortlet(
			category = "My Account",
			panel = "User",
			portlet = "My Workflow Tasks"
		);

		Workflow.viewTaskAssignedToMyRoles(
			workflowAssetTitle = "DM Document Liferay",
			workflowAssetType = "Document",
			workflowTask = "Review"
		);

		Workflow.viewTaskNotPresentAssignedToMyRoles(
			workflowAssetTitle = "DM Document Organization",
			workflowTask = "Review"
		);

		User.logoutAndLoginPG(
			userLoginEmailAddress = "userea1@liferay.com",
			userLoginFullName = "userfn1 userln1"
		);

		UserBar.gotoMyAccount();

		ProductMenu.gotoPortlet(
			category = "My Account",
			panel = "User",
			portlet = "My Workflow Tasks"
		);

		Workflow.assignToMeTaskByActions(
			workflowAssetTitle = "DM Document Organization",
			workflowAssetType = "Document",
			workflowTask = "Review"
		);

		Workflow.approveTaskByActions(
			workflowAssetTitle = "DM Document Organization",
			workflowAssetType = "Document",
			workflowTask = "Review"
		);

		User.logoutAndLoginPG(
			userLoginEmailAddress = "userea2@liferay.com",
			userLoginFullName = "userfn2 userln2"
		);

		UserBar.gotoMyAccount();

		ProductMenu.gotoPortlet(
			category = "My Account",
			panel = "User",
			portlet = "My Workflow Tasks"
		);

		Workflow.assignToMeTaskByActions(
			workflowAssetTitle = "DM Document Liferay",
			workflowAssetType = "Document",
			workflowTask = "Review"
		);

		Workflow.approveTaskByActions(
			workflowAssetTitle = "DM Document Liferay",
			workflowAssetType = "Document",
			workflowTask = "Review"
		);

		User.logoutAndLoginPG(
			userLoginEmailAddress = "test@liferay.com",
			userLoginFullName = "Test Test"
		);

		Navigator.openSiteURL(siteName = "Organization Name");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Documents and Media"
		);

		DMNavigator.gotoDocumentCP(dmDocumentTitle = "DM Document Organization");

		DMDocument.viewCP(dmDocumentTitle = "DM Document Organization");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Documents and Media"
		);

		DMNavigator.gotoDocumentCP(dmDocumentTitle = "DM Document Liferay");

		DMDocument.viewCP(dmDocumentTitle = "DM Document Liferay");
	}

	@priority = "4"
	test AddWebContentWithCategorySpecificDefinition {
		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Control Panel",
			portlet = "Workflow Definition"
		);

		Workflow.uploadDefinition(
			workflowDefinitionFile = "workflow_definition_category_specific.xml",
			workflowDefinitionTitle = "Category Specific"
		);

		Workflow.viewDefinition(
			workflowDefinitionName = "Category Specific Approval",
			workflowDefinitionTitle = "Category Specific",
			workflowDefinitionVersionNumber = "1"
		);

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Categories"
		);

		Vocabulary.addCP(vocabularyName = "Vocabulary Name");

		Category.addCP(categoryName = "legal", vocabularyName = "Vocabulary Name");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Categories"
		);

		Category.addCP(categoryName = "outlook", vocabularyName = "Vocabulary Name");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		Workflow.configureWorkflowViaFolderInfo(
			workflowDefinition = "Category Specific Approval (Version 1)"
		);

		WebContentNavigator.gotoAddCP();

		WebContent.addCP(
			webContentContent = "legal category",
			webContentTitle = "WC With Legal Category"
		);

		WebContent.selectCategory(
			categoryName = "legal",
			vocabularyName = "Vocabulary Name"
		);

		Button.clickSubmitForPublication();

		Alert.viewSuccessMessage();

		WebContent.viewWithWorkflowCP(
			webContentContent = "legal category",
			webContentTitle = "WC With Legal Category",
			workflowTask = "legal-review"
		);

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoAddCP();

		WebContent.addCP(
			webContentContent = "both categories",
			webContentTitle = "WC With Multiple Categories"
		);

		WebContent.selectCategory(
			categoryName = "legal",
			vocabularyName = "Vocabulary Name"
		);

		WebContent.selectCategory(
			categoryName = "outlook",
			vocabularyName = "Vocabulary Name"
		);

		Button.clickSubmitForPublication();

		Alert.viewSuccessMessage();

		WebContent.viewWithWorkflowCP(
			webContentContent = "legal category",
			webContentTitle = "WC With Legal Category",
			workflowTask = "legal-review"
		);

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoAddCP();

		WebContent.addCP(
			webContentContent = "outlook category",
			webContentTitle = "WC With Outlook Category"
		);

		WebContent.selectCategory(
			categoryName = "outlook",
			vocabularyName = "Vocabulary Name"
		);

		Button.clickSubmitForPublication();

		Alert.viewSuccessMessage();

		WebContent.viewWithWorkflowCP(
			webContentContent = "outlook category",
			webContentTitle = "WC With Outlook Category",
			workflowTask = "content-review"
		);

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoAddCP();

		WebContent.addWithWorkflowCP(
			webContentContent = "no category",
			webContentTitle = "WC With No Category"
		);

		WebContent.viewWithWorkflowCP(
			webContentContent = "no category",
			webContentTitle = "WC With No Category",
			workflowTask = "content-review"
		);

		Page.gotoMyAccount(portletName = "My Workflow Tasks");

		Workflow.viewTaskAssignedToMyRoles(
			workflowAssetTitle = "WC With Legal Category",
			workflowAssetType = "Web Content Article",
			workflowTask = "legal-review"
		);

		Workflow.viewTaskAssignedToMyRoles(
			workflowAssetTitle = "WC With Multiple Categories",
			workflowAssetType = "Web Content Article",
			workflowTask = "legal-review"
		);

		Workflow.viewTaskAssignedToMyRoles(
			workflowAssetTitle = "WC With Outlook Category",
			workflowAssetType = "Web Content Article",
			workflowTask = "content-review"
		);

		Workflow.viewTaskAssignedToMyRoles(
			workflowAssetTitle = "WC With No Category",
			workflowAssetType = "Web Content Article",
			workflowTask = "content-review"
		);
	}

	@priority = "4"
	test AddWikiPageAsSiteUser {
		var siteName = TestCase.getSiteName(siteName = "${siteName}");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Workflow Configuration"
		);

		Workflow.configureWorkflow(
			workflowDefinition = "Single Approver (Version 1)",
			workflowResourceValue = "Wiki Page"
		);

		Page.add(pageName = "Wiki Page");

		Navigator.gotoPage(pageName = "Wiki Page");

		Portlet.addPG(portletName = "Wiki");

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.addCP(
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userScreenName = "usersn"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.editPasswordCP(
			userEmailAddress = "userea@liferay.com",
			userScreenName = "usersn"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.editUserSiteCP(siteName = "${siteName}", userScreenName = "usersn");

		User.logoutPG();

		User.loginUserPG(password = "test", userEmailAddress = "userea@liferay.com");

		Navigator.gotoPage(pageName = "Wiki Page");

		WikiNavigator.gotoAllPagesPG();

		WikiPage.addPageWithWorkflowPG(
			wikiPageContent = "Wiki Page Content",
			wikiPageTitle = "Wiki Page Title",
			wikiPageUsername = "userfn userln"
		);

		Navigator.gotoPage(pageName = "Wiki Page");

		WikiNavigator.gotoDraftPagesPG();

		WikiPage.viewPageWithWorkflowPG(
			wikiPageStatus = "Pending",
			wikiPageTitle = "Wiki Page Title",
			wikiPageUsername = "userfn userln"
		);

		UserBar.gotoMyAccount();

		ProductMenu.gotoPortlet(
			category = "My Account",
			panel = "User",
			portlet = "My Submissions"
		);

		var key_workflowAssetTitle = "Wiki Page Title";

		AssertTextEquals(
			locator1 = "WorkflowSubmissions#DEFINITION",
			value1 = "Single Approver"
		);

		AssertTextEquals(
			locator1 = "WorkflowSubmissions#ASSET_TITLE",
			value1 = "Wiki Page Title"
		);

		AssertTextEquals(
			locator1 = "WorkflowSubmissions#ASSET_TYPE",
			value1 = "Wiki Page"
		);

		AssertTextEquals(locator1 = "WorkflowSubmissions#STATUS", value1 = "Review");

		AssertElementPresent(locator1 = "WorkflowSubmissions#LAST_ACTIVITY_DATE");

		AssertElementPresent(locator1 = "WorkflowSubmissions#END_DATE");

		User.logoutPG();

		User.loginPG(
			password = "test",
			userEmailAddress = "test@liferay.com",
			userScreenName = "usersn"
		);

		Page.gotoMyAccount(portletName = "My Workflow Tasks");

		Workflow.assignToMeTaskByActions(
			workflowAssetTitle = "Wiki Page Title",
			workflowAssetType = "Wiki Page",
			workflowTask = "Review"
		);

		Navigator.gotoPage(pageName = "Wiki Page");

		WikiNavigator.gotoDraftPagesPG();

		WikiPage.viewPageWithWorkflowPG(
			wikiPageStatus = "Pending",
			wikiPageTitle = "Wiki Page Title",
			wikiPageUsername = "userfn userln"
		);

		Page.gotoMyAccount(portletName = "My Workflow Tasks");

		Workflow.approveTaskByActions(
			workflowAssetTitle = "Wiki Page Title",
			workflowAssetType = "Wiki Page",
			workflowTask = "Review"
		);

		Navigator.gotoPage(pageName = "Wiki Page");

		WikiNavigator.gotoPG(
			wikiPageContent = "Wiki Page Content",
			wikiPageRevision = "1.0",
			wikiPageTitle = "Wiki Page Title",
			wikiPageUsername = "userfn userln"
		);

		WikiPage.viewPG(
			wikiPageContent = "Wiki Page Content",
			wikiPageTitle = "Wiki Page Title"
		);

		User.logoutPG();

		User.loginUserPG(password = "test", userEmailAddress = "userea@liferay.com");

		Navigator.gotoPage(pageName = "Wiki Page");

		WikiNavigator.gotoPG(
			wikiPageContent = "Wiki Page Content",
			wikiPageRevision = "1.0",
			wikiPageTitle = "Wiki Page Title",
			wikiPageUsername = "userfn userln"
		);

		WikiPage.viewPG(
			wikiPageContent = "Wiki Page Content",
			wikiPageTitle = "Wiki Page Title"
		);
	}

	@priority = "3"
	test DeactivateAndActivateUploadedDefinition {
		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Control Panel",
			portlet = "Workflow Definition"
		);

		Workflow.uploadDefinition(
			workflowDefinitionFile = "workflow_definition_1.xml",
			workflowDefinitionTitle = "New Uploaded Definition"
		);

		Workflow.viewDefinition(
			workflowDefinitionName = "Uploaded Definition",
			workflowDefinitionTitle = "New Uploaded Definition",
			workflowDefinitionVersionNumber = "1"
		);

		Workflow.deactivateAddedWorkflowDefinition();

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Control Panel",
			portlet = "Workflow Definition"
		);

		Workflow.reactivateInactiveWorkflowDefinition(
			workflowDefinitionName = "Uploaded Definition"
		);
	}

	@priority = "5"
	test DeactivateAndDeleteUploadedDefinition {
		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Control Panel",
			portlet = "Workflow Definition"
		);

		Workflow.uploadDefinition(
			workflowDefinitionFile = "workflow_definition_1.xml",
			workflowDefinitionTitle = "New Uploaded Definition"
		);

		Workflow.viewDefinition(
			workflowDefinitionName = "Uploaded Definition",
			workflowDefinitionTitle = "New Uploaded Definition",
			workflowDefinitionVersionNumber = "1"
		);

		Workflow.deactivateAddedWorkflowDefinition();

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Control Panel",
			portlet = "Workflow Definition"
		);

		Workflow.deleteWorkflowDefinition();
	}

	@priority = "3"
	test ViewBlogsEntryWorkflowViaNotifications {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Workflow Configuration"
		);

		Workflow.configureWorkflow(
			workflowDefinition = "Single Approver (Version 1)",
			workflowResourceValue = "Blogs Entry"
		);

		Page.add(pageName = "Blogs Page");

		Navigator.gotoPage(pageName = "Blogs Page");

		Portlet.addPG(portletName = "Blogs");

		Blogs.addWithWorkflow(
			entryContent = "Blogs Entry Content",
			entrySubtitle = "Subtitle",
			entryTitle = "Blogs Entry Title"
		);

		Navigator.gotoPage(pageName = "Blogs Page");

		Notifications.viewBadgeCount(notificationCount = "1");

		WorkflowAsset.gotoViaNotification(assetType = "Blogs Entry", user = "Test Test");

		LexiconEntry.gotoEllipsisMenuItem(menuItem = "Assign to Me");

		Workflow.confirmAndViewSucessMessageViaDetails();

		Navigator.gotoPage(pageName = "Blogs Page");

		Notifications.viewBadgeCount(notificationCount = "0");

		Page.gotoMyAccount(portletName = "My Workflow Tasks");

		Workflow.viewTaskAssignedToMeDetails(
			workflowAssetContent = "Blogs Entry Content",
			workflowAssetTitle = "Blogs Entry Title",
			workflowAssignedTo = "Test Test",
			workflowTask = "Review"
		);

		LexiconEntry.gotoEllipsisMenuItem(menuItem = "Approve");

		Workflow.confirmAndViewSucessMessageViaDetails();

		Navigator.gotoPage(pageName = "Blogs Page");

		BlogsNavigator.gotoEntryPG(
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs Entry Title"
		);

		BlogsEntry.viewPG(
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs Entry Title"
		);

		Notifications.viewBadgeCount(notificationCount = "0");
	}

	@priority = "3"
	test ViewTaskCount {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Workflow Configuration"
		);

		Workflow.configureWorkflow(
			workflowDefinition = "Single Approver (Version 1)",
			workflowResourceValue = "Blogs Entry"
		);

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		Workflow.configureWorkflowViaFolderInfo(
			workflowDefinition = "Single Approver (Version 1)"
		);

		for (var number : list "1,2,3") {
			Navigator.openURL();

			ProductMenu.gotoPortlet(
				category = "Content",
				panel = "Site Administration",
				portlet = "Web Content"
			);

			WebContentNavigator.gotoAddCP();

			WebContent.addWithWorkflowCP(
				webContentContent = "WC WebContent Content ${number}",
				webContentTitle = "WC WebContent Title ${number}"
			);

			Navigator.openURL();

			ProductMenu.gotoPortlet(
				category = "Content",
				panel = "Site Administration",
				portlet = "Blogs"
			);

			Blogs.addWithWorkflow(
				entryContent = "Blogs Entry Content ${number}",
				entrySubtitle = "Subtitle ${number}",
				entryTitle = "Blogs Entry Title ${number}"
			);
		}

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Control Panel",
			portlet = "Workflow Definition"
		);

		Page.gotoMyAccount(portletName = "My Workflow Tasks");

		for (var number : list "1,2,3") {
			Workflow.viewTaskAssignedToMyRoles(
				workflowAssetTitle = "WC WebContent Title ${number}",
				workflowAssetType = "Web Content Article",
				workflowTask = "Review"
			);

			Workflow.viewTaskAssignedToMyRoles(
				workflowAssetTitle = "Blogs Entry Title ${number}",
				workflowAssetType = "Blogs Entry",
				workflowTask = "Review"
			);
		}

		Pagination.viewResults(results = "Showing 1 to 6 of 6 entries.");

		AssertElementPresent(
			locator1 = "xpath=(//div[contains(@id,'workflowTasksSearchContainer')]//tr[contains(@class,'entry-display-style')])[6]"
		);

		Pagination.changePagination(itemsPerPage = "5");

		Pagination.viewResults(results = "Showing 1 to 5 of 6 entries.");

		AssertElementNotPresent(
			locator1 = "xpath=(//div[contains(@id,'workflowTasksSearchContainer')]//tr[contains(@class,'entry-display-style')])[6]"
		);
	}

	@priority = "3"
	test ViewWebContentConfigurationCP {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContent.viewEmailConfigurationCP(webContentWorkflowEnabled = "false");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		Workflow.configureWorkflowViaFolderInfo(
			workflowDefinition = "Single Approver (Version 1)"
		);

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContent.viewEmailConfigurationCP(webContentWorkflowEnabled = "true");
	}

	@description = "This is a use case for LPS-59108."
	@priority = "4"
	test ViewWorkflowConfigurationScope {
		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Sites"
		);

		Site.addBlankCP(siteName = "New Site");

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Workflow Configuration"
		);

		Workflow.configureWorkflow(
			workflowDefinition = "Single Approver (Version 1)",
			workflowResourceValue = "Calendar Event"
		);

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Workflow Configuration"
		);

		Workflow.viewConfigurationSelected(
			workflowDefinition = "Single Approver (Version 1)",
			workflowResourceValue = "Calendar Event"
		);

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Control Panel",
			portlet = "Workflow Configuration"
		);

		Workflow.viewConfigurationSelected(
			workflowDefinition = "No Workflow",
			workflowResourceValue = "Calendar Event"
		);

		Workflow.configureWorkflow(
			workflowDefinition = "Single Approver (Version 1)",
			workflowResourceValue = "Blogs Entry"
		);

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Workflow Configuration"
		);

		Workflow.viewConfigurationSelected(
			workflowDefinition = "Single Approver",
			workflowResourceValue = "Blogs Entry"
		);

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Workflow Configuration"
		);

		Workflow.viewConfigurationSelected(
			workflowDefinition = "Single Approver",
			workflowResourceValue = "Blogs Entry"
		);
	}

	@description = "This is a use case for LRQA-13519."
	@priority = "5"
	test ViewWorkflowSubmissionsFromDifferentUsers {
		var siteName = TestCase.getSiteName(siteName = "${siteName}");

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Control Panel",
			portlet = "Workflow Configuration"
		);

		Workflow.configureWorkflow(
			workflowDefinition = "Single Approver (Version 1)",
			workflowResourceValue = "Blogs Entry"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Roles"
		);

		Role.definePermissionCP(
			permissionDefinitionKey = "SITE_ADMIN_CONTENT_BLOGS_GENERAL_PERMISSIONS_ACCESS_IN_SITE_ADMINISTRATION_CHECKBOX",
			permissionDefinitionValue = "Access in Site Administration",
			roleName = "Site Member",
			roleType = "Site"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Roles"
		);

		Role.definePermissionCP(
			permissionDefinitionKey = "SITE_ADMIN_CONTENT_BLOGS_RESOURCE_PERMISSIONS_BLOGS_ENTRIES_ADD_ENTRY_CHECKBOX",
			permissionDefinitionValue = "Add Entry",
			roleName = "Site Member",
			roleType = "Site"
		);

		for (var n : list "1,2") {
			ProductMenu.gotoPortlet(
				category = "Users",
				panel = "Control Panel",
				portlet = "Users and Organizations"
			);

			User.addCP(
				userEmailAddress = "usersn${n}@liferay.com",
				userFirstName = "userfn${n}",
				userLastName = "userln${n}",
				userScreenName = "usersn${n}"
			);

			ProductMenu.gotoPortlet(
				category = "Users",
				panel = "Control Panel",
				portlet = "Users and Organizations"
			);

			User.editUserSiteCP(siteName = "${siteName}", userScreenName = "usersn${n}");

			ProductMenu.gotoPortlet(
				category = "Users",
				panel = "Control Panel",
				portlet = "Users and Organizations"
			);

			User.editPasswordCP(
				userEmailAddress = "usersn${n}@liferay.com",
				userScreenName = "usersn${n}"
			);

			User.logoutAndLoginPG(
				userLoginEmailAddress = "usersn${n}@liferay.com",
				userScreenName = "usersn${n}"
			);

			Navigator.openURL();

			ProductMenu.gotoPortlet(
				category = "Content",
				panel = "Site Administration",
				portlet = "Blogs"
			);

			Blogs.addWithWorkflow(
				entryContent = "User ${n} Blog Content Approved",
				entrySubtitle = "User ${n} Blog Subtitle Approved",
				entryTitle = "User ${n} Blog Title Approved"
			);

			Navigator.openURL();

			ProductMenu.gotoPortlet(
				category = "Content",
				panel = "Site Administration",
				portlet = "Blogs"
			);

			Blogs.addWithWorkflow(
				entryContent = "User ${n} Blog Content Pending",
				entrySubtitle = "User ${n} Blog Subtitle Pending",
				entryTitle = "User ${n} Blog Title Pending"
			);

			User.logoutAndLoginPG(
				userLoginEmailAddress = "test@liferay.com",
				userScreenName = "Test Test"
			);

			Page.gotoMyAccount(portletName = "My Workflow Tasks");

			Workflow.assignToMeTaskByActions(
				workflowAssetTitle = "User ${n} Blog Title Approved",
				workflowAssetType = "Blogs Entry",
				workflowTask = "Review"
			);

			Workflow.approveTaskByActions(
				workflowAssetTitle = "User ${n} Blog Title Approved",
				workflowAssetType = "Blogs Entry",
				workflowTask = "Review"
			);
		}

		User.logoutAndLoginPG(
			userLoginEmailAddress = "usersn1@liferay.com",
			userScreenName = "usersn1"
		);

		Page.gotoMyAccount(portletName = "My Submissions");

		Workflow.viewMySubmissions(
			workflowAssetTitle = "User 1 Blog Title Pending",
			workflowAssetType = "Blogs Entry",
			workflowDefinition = "Single Approver",
			workflowTask = "Review"
		);

		Workflow.viewSubmissionNotPresent(
			workflowAssetTitle = "User 2 Blog Title Pending"
		);

		Workflow.viewCompletedSubmission(
			workflowAssetTitle = "User 1 Blog Title Approved",
			workflowAssetType = "Blogs Entry",
			workflowDefinition = "Single Approver",
			workflowStatus = "Approved"
		);

		Workflow.viewSubmissionNotPresent(
			workflowAssetTitle = "User 2 Blog Title Approved"
		);

		User.logoutAndLoginPG(
			userLoginEmailAddress = "usersn2@liferay.com",
			userScreenName = "usersn2"
		);

		Page.gotoMyAccount(portletName = "My Submissions");

		Workflow.viewMySubmissions(
			workflowAssetTitle = "User 2 Blog Title Pending",
			workflowAssetType = "Blogs Entry",
			workflowDefinition = "Single Approver",
			workflowTask = "Review"
		);

		Workflow.viewSubmissionNotPresent(
			workflowAssetTitle = "User 1 Blog Title Pending"
		);

		Workflow.viewCompletedSubmission(
			workflowAssetTitle = "User 2 Blog Title Approved",
			workflowAssetType = "Blogs Entry",
			workflowDefinition = "Single Approver",
			workflowStatus = "Approved"
		);

		Workflow.viewSubmissionNotPresent(
			workflowAssetTitle = "User 1 Blog Title Approved"
		);
	}

	@priority = "4"
	test XSSScriptWebContent {
		var siteName = TestCase.getSiteName(siteName = "${siteName}");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		Workflow.configureWorkflowViaFolderInfo(
			workflowDefinition = "Single Approver (Version 1)"
		);

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoAddCP();

		WebContent.addWithWorkflowCP(
			webContentContent = '''&lt;script&gt;alert(123);&lt;/script&gt;''',
			webContentTitle = "WC WebContent Title"
		);

		WebContent.viewWithWorkflowCP(
			webContentContent = '''<script>alert(123);</script>''',
			webContentTitle = "WC WebContent Title",
			workflowStatus = "Pending",
			workflowTask = "Review"
		);

		Page.gotoMyAccount(portletName = "My Workflow Tasks");

		Workflow.assignToMeTaskByActions(
			workflowAssetTitle = "WC WebContent Title",
			workflowAssetType = "Web Content Article",
			workflowTask = "Review",
			workflowActivityComment = '''<script>alert(123);</script>'''
		);

		Page.gotoMyAccount(portletName = "My Workflow Tasks");

		Workflow.approveTaskByActions(
			workflowAssetTitle = "WC WebContent Title",
			workflowAssetType = "Web Content Article",
			workflowTask = "Review",
			workflowActivityComment = '''<script>alert(123);</script>'''
		);

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoEditCP(webContentTitle = "WC WebContent Title");

		WebContent.viewCP(
			webContentContent = '''<script>alert(123);</script>''',
			webContentTitle = "WC WebContent Title"
		);

		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Sites"
		);

		Page.add(pageName = "Asset Publisher Test Page", siteName = "${siteName}");

		Navigator.gotoPage(pageName = "Asset Publisher Test Page");

		Portlet.addPG(portletName = "Asset Publisher");

		WebContent.viewPGViaAP(
			webContentContent = '''<script>alert(123);</script>''',
			webContentTitle = "WC WebContent Title"
		);

		AssertAlertNotPresent();

		var actualScript = '''<script>alert(123);</script>''';

		var escapedScript = '''&lt;script&gt;alert(123);&lt;/script&gt;''';

		AssertHTMLSourceTextNotPresent(value1 = "${actualScript}");

		AssertHTMLSourceTextPresent(value1 = "${escapedScript}");
	}
}