@component-name = "portal-wcm"
definition {
	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Sitemap";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();

		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Sites"
		);

		Site.addBlankCP(siteName = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Sites"
		);

		Page.add(
			pageName = "Site Page Name",
			siteName = "Site Name",
			sitePagePrivacy = "Private"
		);

		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Sites"
		);

		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Sites"
		);

		Page.addChild(
			page = "Private Pages",
			pageName = "Site Page Name",
			siteChildPageName = "Child Page Name",
			siteName = "Site Name"
		);
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			Site.tearDownCP(siteName = "Site Name");
		}
	}

	@priority = "4"
	test DisplayPrivatePageWithChildPage {
		Portlet.addPG(portletName = "Site Map");

		Portlet.viewSpecificPG(portletName = "Site Map");

		SiteMapPortlet.viewDefaultPG(
			listChildPageName = "Child Page Name",
			listPageName = "Site Page Name"
		);
	}
}