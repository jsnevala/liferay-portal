@component-name = "portal-staging"
definition {
	property cmis.repository.type = "sharepoint2010";
	property custom.properties = "session.store.password=true${line.separator}company.security.auth.type=screenName${line.separator}default.layout.template.id=1_column";
	property dummy.socket.proxy.disabled = "true";
	property osgi.app.includes = "sharepoint";
	property portal.release = "true";
	property portal.upstream = "true";
	property test.run.environment = "EE";
	property testray.main.component.name = "Staging";

	setUp {
		TestCase.setUpPortalInstance();

		var sharepointVMHostName = PropsUtil.get("cmis.repository.vm.host.name");

		AntCommand(
			locator1 = "build-test-sharepoint.xml",
			value1 = "clean-sharepoint-repository -Dssh.host=${sharepointVMHostName}"
		);

		User.loginPG(authenticationMethod = "By Screen Name", userScreenName = "test");

		Page.gotoMyAccount(portletName = "Account Settings");

		User.editDetailsViaMyAccount(userScreenNameEdit = "administrator");

		Page.gotoMyAccount(portletName = "Account Settings");

		User.editPasswordViaMyAccount(
			currentPassword = "test",
			newPassword = "password"
		);

		User.logoutPG();

		User.loginPG(
			authenticationMethod = "By Screen Name",
			password = "password",
			userScreenName = "administrator"
		);

		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Sites"
		);

		Site.addBlankCP(siteName = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Sites"
		);

		Page.add(pageName = "Staging Test Page", siteName = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Publishing",
			panel = "Site Administration",
			portlet = "Staging"
		);

		Staging.activateStagingCP(siteName = "Site Name");
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			DMRepository.tearDownCP();

			DMDocument.tearDownCP();

			Site.tearDownCP();

			Page.gotoMyAccount(portletName = "Account Settings");

			User.editDetailsViaMyAccount(userScreenNameEdit = "test");

			Page.gotoMyAccount(portletName = "Account Settings");

			User.editPasswordViaMyAccount(
				currentPassword = "password",
				newPassword = "test"
			);

			User.logoutPG();

			User.loginPG(
				authenticationMethod = "By Screen Name",
				password = "test",
				userScreenName = "test"
			);
		}
	}

	@description = "This is a use case for LPS-72304 and LPS-72866."
	@priority = "4"
	test StagingSharepointRepositoryPG {
		property test.name.skip.portal.instance = "StagingSharepoint#StagingSharepointRepositoryPG";
		var sharepointVMHostName = PropsUtil.get("cmis.repository.vm.host.name");

		Navigator.gotoStagedSitePage(
			pageName = "Staging Test Page",
			siteName = "Site Name"
		);

		Portlet.addPG(
			pageName = "Staging Test Page",
			portletName = "Documents and Media"
		);

		DMNavigator.gotoAddRepositoryPG();

		PortletEntry.inputName(name = "Sharepoint Repository Name");

		DMRepository.addSharepoint(
			dmRepositoryLibraryName = "Documents",
			dmRepositoryName = "Sharepoint",
			dmRepositorySiteURL = "http://${sharepointVMHostName}"
		);

		PortletEntry.save();

		Navigator.gotoStagedSitePage(
			pageName = "Staging Test Page",
			siteName = "Site Name"
		);

		Staging.gotoPublishToLive();

		Staging.publishToLive();

		Navigator.gotoSitePage(pageName = "Staging Test Page", siteName = "Site Name");

		DMPortlet.setDescriptiveView();

		AssertTextEquals(
			locator1 = "DocumentsAndMedia#DESCRIPTIVE_LIST_FOLDER_TITLE",
			value1 = "Sharepoint Repository Name",
			key_dmFolderName = "Sharepoint Repository Name"
		);

		Navigator.openSiteURL(siteName = "Site Name");

		Navigator.gotoStagedView();

		ProductMenu.gotoPortlet(
			category = "Publishing",
			panel = "Site Administration",
			portlet = "Staging"
		);

		Staging.deactivateStagingCP(siteName = "Site Name");
	}
}