@component-name = "portal-web-forms-and-data-lists"
definition {
	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Dynamic Data Lists";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();

		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Sites"
		);

		Site.addBlankCP(siteName = "Staging Site Name");

		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Sites"
		);

		Page.add(pageName = "Staging Page", siteName = "Staging Site Name");

		ProductMenu.gotoPortlet(
			category = "Publishing",
			panel = "Site Administration",
			portlet = "Staging"
		);

		Staging.activateStagingCP(
			pageVersioningEnabled = "true",
			siteName = "Staging Site Name"
		);

		ProductMenu.gotoSite(site = "Staging Site Name");
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			User.logoutAndLoginPG(
				userLoginEmailAddress = "test@liferay.com",
				userLoginFullName = "Test Test"
			);

			Site.tearDownCP();
		}
	}

	@description = "This is a use case for LPS-80085."
	@priority = "3"
	test AddWebContentTemplateWithSmallImage {
		property test.name.skip.portal.instance = "DDMStructuresStaging#AddWebContentTemplateWithSmallImage";

		Navigator.gotoStagedSitePage(
			pageName = "Staging Page",
			siteName = "Staging Site Name"
		);

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Documents and Media"
		);

		DMDocument.addCP(
			dmDocumentDescription = "DM Document Description",
			dmDocumentFile = "Document_1.jpg",
			dmDocumentTitle = "Document_1.jpg"
		);

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoManageTemplates();

		WebContentTemplates.addCP(
			templateLanguage = "ftl",
			templateName = "WC Template Name",
			templateSmallImageURL = "http://localhost:8080/webdav/staging-site-name-staging/document_library/Document_1.jpg"
		);

		PortletEntry.save();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoManageTemplates();

		WebContentTemplates.viewTableEntryCP(
			templateName = "WC Template Name",
			templateSmallImage = "true"
		);

		Navigator.gotoStagedSitePage(
			pageName = "Staging Page",
			siteName = "Staging Site Name"
		);

		Staging.gotoPublishToLive();

		Staging.publishToLive();

		ProductMenu.gotoLiveSite();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoManageTemplates();

		WebContentTemplates.viewTableEntryCP(
			templateName = "WC Template Name",
			templateSmallImage = "true"
		);
	}

	@description = "This is a use case for LPS-68661."
	@priority = "3"
	test CreateWebContentStructureAndTemplate {
		ProductMenu.gotoStagingSite();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoManageStructures();

		WebContentStructures.addCP(
			structureDescription = "WC Structure Description",
			structureName = "WC Structure Name"
		);

		DynamicDataMapping.addField(
			field = "Text",
			fieldFieldLabel = "Text",
			fieldName = "Text"
		);

		WebContentStructures.saveCP(structureName = "WC Structure Name");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoManageStructures();

		WebContentStructures.viewCP(
			structureDescription = "WC Structure Description",
			structureName = "WC Structure Name"
		);

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoManageTemplates();

		WebContentTemplates.addCP(
			templateDescription = "WC Template Description",
			templateLanguage = "ftl",
			templateName = "WC Template Name"
		);

		WebContentTemplates.addStructure(
			structureName = "WC Structure Name",
			templateFieldNames = "Text",
			templateLanguage = "ftl"
		);

		DDLDataDefinition.save();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentTemplates.viewCP(
			templateDescription = "WC Template Description",
			templateLanguage = "ftl",
			templateName = "WC Template Name"
		);
	}
}