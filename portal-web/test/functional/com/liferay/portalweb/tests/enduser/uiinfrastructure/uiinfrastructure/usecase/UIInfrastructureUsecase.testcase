@component-name = "portal-user-interface"
definition {
	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "User Interface";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
	}

	@priority = "5"
	test RightToLeftSmoke {
		property portal.acceptance = "true";
		property test.name.skip.portal.instance = "UIInfrastructureUsecase#RightToLeftSmoke";

		Page.add(pageName = "RTL Test Page");

		Portlet.addPG(portletName = "Language Selector");

		LanguagePortlet.selectLanguagePG(language = "Hebrew (Israel)");

		ProductMenuHelper.openProductMenu();

		Page.viewRTLLayout();

		LanguagePortlet.selectLanguagePG(language = "English (United States)");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoAddCP();

		WebContent.addLocale(language = "Hebrew (Israel)", locale = "iw_IL");

		WebContent.addCP(webContentTitle = "WC Title");

		WebContent.viewRTLLayout();
	}

	@description = "Ensure that a user can access portlet options and drag and drop portlets."
	@priority = "5"
	test Smoke {
		property portal.acceptance = "true";

		Page.add(pageName = "Test Page");

		Portlet.addPG(portletName = "Hello World");

		task ("Close the Add Panel") {
			Click(locator1 = "ControlMenuAddPanel#CLOSE_ADD_PANEL");
		}

		task ("Assert the 'Configuration' iframe of the Hello World portlet") {
			Portlet.gotoPortletOptions(
				portletName = "Hello World",
				portletOption = "Configuration"
			);

			IFrame.selectConfigurationFrame();

			Navigator.gotoNavItem(navItem = "Sharing");

			SelectFrame(value1 = "relative=top");

			Click(locator1 = "Icon#CLOSE");
		}

		task ("Assert the 'Look and Feel' modal of the Hello World portlet") {
			Portlet.gotoPortletOptions(
				portletName = "Hello World",
				portletOption = "Look and Feel Configuration"
			);

			AssertTextEquals(locator1 = "NavTab#GENERAL", value1 = "General");

			Click(locator1 = "Icon#CLOSE");
		}

		Portlet.dragAndDropPortletToColumnPG(
			columnNumberFrom = "1",
			columnNumberTo = "2",
			portletName = "Hello World"
		);

		Portlet.dragAndDropPortletToColumnPG(
			columnNumberFrom = "2",
			columnNumberTo = "1",
			portletName = "Hello World"
		);

		task ("Removes Hello World Portlets on Test Page and Welcome Page") {
			Navigator.gotoPage(pageName = "Test Page");

			Portlet.deletePG(portletName = "Hello World");

			Navigator.gotoPage(pageName = "Welcome");

			Portlet.deletePG(portletName = "Hello World");

			Portlet.viewNoSpecificPG(portletName = "Hello World");
		}
	}

	@description = "This is a use case for LPS-70390."
	test ViewNonASCIICharactersWithSPADisabled {
		property custom.properties = "javascript.single.page.application.enabled=false";

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.addCP(
			userEmailAddress = "skandi@liferay.com",
			userFirstName = "Skändi",
			userLastName = "Ääkkönen",
			userScreenName = "uskandi"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.viewCP(
			userEmailAddress = "skandi@liferay.com",
			userFirstName = "Skändi",
			userLastName = "Ääkkönen",
			userScreenName = "uskandi"
		);
	}

	@priority = "5"
	test ViewSuccessMessageText {
		property portal.acceptance = "true";

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Blogs"
		);

		BlogsNavigator.gotoAddEntry();

		BlogsEntry.addEntryContent(
			entryContent = "Blogs Content",
			entryTitle = "Blogs Title"
		);

		Button.clickPublish();

		Alert.viewSuccessMessageText(
			successMessage = "Your request completed successfully."
		);
	}
}