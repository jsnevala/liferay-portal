@component-name = "portal-calendar"
definition {
	property portal.release = "true";
	property portal.upstream = "true";
	property custom.properties = "default.layout.template.id=1_column${line.separator}company.default.time.zone=America/Los_Angeles";
	property testray.main.component.name = "Calendar";
	var pageName = "Calendar Page";
	var portletName = "Calendar";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();

		Page.add(pageName = "Calendar Page");

		Navigator.gotoPage(pageName = "Calendar Page");

		Portlet.addPG(pageName = "Calendar Page", portletName = "Calendar");

		Navigator.openURL();

		Navigator.gotoPage(pageName = "Calendar Page");
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			Navigator.gotoPage(pageName = "Calendar Page");

			if (IsElementPresent(locator1 = "Calendar#SCHEDULER_EVENT_GENERIC")) {
				CalendarEvent.tearDown();
			}

			Calendar.tearDown();

			Calendar.tearDownColor();

			CalendarResource.tearDown();

			CalendarConfiguration.tearDown();

			Page.tearDownPG();

			User.tearDownCP();

			Site.tearDownCP();
		}
	}

	@priority = "5"
	test AddCalendarResource {
		property portal.acceptance = "true";

		var siteName = TestCase.getSiteName(siteName = "${siteName}");

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarResource.add(calendarResourceName = "Calendar Resource Name");

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarResource.view(calendarResourceName = "Calendar Resource Name");
	}

	@priority = "4"
	test AddCalendarToCurrentSiteCalendars {
		var siteName = TestCase.getSiteName(siteName = "${siteName}");

		Navigator.gotoPage(pageName = "Calendar Page");

		Calendar.add(
			calendarName = "Site Calendar Name",
			calendarType = "Current Site Calendars",
			site = "${siteName}"
		);

		Navigator.gotoPage(pageName = "Calendar Page");

		Calendar.view(
			calendarName = "Site Calendar Name",
			calendarType = "Current Site Calendars",
			site = "${siteName}"
		);
	}

	@priority = "4"
	test AddCalendarToMyCalendars {
		Navigator.gotoPage(pageName = "Calendar Page");

		Calendar.add(
			calendarName = "My Calendar Name",
			calendarType = "My Calendars",
			user = "Test Test"
		);

		Navigator.gotoPage(pageName = "Calendar Page");

		Calendar.view(
			calendarName = "My Calendar Name",
			calendarType = "My Calendars",
			user = "Test Test"
		);
	}

	@description = "This is a use case for LPS-64945."
	@priority = "3"
	test AddEventAfterClosingModal {
		Navigator.gotoPage(pageName = "${pageName}");

		CalendarNavigator.gotoAddEvent();

		PortletEntry.inputTitle(title = "Calendar Event Title");

		CalendarNavigator.closeModal(modalTitle = "New Event");

		CalendarNavigator.gotoAddEvent();

		PortletEntry.inputTitle(title = "Calendar Event Title");

		CalendarEvent.publish();

		Navigator.gotoPage(pageName = "${pageName}");

		CalendarEvent.view(eventTitle = "Calendar Event Title");
	}

	@priority = "5"
	test AddEventAllDay {
		property portal.acceptance = "true";

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarNavigator.gotoAddEvent();

		CalendarEvent.add(
			eventTitle = "Calendar Event All Day Title",
			eventType = "All Day",
			pageName = "Calendar Page"
		);

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarEvent.viewAllDay(eventTitle = "Calendar Event All Day Title");
	}

	@priority = "3"
	test AddEventAllDayCommentToCurrentSiteCalendars {
		var siteName = TestCase.getSiteName(siteName = "${siteName}");

		Navigator.gotoPage(pageName = "Calendar Page");

		Calendar.enableComments(
			calendarName = "${siteName}",
			calendarType = "Current Site Calendars",
			site = "${siteName}",
			user = "Test Test"
		);

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarNavigator.gotoAddEvent();

		CalendarEvent.add(
			calendarName = "${siteName}",
			eventComment = "Calendar Event All Day Comment",
			eventCommentEnabled = "true",
			eventTitle = "Calendar Event All Day Title",
			eventType = "All Day",
			pageName = "Calendar Page",
			site = "${siteName}",
			userFullName = "Test Test (You)"
		);

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarEvent.viewComment(
			calendarName = "${siteName}",
			eventComment = "Calendar Event All Day Comment",
			eventTitle = "Calendar Event All Day Title",
			eventType = "All Day",
			site = "${siteName}",
			userFullName = "Test Test (You)"
		);
	}

	@priority = "3"
	test AddEventAllDayRSVPYes {
		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarNavigator.gotoAddEvent();

		CalendarEvent.add(
			eventTitle = "Calendar Event All Day Title",
			eventType = "All Day",
			pageName = "Calendar Page"
		);

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarEvent.viewApprovedRSVP(
			eventTitle = "Calendar Event All Day Title",
			rsvp = "Yes"
		);

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarEvent.viewAllDay(eventTitle = "Calendar Event All Day Title");
	}

	@priority = "3"
	test AddEventAllDayWithRemindersEnabled {
		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarNavigator.gotoAddEvent();

		CalendarEvent.add(
			duration1 = "Minutes",
			duration2 = "Minutes",
			eventTitle = "Calendar Event All Day Title",
			eventType = "All Day",
			number1 = "5",
			number2 = "10",
			pageName = "Calendar Page",
			reminders = "true"
		);

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarEvent.viewAllDay(eventTitle = "Calendar Event All Day Title");
	}

	@priority = "3"
	test AddEventAllDayWithTag {
		var siteName = TestCase.getSiteName(siteName = "${siteName}");

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarNavigator.gotoAddEvent();

		CalendarEvent.add(
			eventTitle = "Calendar Event All Day Title",
			eventType = "All Day",
			optionSet = "true",
			optionSetValue = "tag",
			pageName = "Calendar Page",
			specificOptionSetValue = "tag1"
		);

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarEvent.viewDetails(
			calendarName = "${siteName}",
			eventTitle = "Calendar Event All Day Title",
			eventType = "All Day"
		);

		CalendarEvent.viewDetailsTags(tagText = "tag1");
	}

	@priority = "3"
	test AddEventAllDayWithUserInviteAccept {
		var siteName = TestCase.getSiteName(siteName = "${siteName}");

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.addCP(
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userScreenName = "usersn"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.editPasswordCP(
			userEmailAddress = "userea@liferay.com",
			userScreenName = "usersn"
		);

		ProductMenu.gotoSite(site = "${siteName}");

		ProductMenu.gotoPortlet(
			category = "Members",
			panel = "Site Administration",
			portlet = "Site Memberships"
		);

		Site.assignUserAsMemberCP(
			userFirstName = "userfn",
			userLastName = "userln",
			userScreenName = "usersn"
		);

		Navigator.gotoPage(pageName = "Calendar Page");

		Calendar.add(calendarName = "userfn userln", calendarType = "Other Calendars");

		CalendarNavigator.gotoAddEvent();

		CalendarEvent.add(
			eventTitle = "Calendar Event All Day Title",
			eventType = "All Day",
			optionSet = "true",
			optionSetValue = "inviteResource",
			pageName = "Calendar Page",
			specificOptionSetValue = "userfn userln",
			user = "userfn userln"
		);

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarEvent.addRSVP(
			eventTitle = "Calendar Event All Day Title",
			eventType = "All Day",
			rsvp = "Yes"
		);

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarEvent.viewAllDay(eventTitle = "Calendar Event All Day Title");
	}

	@description = "This is a use case for LPS-55163."
	@priority = "4"
	test AddEventAsPowerUserWhenSiteMemberNoViewPermissions {
		var siteName = TestCase.getSiteName(siteName = "${siteName}");

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.addCP(
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userScreenName = "usersn"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.editPasswordCP(
			userEmailAddress = "userea@liferay.com",
			userScreenName = "usersn"
		);

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Members",
			panel = "Site Administration",
			portlet = "Site Memberships"
		);

		Site.assignUserAsMemberCP(
			userFirstName = "userfn",
			userLastName = "userln",
			userScreenName = "usersn"
		);

		Navigator.gotoPage(pageName = "Calendar Page");

		Calendar.removeViewPermissions(
			calendarName = "${siteName}",
			calendarType = "Current Site Calendars",
			roleName = "Site Member",
			site = "${siteName}"
		);

		User.logoutAndLoginPG(
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln"
		);

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarNavigator.gotoAddEvent();

		PortletEntry.inputTitle(title = "Calendar Event");

		CalendarEvent.viewAvailableCalendars(availableCalendarList = "userfn userln");

		CalendarEvent.viewUnavailableCalendarsNotPresent(
			unavailableCalendarList = "Test Test,Liferay"
		);

		CalendarEvent.publish();

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarEvent.view(eventTitle = "Calendar Event");

		User.logoutAndLoginPG(
			userLoginEmailAddress = "test@liferay.com",
			userLoginFullName = "Test Test"
		);
	}

	@priority = "4"
	test AddEventRegular {
		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarNavigator.gotoAddEvent();

		CalendarEvent.add(
			eventTitle = "Calendar Event Regular Title",
			eventType = "Regular",
			pageName = "Calendar Page"
		);

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarEvent.view(eventTitle = "Calendar Event Regular Title");
	}

	@priority = "5"
	test AddEventRegularAndResourceWithStagingAndSchedulePublishToLive {
		property portal.acceptance = "true";
		property testray.component.names = "Training";

		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Sites"
		);

		Site.addBlankCP(siteName = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Sites"
		);

		Page.add(pageName = "Staging Test Page", siteName = "Site Name");

		Navigator.gotoSitePage(pageName = "Staging Test Page", siteName = "Site Name");

		Portlet.addPG(portletName = "Calendar");

		Navigator.openSiteURL(siteName = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Publishing",
			panel = "Site Administration",
			portlet = "Staging"
		);

		Staging.activateStagingCP(siteName = "Site Name");

		Navigator.gotoStagedSitePage(
			pageName = "Staging Test Page",
			siteName = "Site Name"
		);

		CalendarNavigator.gotoAddEvent();

		CalendarEvent.add(
			calendarName = "Site Name",
			eventTitle = "Site Name Staged Event",
			eventType = "Regular",
			pageName = "Staging Test Page",
			pageStaging = "true",
			siteName = "Site Name",
			siteURL = "true"
		);

		CalendarEvent.view(eventTitle = "Site Name Staged Event");

		CalendarNavigator.gotoAddEvent();

		CalendarEvent.add(
			calendarName = "Test Test",
			eventTitle = "Test Test Live Event",
			eventType = "Regular",
			pageName = "Staging Test Page",
			pageStaging = "true",
			siteName = "Site Name",
			siteURL = "true"
		);

		CalendarEvent.view(eventTitle = "Test Test Live Event");

		CalendarResource.add(
			calendarResourceName = "Calendar Resource Name",
			calendarType = "Other Calendars"
		);

		Navigator.gotoStagedSitePage(
			pageName = "Staging Test Page",
			siteName = "Site Name"
		);

		Calendar.add(
			calendarName = "Calendar Resource Name",
			calendarType = "Other Calendars"
		);

		Calendar.view(
			calendarName = "Calendar Resource Name",
			calendarType = "Other Calendars"
		);

		Navigator.gotoSitePage(pageName = "Staging Test Page", siteName = "Site Name");

		CalendarScheduler.viewSpecificEventNotPresent(
			eventTitle = "Site Name Staged Event"
		);

		CalendarResource.viewResourceNameNotPresent(
			calendarResourceName = "Calendar Resource Name"
		);

		CalendarEvent.view(eventTitle = "Test Test Live Event");

		Navigator.gotoStagedSitePage(
			pageName = "Staging Test Page",
			siteName = "Site Name"
		);

		Staging.schedulePublishToLivePG(
			endByDate = "true",
			frequency = "Daily",
			scheduleTitleName = "Staging Schedule Title"
		);

		Pause(locator1 = "120000");

		Navigator.gotoSitePage(pageName = "Staging Test Page", siteName = "Site Name");

		CalendarEvent.view(eventTitle = "Site Name Staged Event");

		CalendarEvent.view(eventTitle = "Test Test Live Event");

		Calendar.view(
			calendarName = "Calendar Resource Name",
			calendarType = "Other Calendars"
		);
	}

	@priority = "4"
	test AddEventRegularCommentToCurrentSiteCalendars {
		var siteName = TestCase.getSiteName(siteName = "${siteName}");

		Navigator.gotoPage(pageName = "Calendar Page");

		Calendar.enableComments(
			calendarName = "${siteName}",
			calendarType = "Current Site Calendars",
			site = "${siteName}",
			user = "Test Test"
		);

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarNavigator.gotoAddEvent();

		CalendarEvent.add(
			calendarName = "${siteName}",
			eventComment = "Calendar Event Regular Comment",
			eventCommentEnabled = "true",
			eventTitle = "Calendar Event Regular Title",
			eventType = "Regular",
			pageName = "Calendar Page",
			site = "${siteName}",
			userFullName = "Test Test (You)"
		);

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarEvent.viewComment(
			calendarName = "${siteName}",
			eventComment = "Calendar Event Regular Comment",
			eventTitle = "Calendar Event Regular Title",
			eventType = "Regular",
			site = "${siteName}",
			userFullName = "Test Test (You)"
		);
	}

	@priority = "4"
	test AddEventRegularRSVPYes {
		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarNavigator.gotoAddEvent();

		CalendarEvent.add(
			eventTitle = "Calendar Event Regular Title",
			eventType = "Regular",
			pageName = "Calendar Page"
		);

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarEvent.viewApprovedRSVP(
			eventTitle = "Calendar Event Regular Title",
			rsvp = "Yes"
		);

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarEvent.view(eventTitle = "Calendar Event Regular Title");
	}

	@priority = "4"
	test AddEventRegularWithRemindersEnabled {
		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarNavigator.gotoAddEvent();

		CalendarEvent.add(
			duration1 = "Minutes",
			duration2 = "Minutes",
			eventTitle = "Calendar Event Regular Title",
			eventType = "Regular",
			number1 = "5",
			number2 = "10",
			pageName = "Calendar Page",
			reminders = "true"
		);

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarScheduler.viewEventWithReminders(
			eventTitle = "Calendar Event Regular Title"
		);

		CalendarEvent.view(eventTitle = "Calendar Event Regular Title");
	}

	@priority = "4"
	test AddEventRegularWithTag {
		var siteName = TestCase.getSiteName(siteName = "${siteName}");

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarNavigator.gotoAddEvent();

		CalendarEvent.add(
			eventTitle = "Calendar Event Regular Title",
			eventType = "Regular",
			optionSet = "true",
			optionSetValue = "tag",
			pageName = "Calendar Page",
			specificOptionSetValue = "tag1"
		);

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarEvent.viewDetails(
			calendarName = "${siteName}",
			eventTitle = "Calendar Event Regular Title",
			eventType = "Regular"
		);

		CalendarEvent.viewDetailsTags(tagText = "tag1");
	}

	@priority = "4"
	test AddEventRegularWithUserInvite {
		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarNavigator.gotoAddEvent();

		CalendarEvent.add(
			eventTitle = "Calendar Event Regular Title",
			eventType = "Regular",
			optionSet = "true",
			optionSetValue = "inviteResource",
			pageName = "Calendar Page",
			specificOptionSetValue = "Test Test"
		);

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarEvent.view(eventTitle = "Calendar Event Regular Title");
	}

	@priority = "4"
	test AddEventRegularWithUserInviteAccept {
		var siteName = TestCase.getSiteName(siteName = "${siteName}");

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.addCP(
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userScreenName = "usersn"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.editPasswordCP(
			userEmailAddress = "userea@liferay.com",
			userScreenName = "usersn"
		);

		ProductMenu.gotoSite(site = "${siteName}");

		ProductMenu.gotoPortlet(
			category = "Members",
			panel = "Site Administration",
			portlet = "Site Memberships"
		);

		Site.assignUserAsMemberCP(
			userFirstName = "userfn",
			userLastName = "userln",
			userScreenName = "usersn"
		);

		Navigator.gotoPage(pageName = "Calendar Page");

		Calendar.add(calendarName = "userfn userln", calendarType = "Other Calendars");

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarNavigator.gotoAddEvent();

		CalendarEvent.add(
			eventTitle = "Calendar Event Regular Title",
			eventType = "Regular",
			optionSet = "true",
			optionSetValue = "inviteResource",
			pageName = "Calendar Page",
			specificOptionSetValue = "userfn userln",
			user = "userfn userln"
		);

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarEvent.addRSVP(
			eventTitle = "Calendar Event Regular Title",
			eventType = "Regular",
			rsvp = "Yes"
		);

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarEvent.view(eventTitle = "Calendar Event Regular Title");
	}

	@priority = "4"
	test AddEventRepeating {
		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarNavigator.gotoAddEvent();

		CalendarEvent.add(
			eventTitle = "Calendar Event Repeating Title",
			eventType = "Repeating",
			frequency = "Daily",
			numberOfOccurrences = "1",
			pageName = "Calendar Page"
		);

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarEvent.view(eventTitle = "Calendar Event Repeating Title");

		CalendarNavigator.gotoEventDetails(
			eventTitle = "Calendar Event Repeating Title",
			eventType = "Repeating"
		);

		CalendarEvent.viewRepeatingEventViaViewDetails(
			eventTitle = "Calendar Event Repeating Title",
			eventType = "Repeating",
			frequency = "Daily",
			numberOfOccurrences = "1"
		);
	}

	@priority = "3"
	test AddEventRepeatingCommentToCurrentSiteCalendars {
		var siteName = TestCase.getSiteName(siteName = "${siteName}");

		Navigator.gotoPage(pageName = "Calendar Page");

		Calendar.enableComments(
			calendarName = "${siteName}",
			calendarType = "Current Site Calendars",
			site = "${siteName}",
			user = "Test Test"
		);

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarNavigator.gotoAddEvent();

		CalendarEvent.add(
			calendarName = "${siteName}",
			eventComment = "Calendar Event Repeating Comment",
			eventCommentEnabled = "true",
			eventTitle = "Calendar Event Repeating Title",
			eventType = "Repeating",
			frequency = "Daily",
			numberOfOccurrences = "1",
			pageName = "Calendar Page",
			site = "${siteName}",
			userFullName = "Test Test (You)"
		);

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarEvent.viewComment(
			calendarName = "${siteName}",
			eventComment = "Calendar Event Repeating Comment",
			eventTitle = "Calendar Event Repeating Title",
			eventType = "Repeating",
			site = "${siteName}",
			userFullName = "Test Test (You)"
		);
	}

	@priority = "5"
	test AddEventRepeatingMonthly2Times {
		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarNavigator.gotoAddEvent();

		CalendarEvent.add(
			eventTitle = "Calendar Event Repeating Title",
			eventType = "Repeating",
			frequency = "Monthly",
			numberOfOccurrences = "2",
			pageName = "Calendar Page"
		);

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarEvent.view(
			eventTitle = "Calendar Event Repeating Title",
			numberOfOccurrences = "2"
		);
	}

	@priority = "3"
	test AddEventRepeatingRSVPYes {
		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarNavigator.gotoAddEvent();

		CalendarEvent.add(
			eventTitle = "Calendar Event Repeating Title",
			eventType = "Repeating",
			frequency = "Daily",
			numberOfOccurrences = "1",
			pageName = "Calendar Page"
		);

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarEvent.viewApprovedRSVP(
			eventTitle = "Calendar Event Repeating Title",
			rsvp = "Yes"
		);

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarEvent.view(
			eventTitle = "Calendar Event Repeating Title",
			frequency = "Daily",
			numberOfOccurrences = "1"
		);
	}

	@priority = "4"
	test AddEventRepeatingWeekly2Times {
		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarNavigator.gotoConfiguration();

		CalendarConfiguration.editTimeZonePacific();

		PortletEntry.save();

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarNavigator.gotoAddEvent();

		CalendarEvent.add(
			eventTitle = "Calendar Event Repeating Title",
			eventType = "Repeating",
			frequency = "Weekly",
			numberOfOccurrences = "2",
			pageName = "Calendar Page"
		);

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarEvent.view(
			eventTitle = "Calendar Event Repeating Title",
			frequency = "Weekly",
			numberOfOccurrences = "2"
		);

		CalendarNavigator.gotoEventDetails(
			eventTitle = "Calendar Event Repeating Title",
			eventType = "Repeating"
		);

		CalendarEvent.viewRepeatingEventViaViewDetails(
			eventTitle = "Calendar Event Repeating Title",
			eventType = "Repeating",
			frequency = "Weekly",
			numberOfOccurrences = "2"
		);
	}

	@description = "This is a use case for LPS-56337."
	@priority = "3"
	test AddEventRepeatingWithEndDateBeforeStartDate {
		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarNavigator.gotoAddEvent();

		PortletEntry.inputTitle(title = "Calendar Repeating Event");

		CalendarEvent.setRepeating(
			endOnDate = "10/01/2015",
			endOnDateSummary = "October 1, 2015",
			frequency = "Daily"
		);

		CalendarEvent.viewRepeatingEventErrorMessage();
	}

	@priority = "3"
	test AddEventRepeatingWithRemindersEnabled {
		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarNavigator.gotoAddEvent();

		CalendarEvent.add(
			duration1 = "Minutes",
			duration2 = "Minutes",
			eventTitle = "Calendar Event Repeating Title",
			eventType = "Repeating",
			frequency = "Daily",
			number1 = "5",
			number2 = "10",
			numberOfOccurrences = "1",
			pageName = "Calendar Page",
			reminders = "true"
		);

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarScheduler.viewEventWithReminders(
			eventTitle = "Calendar Event Repeating Title"
		);

		CalendarEvent.view(
			eventTitle = "Calendar Event Repeating Title",
			frequency = "Daily",
			numberOfOccurrences = "1"
		);
	}

	@priority = "3"
	test AddEventRepeatingWithTag {
		var siteName = TestCase.getSiteName(siteName = "${siteName}");

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarNavigator.gotoAddEvent();

		CalendarEvent.add(
			eventTitle = "Calendar Event Repeating Title",
			eventType = "Repeating",
			frequency = "Daily",
			numberOfOccurrences = "1",
			optionSet = "true",
			optionSetValue = "tag",
			pageName = "Calendar Page",
			specificOptionSetValue = "tag1"
		);

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarEvent.viewDetails(
			calendarName = "${siteName}",
			eventTitle = "Calendar Event Repeating Title",
			eventType = "Repeating"
		);

		CalendarEvent.viewDetailsTags(tagText = "tag1");
	}

	@priority = "3"
	test AddEventRepeatingWithUserInviteAccept {
		var siteName = TestCase.getSiteName(siteName = "${siteName}");

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.addCP(
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userScreenName = "usersn"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.editPasswordCP(
			userEmailAddress = "userea@liferay.com",
			userScreenName = "usersn"
		);

		ProductMenu.gotoSite(site = "${siteName}");

		ProductMenu.gotoPortlet(
			category = "Members",
			panel = "Site Administration",
			portlet = "Site Memberships"
		);

		Site.assignUserAsMemberCP(
			userFirstName = "userfn",
			userLastName = "userln",
			userScreenName = "usersn"
		);

		Navigator.gotoPage(pageName = "Calendar Page");

		Calendar.add(calendarName = "userfn userln", calendarType = "Other Calendars");

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarNavigator.gotoAddEvent();

		CalendarEvent.add(
			eventTitle = "Calendar Event Repeating Title",
			eventType = "Repeating",
			frequency = "Daily",
			numberOfOccurrences = "1",
			optionSet = "true",
			optionSetValue = "inviteResource",
			pageName = "Calendar Page",
			specificOptionSetValue = "userfn userln",
			user = "userfn userln"
		);

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarEvent.addRSVP(
			eventTitle = "Calendar Event Repeating Title",
			eventType = "Repeating",
			rsvp = "Yes"
		);

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarEvent.view(
			eventTitle = "Calendar Event Repeating Title",
			frequency = "Daily",
			numberOfOccurrences = "1"
		);
	}

	@description = "This is a use case for LPS-51402."
	@priority = "4"
	test AddEventRepeatingYearly {
		property portal.release = "false";

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarNavigator.gotoAddEvent();

		PortletEntry.inputTitle(title = "Calendar Event Repeating Title");

		CalendarEvent.setDates(endDate = "02/21/2016", startDate = "02/21/2016");

		CalendarEvent.setTimes(endDateTime = "02:00 AM", startDateTime = "01:00 AM");

		CalendarEvent.setRepeatingYearly(
			frequency = "Yearly",
			yearlyRecurrenceSummary = "Yearly, On The Third Sunday Of February",
			yearlyRecurrenceSummaryPreviousDay = "Yearly, On The Third Saturday Of February"
		);

		CalendarEvent.publish();

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarNavigator.gotoMonthViaSmallCalendar(dateMonth = "February 2016");

		CalendarNavigator.gotoSpecificBusyDayViaSmallCalendar(dateNumber = "2");

		CalendarEvent.viewYearly(eventTitle = "Calendar Event Repeating Title");

		CalendarNavigator.gotoView(viewType = "Day");

		CalendarScheduler.selectSpecificEvent(
			eventTitle = "Calendar Event Repeating Title",
			eventToday = "false"
		);

		CalendarScheduler.gotoDetailsViaDialogBox();

		CalendarEvent.viewRepeatingEventViaViewDetails(
			eventTitle = "Calendar Event Repeating Title",
			eventType = "Repeating",
			frequency = "Yearly",
			yearlyRecurrenceSummary = "Yearly, on the Third Sunday of February"
		);
	}

	@priority = "4"
	test AddEventsViaScheduler {
		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarNavigator.gotoView(viewType = "Day");

		CalendarScheduler.addEventToday(
			eventTitle = "Calendar Event Today Day",
			viewType = "Day"
		);

		CalendarEvent.view(eventTitle = "Calendar Event Today Day");

		CalendarEvent.tearDown();

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarNavigator.gotoView(viewType = "Week");

		CalendarScheduler.addEventToday(
			eventTitle = "Calendar Event Today Week",
			viewType = "Week"
		);

		CalendarEvent.view(eventTitle = "Calendar Event Today Week");

		CalendarEvent.tearDown();

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarNavigator.gotoView(viewType = "Month");

		CalendarScheduler.addEventToday(
			eventTitle = "Calendar Event Today Month",
			viewType = "Month"
		);

		CalendarEvent.viewAllDay(eventTitle = "Calendar Event Today Month");
	}

	@description = "This is a use case for LPS-44540."
	@priority = "5"
	test AddEventTwiceViaMyCalendars {
		CalendarNavigator.gotoAddEventViaMyCalendars(user = "Test Test");

		PortletEntry.inputTitle(title = "Calendar Event Title1");

		CalendarEvent.publish();

		IFrame.closeFrame();

		CalendarEvent.view(eventTitle = "Calendar Event Title1");

		CalendarNavigator.gotoAddEventViaMyCalendars(key_user = "Test Test");

		CalendarEvent.add(
			eventTitle = "Calendar Event Title2",
			eventType = "Regular",
			pageName = "Calendar Page"
		);

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarEvent.viewAllDay(eventTitle = "Calendar Event Title2");
	}

	@description = "This is a use case for LPS-61427."
	@priority = "5"
	test AddEventWithLargeDateRange {
		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarNavigator.gotoAddEvent();

		PortletEntry.inputTitle(title = "Calendar Event Title");

		CalendarEvent.setEndDate(endDate = "01/01/200000");

		CalendarEvent.publish();

		var i = "0";
		var refreshCount = "5";

		while (!("${i}" == "${refreshCount}")) {
			Navigator.gotoPage(pageName = "Calendar Page");

			CalendarEvent.view(eventTitle = "Calendar Event Title");

			Pause(locator1 = "1000");

			AssertConsoleTextNotPresent(value1 = "java.lang.OutOfMemoryError");
		}
	}

	@priority = "4"
	test AddEventWithRelatedAssetViaAssetPublisher {
		var siteName = TestCase.getSiteName(siteName = "${siteName}");

		Page.add(pageName = "AP Page");

		Navigator.gotoPage(pageName = "AP Page");

		Portlet.addPG(portletName = "Blogs");

		Navigator.gotoPage(pageName = "AP Page");

		Portlet.addPG(portletName = "Asset Publisher");

		Blogs.addEntry(
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs Entry Title"
		);

		CalendarNavigator.gotoAddEventViaAssetPublisher();

		PortletEntry.inputTitle(title = "Calendar Event Title");

		CalendarEvent.gotoConfigureRelatedAssets();

		RelatedAssets.selectAsset(
			assetTitle = "Blogs Entry Title",
			assetType = "Blogs Entry"
		);

		CalendarEvent.selectEventIframe();

		CalendarEvent.clickPublish();

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarEvent.view(eventTitle = "Calendar Event Title");

		Navigator.gotoPage(pageName = "AP Page");

		CalendarEvent.viewViaAssetPublisher(
			calendarName = "${siteName}",
			eventTitle = "Calendar Event Title"
		);

		AssetPublisherPortlet.viewPG(
			assetContent = "Blogs Entry Content",
			assetTitle = "Blogs Entry Title",
			relatedAssetTitle = "Calendar Event Title"
		);

		Navigator.gotoPage(pageName = "AP Page");

		AssetPublisherPortlet.viewPG(
			assetContent = "Starts",
			assetTitle = "Calendar Event Title",
			relatedAssetTitle = "Blogs Entry Title"
		);

		AssetPublisherPortlet.gotoViewInContext();

		CalendarEvent.viewDetailsInPortlet(
			calendarName = "${siteName}",
			eventTitle = "Calendar Event Title",
			relatedAssetTitle = "Blogs Entry Title"
		);
	}

	@description = "This is a use case for LPS-52083."
	@priority = "3"
	test AddEventWithStaging {
		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Sites"
		);

		Site.addBlankCP(siteName = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Sites"
		);

		Page.add(pageName = "Staging Test Page", siteName = "Site Name");

		ProductMenu.gotoSite(site = "Site Name");

		Portlet.addPG(pageName = "Staging Test Page", portletName = "Calendar");

		ProductMenu.gotoSite(page = "Staging Test Page", site = "Site Name");

		ProductMenu.gotoSite(page = "Staging Test Page", site = "Site Name");

		CalendarNavigator.gotoAddEvent();

		PortletEntry.inputTitle(title = "Calendar Event Title");

		CalendarEvent.publish();

		Navigator.openURL();

		ProductMenu.gotoSite(page = "Staging Test Page", site = "Site Name");

		CalendarEvent.view(eventTitle = "Calendar Event Title");

		ProductMenu.gotoPortlet(
			category = "Publishing",
			panel = "Site Administration",
			portlet = "Staging"
		);

		Staging.activateStagingCP(siteName = "Site Name");

		Navigator.gotoStagedSitePage(
			pageName = "Staging Test Page",
			siteName = "Site Name"
		);

		Staging.gotoPublishToLive();

		Staging.publishToLive();

		CalendarNavigator.gotoEditEvent(eventTitle = "Calendar Event Title");

		PortletEntry.inputTitle(title = "Calendar Event Title - Staged Edit");

		CalendarEvent.publish();

		Navigator.gotoStagedSitePage(
			pageName = "Staging Test Page",
			siteName = "Site Name"
		);

		CalendarEvent.view(eventTitle = "Calendar Event Title - Staged Edit");

		Navigator.gotoStagedSitePage(
			pageName = "Staging Test Page",
			siteName = "Site Name"
		);

		Staging.gotoPublishToLive();

		Staging.publishToLive();

		Navigator.gotoSitePage(pageName = "Staging Test Page", siteName = "Site Name");

		CalendarScheduler.selectSpecificEvent(
			eventTitle = "Calendar Event Title - Staged Edit"
		);

		CalendarEvent.assertEventNotEditable();

		ProductMenu.gotoSite(site = "Site Name");

		CalendarNavigator.gotoAddEvent();

		CalendarEvent.viewUnavailableCalendarsNotPresent(
			unavailableCalendarList = "Site Name"
		);

		CalendarEvent.viewAvailableCalendars(availableCalendarList = "Test Test");

		Navigator.openURL();

		ProductMenu.gotoSite(site = "Site Name");

		CalendarNavigator.gotoView(viewType = "Day");

		CalendarScheduler.gotoAddViaDayView();

		CalendarEvent.viewUnavailableCalendarsNotPresent(
			unavailableCalendarList = "Site Name"
		);

		CalendarEvent.viewAvailableCalendars(availableCalendarList = "Test Test");
	}

	@priority = "5"
	test AddResourceCalendarToOtherCalendars {
		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarResource.add(
			calendarResourceName = "Calendar Resource Name",
			calendarType = "Other Calendars"
		);

		Navigator.gotoPage(pageName = "Calendar Page");

		Calendar.add(
			calendarName = "Calendar Resource Name",
			calendarType = "Other Calendars"
		);

		Navigator.gotoPage(pageName = "Calendar Page");

		Calendar.view(
			calendarName = "Calendar Resource Name",
			calendarType = "Other Calendars"
		);
	}

	@priority = "4"
	test AddUserCalendarToOtherCalendars {
		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.addCP(
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userScreenName = "usersn"
		);

		Navigator.gotoPage(pageName = "Calendar Page");

		Calendar.add(calendarName = "userfn userln", calendarType = "Other Calendars");

		Navigator.gotoPage(pageName = "Calendar Page");

		Calendar.view(calendarName = "userfn userln", calendarType = "Other Calendars");

		Calendar.viewOtherCalendarMenulist(
			calendarName = "userfn userln",
			color = "668CD9",
			pageName = "Calendar Page"
		);
	}

	@description = "This is a use case for LPS-45616."
	@priority = "4"
	test CancelRepeatingDialog {
		Navigator.gotoPage(pageName = "${pageName}");

		CalendarNavigator.gotoAddEvent();

		PortletEntry.inputTitle(title = "Calendar Non-Repeating Event 1");

		CalendarEvent.viewNoRepeating();

		CalendarEvent.gotoRepeatConfiguration();

		KeyPress(
			locator1 = "CalendarEditEvent#REPEAT_ENDS_NEVER_RADIO",
			value1 = "\ESCAPE"
		);

		CalendarEvent.viewNoRepeating();

		CalendarEvent.viewTitle(eventTitle = "Calendar Non-Repeating Event 1");

		CalendarEvent.publish();

		Navigator.gotoPage(pageName = "${pageName}");

		CalendarNavigator.gotoAddEvent();

		PortletEntry.inputTitle(title = "Calendar Non-Repeating Event 2");

		CalendarEvent.viewNoRepeating();

		CalendarEvent.gotoRepeatConfiguration();

		CalendarEvent.selectRepeatFrequency(frequency = "Daily");

		KeyPress(
			locator1 = "CalendarEditEvent#REPEAT_ENDS_NEVER_RADIO",
			value1 = "\ESCAPE"
		);

		CalendarEvent.viewNoRepeating();

		CalendarEvent.viewTitle(eventTitle = "Calendar Non-Repeating Event 2");

		CalendarEvent.publish();

		Navigator.gotoPage(pageName = "${pageName}");

		CalendarNavigator.gotoAddEvent();

		PortletEntry.inputTitle(title = "Calendar Non-Repeating Event 3");

		CalendarEvent.viewNoRepeating();

		CalendarEvent.gotoRepeatConfiguration();

		Button.clickCancel();

		CalendarEvent.viewTitle(eventTitle = "Calendar Non-Repeating Event 3");

		CalendarEvent.viewNoRepeating();

		CalendarEvent.publish();
	}

	@priority = "3"
	test ChangeCalendarTypeForAllDayEvent {
		var siteName = TestCase.getSiteName(siteName = "${siteName}");

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarNavigator.gotoAddEvent();

		CalendarEvent.add(
			eventTitle = "Calendar Event All Day Title",
			eventType = "All Day",
			pageName = "Calendar Page"
		);

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarScheduler.changeCalendar(
			calendarDefaultName = "${siteName}",
			calendarName = "Test Test",
			eventTitle = "Calendar Event All Day Title",
			eventType = "All Day"
		);
	}

	@priority = "4"
	test ChangeCalendarTypeForRegularEvent {
		var siteName = TestCase.getSiteName(siteName = "${siteName}");

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarNavigator.gotoAddEvent();

		CalendarEvent.add(
			eventTitle = "Calendar Event Regular Title",
			eventType = "Regular",
			pageName = "Calendar Page"
		);

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarScheduler.changeCalendar(
			calendarDefaultName = "${siteName}",
			calendarName = "Test Test",
			eventTitle = "Calendar Event Regular Title",
			eventType = "Regular"
		);
	}

	@priority = "4"
	test ChangeCalendarTypeForRepeatingEvent {
		var siteName = TestCase.getSiteName(siteName = "${siteName}");

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarNavigator.gotoAddEvent();

		CalendarEvent.add(
			eventTitle = "Calendar Event Repeating Title",
			eventType = "Repeating",
			frequency = "Daily",
			numberOfOccurrences = "1",
			pageName = "Calendar Page"
		);

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarScheduler.changeCalendar(
			calendarDefaultName = "${siteName}",
			calendarName = "Test Test",
			eventTitle = "Calendar Event Repeating Title",
			eventType = "Repeating"
		);
	}

	@priority = "3"
	test ChangeColorCalendarSiteCalendarsEventRegular {
		var siteName = TestCase.getSiteName(siteName = "${siteName}");

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarNavigator.gotoAddEvent();

		CalendarEvent.add(
			eventTitle = "Calendar Event Regular Title",
			eventType = "Regular",
			pageName = "Calendar Page"
		);

		Navigator.gotoPage(pageName = "Calendar Page");

		Calendar.changeColor(
			calendarType = "Current Site Calendars",
			site = "${siteName}",
			siteCalendarColor = "668CD9"
		);

		Navigator.gotoPage(pageName = "Calendar Page");

		Calendar.viewColor(
			calendarType = "Current Site Calendars",
			myCalendarColor = "668CD9"
		);

		CalendarScheduler.viewEventColor(
			eventBackgroundColorRGB = "(208, 219, 240)",
			eventFontColorRGB = "(104, 142, 217)",
			eventTitle = "Calendar Event Regular Title"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.addCP(
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userScreenName = "usersn"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.editPasswordCP(
			userEmailAddress = "userea@liferay.com",
			userScreenName = "usersn"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.assignRegularRoleCP(roleName = "Administrator", userScreenName = "usersn");

		User.logoutAndLoginPG(
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "${userLoginFullName}"
		);

		Navigator.gotoPage(pageName = "Calendar Page");

		Calendar.viewColor(
			calendarType = "Current Site Calendars",
			myCalendarColor = "668CD9"
		);

		CalendarScheduler.viewEventColor(
			eventBackgroundColorRGB = "(208, 219, 240)",
			eventFontColorRGB = "(104, 142, 217)",
			eventTitle = "Calendar Event Regular Title"
		);

		User.logoutAndLoginPG(
			userLoginEmailAddress = "test@liferay.com",
			userLoginFullName = "Test Test"
		);
	}

	@priority = "3"
	test ConfigureDefaultView {
		for (var defaultView : list "Day,Week,Month,Agenda") {
			Navigator.gotoPage(pageName = "Calendar Page");

			CalendarNavigator.gotoConfiguration();

			CalendarConfiguration.selectDefaultView(defaultView = "${defaultView}");

			PortletEntry.save();

			Navigator.gotoPage(pageName = "Calendar Page");

			CalendarScheduler.viewSelectedView(view = "${defaultView}");
		}
	}

	@priority = "5"
	test ConfigureDisplayTimeZone {
		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarNavigator.gotoConfiguration();

		CalendarConfiguration.editTimeZoneUTC();

		PortletEntry.save();

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarNavigator.gotoAddEvent();

		PortletEntry.inputTitle(title = "Calendar Event Title");

		CalendarEvent.setDatesToday();

		CalendarEvent.setTimes(endDateTime = "03:00 PM", startDateTime = "02:00 PM");

		CalendarEvent.publish();

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarScheduler.selectSpecificEvent(eventTitle = "Calendar Event Title");

		CalendarScheduler.viewEventTimesViaDialogBox(
			endDateTime = "3:00pm",
			startDateTime = "2:00pm"
		);

		CalendarScheduler.gotoDetailsViaDialogBox();

		CalendarEvent.viewTimesViaDetails(
			endDateTime = "03:00 PM",
			startDateTime = "02:00 PM"
		);

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarNavigator.gotoEditEvent(eventTitle = "Calendar Event Title");

		CalendarEvent.viewTimes(endDateTime = "03:00 PM", startDateTime = "02:00 PM");

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarNavigator.gotoConfiguration();

		CalendarConfiguration.enableGlobalTimeZone();

		PortletEntry.save();

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarScheduler.selectSpecificEvent(eventTitle = "Calendar Event Title");

		CalendarScheduler.viewEventTimesViaDialogBox(
			endDateTime = "am",
			startDateTime = "am"
		);

		CalendarScheduler.gotoDetailsViaDialogBox();

		CalendarEvent.viewTimesViaDetails(endDateTime = "AM", startDateTime = "AM");
	}

	@priority = "4"
	test DeactivateAndDeleteSiteCalendarAndViewSiteCalendarEvent {
		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Sites"
		);

		Site.addBlankCP(siteName = "Site Name");

		Navigator.gotoPage(pageName = "Calendar Page");

		Calendar.add(calendarName = "Site Name", calendarType = "Other Calendars");

		CalendarNavigator.gotoAddEvent();

		CalendarEvent.add(
			calendarName = "Site Name",
			eventTitle = "Site Name Calendar Event Regular",
			eventType = "Regular",
			pageName = "Calendar Page"
		);

		Navigator.gotoPage(pageName = "Calendar Page");

		Calendar.view(calendarName = "Site Name", calendarType = "Other Calandars");

		CalendarEvent.view(eventTitle = "Site Name Calendar Event Regular");

		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Sites"
		);

		Site.deactivateCP(siteName = "Site Name", successMessage = "true");

		Navigator.gotoPage(pageName = "Calendar Page");

		Calendar.view(calendarName = "Site Name", calendarType = "Other Calandars");

		CalendarEvent.view(eventTitle = "Site Name Calendar Event Regular");

		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Sites"
		);

		Site.deleteCP(siteName = "Site Name");

		Navigator.gotoPage(pageName = "Calendar Page");

		Calendar._viewCalendarHidden(calendarName = "Site Name");

		CalendarScheduler.viewSpecificEventNotPresent(
			eventTitle = "Site Name Calendar Event Regular"
		);
	}

	@priority = "4"
	test DeleteCalendarMyCalendars {
		Navigator.gotoPage(pageName = "Calendar Page");

		Calendar.add(calendarName = "Calendar Name", calendarType = "My Calendars");

		Navigator.gotoPage(pageName = "Calendar Page");

		Calendar.delete(
			calendarName = "Calendar Name",
			calendarType = "My Calendars",
			user = "Test Test"
		);

		Calendar.viewDefault();
	}

	@priority = "4"
	test DeleteCalendarResource {
		var calendarResourceName = "Calendar Resource Name";

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarResource.add(calendarResourceName = "${calendarResourceName}");

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarResource.delete(calendarResourceName = "${calendarResourceName}");

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarResource.viewDefault(calendarResourceName = "${calendarResourceName}");
	}

	@description = "This is a use case for LPS-67928."
	@priority = "3"
	test DeleteEventAndViewRSSFeed {
		var siteName = TestCase.getSiteName(siteName = "${siteName}");

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarNavigator.gotoAddEvent();

		PortletEntry.inputTitle(title = "Current Day Event");

		CalendarEvent.setTimes(endDateTime = "11:59 PM", startDateTime = "11:58 PM");

		CalendarEvent.setDatesToday();

		CalendarEvent.publish();

		Navigator.gotoPage(pageName = "Calendar Page");

		Calendar.chooseSiteCalendarMenulistOption(
			menuListOption = "RSS",
			siteCalendarName = "${siteName}",
			siteName = "${siteName}"
		);

		Calendar.viewRSSFeedEventPresent(
			calendarName = "${siteName}",
			eventTitle = "Current Day Event",
			pageName = "Calendar Page",
			siteCalendarName = "${siteName}",
			siteName = "${siteName}"
		);

		Navigator.closeWindow();

		CalendarEvent.tearDown();

		Navigator.gotoPage(pageName = "Calendar Page");

		Calendar.chooseSiteCalendarMenulistOption(
			menuListOption = "RSS",
			siteCalendarName = "${siteName}",
			siteName = "${siteName}"
		);

		Calendar.viewRSSFeedEventNotPresent(
			calendarName = "${siteName}",
			eventTitle = "Current Day Event",
			pageName = "Calendar Page",
			siteCalendarName = "${siteName}",
			siteName = "${siteName}"
		);

		Navigator.closeWindow();
	}

	@priority = "5"
	test DeleteEventRegular {
		property test.name.skip.portal.instance = "Calendar#DeleteEventRegular";

		var siteName = TestCase.getSiteName(siteName = "${siteName}");

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarNavigator.gotoAddEvent();

		CalendarEvent.add(
			eventTitle = "Calendar Event Regular Title",
			eventType = "Regular",
			pageName = "Calendar Page"
		);

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarEvent.deleteSpecific(eventTitle = "Calendar Event Regular Title");

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarScheduler.viewDefault(
			eventTitle = "Calendar Event Regular Title",
			pageName = "Calendar Page"
		);
	}

	@priority = "4"
	test DeleteEventRepeatingAllEventsInTheSeries {
		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarNavigator.gotoAddEvent();

		CalendarEvent.add(
			eventTitle = "Calendar Event Repeating Title",
			eventType = "Repeating",
			frequency = "Daily",
			numberOfOccurrences = "2",
			pageName = "Calendar Page"
		);

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarEvent.deleteRepeatingEventViaAgendaView(
			deleteOptionSet = "Entire Series",
			eventTitle = "Calendar Event Repeating Title",
			eventType = "Repeating"
		);

		CalendarScheduler.viewDefault(
			eventTitle = "Calendar Event Repeating Title",
			pageName = "Calendar Page"
		);
	}

	@priority = "5"
	test DeleteEventRepeatingAllFollowing {
		property portal.acceptance = "true";
		property test.name.skip.portal.instance = "Calendar#DeleteEventRepeatingAllFollowing";

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarNavigator.gotoAddEvent();

		CalendarEvent.add(
			eventTitle = "Calendar Event Repeating Title",
			eventType = "Repeating",
			frequency = "Daily",
			numberOfOccurrences = "2",
			pageName = "Calendar Page"
		);

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarEvent.deleteRepeatingEventViaAgendaView(
			deleteOptionSet = "Following Events",
			eventTitle = "Calendar Event Repeating Title",
			eventType = "Repeating"
		);

		CalendarEvent.view(eventTitle = "Calendar Event Repeating Title");
	}

	@priority = "4"
	test DeleteEventRepeatingOnlyThisInstance {
		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarNavigator.gotoAddEvent();

		PortletEntry.inputTitle(title = "Calendar Event Repeating Title");

		CalendarEvent.setDates(endDate = "02/2/2016", startDate = "02/2/2016");

		CalendarEvent.setTimes(endDateTime = "02:00 AM", startDateTime = "01:00 AM");

		CalendarEvent.setRepeating(frequency = "Daily", numberOfOccurrences = "2");

		CalendarEvent.publish();

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarNavigator.gotoMonthViaSmallCalendar(dateMonth = "February 2016");

		CalendarNavigator.gotoSpecificBusyDayViaSmallCalendar(dateNumber = "2");

		CalendarEvent.viewEventNotToday(
			eventTitle = "Calendar Event Repeating Title",
			numberOfOccurrences = "2"
		);

		CalendarEvent.deleteRepeatingEventViaAgendaView(
			deleteOptionSet = "Single Event",
			eventTitle = "Calendar Event Repeating Title",
			eventType = "Repeating"
		);

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarNavigator.gotoMonthViaSmallCalendar(dateMonth = "February 2016");

		CalendarNavigator.gotoSpecificBusyDayViaSmallCalendar(dateNumber = "3");

		CalendarEvent.viewEventNotToday(eventTitle = "Calendar Event Repeating Title");
	}

	@description = "This is a use case for LPS-67928."
	@priority = "3"
	test DisableRSSFeedForSiteCalendar {
		var siteName = TestCase.getSiteName(siteName = "${siteName}");

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarNavigator.gotoAddEvent();

		PortletEntry.inputTitle(title = "Current Day Event");

		CalendarEvent.setTimes(endDateTime = "11:59 PM", startDateTime = "11:58 PM");

		CalendarEvent.setDatesToday();

		CalendarEvent.publish();

		Navigator.gotoPage(pageName = "Calendar Page");

		Calendar.chooseSiteCalendarMenulistOption(
			menuListOption = "RSS",
			siteCalendarName = "${siteName}",
			siteName = "${siteName}"
		);

		Calendar.viewRSSFeedEventPresent(
			calendarName = "${siteName}",
			eventTitle = "Current Day Event",
			pageName = "Calendar Page",
			siteCalendarName = "${siteName}",
			siteName = "${siteName}"
		);

		var rssURL = selenium.getLocation();

		Navigator.closeWindow();

		CalendarNavigator.gotoConfiguration();

		CalendarConfiguration.enableRSS();

		CalendarConfiguration.viewRSSOptionsDisabled();

		PortletEntry.save();

		Navigator.gotoPage(pageName = "Calendar Page");

		Calendar.viewSiteCalendarNoMenulistOption(
			menuListOption = "RSS",
			siteCalendarName = "${siteName}",
			siteName = "${siteName}"
		);

		Calendar.viewNoRSS(rssURL = "${rssURL}");
	}

	@priority = "3"
	test EditCalendarCurrentSiteCalendars {
		var siteName = TestCase.getSiteName(siteName = "${siteName}");

		Navigator.gotoPage(pageName = "Calendar Page");

		Calendar.add(
			calendarName = "Site Calendar Name",
			calendarType = "Current Site Calendars",
			site = "${siteName}"
		);

		Navigator.gotoPage(pageName = "Calendar Page");

		Calendar.view(
			calendarName = "Site Calendar Name",
			calendarNameEdit = "Site Calendar Name Edit",
			calendarType = "Current Site Calendars",
			site = "${siteName}"
		);
	}

	@priority = "3"
	test EditCalendarMyCalendars {
		Navigator.gotoPage(pageName = "Calendar Page");

		Calendar.add(
			calendarName = "My Calendar Name",
			calendarType = "My Calendars",
			user = "Test Test"
		);

		Navigator.gotoPage(pageName = "Calendar Page");

		Calendar.edit(
			calendarName = "My Calendar Name",
			calendarNameEdit = "My Calendar Name Edit",
			calendarType = "My Calendars",
			user = "Test Test"
		);

		Navigator.gotoPage(pageName = "Calendar Page");

		Calendar.view(
			calendarName = "My Calendar Name Edit",
			calendarType = "My Calendars",
			user = "Test Test"
		);
	}

	@priority = "3"
	test EditCalendarResource {
		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarResource.add(calendarResourceName = "Calendar Resource Name");

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarResource.edit(
			calendarResourceName = "Calendar Resource Name",
			calendarResourceNameEdit = "Calendar Resource Name Edit"
		);

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarResource.view(calendarResourceName = "Calendar Resource Name Edit");
	}

	@priority = "3"
	test EditEventAllDay {
		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarNavigator.gotoAddEvent();

		CalendarEvent.add(
			eventTitle = "Calendar Event All Day Title",
			eventType = "All Day",
			pageName = "Calendar Page"
		);

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarEvent.edit(
			eventTitle = "Calendar Event All Day Title",
			eventTitleEdit = "Calendar Event All Day Title Edit",
			eventType = "All Day",
			pageName = "Calendar Page"
		);

		CalendarEvent.viewAllDay(eventTitle = "Calendar Event All Day Title Edit");
	}

	@priority = "3"
	test EditEventAllDayReminders {
		property portal.release = "false";

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarNavigator.gotoAddEvent();

		CalendarEvent.add(
			duration1 = "Minutes",
			duration2 = "Minutes",
			eventTitle = "Calendar Event All Day Title",
			eventType = "All Day",
			number1 = "5",
			number2 = "10",
			pageName = "Calendar Page",
			reminders = "true"
		);

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarEvent.edit(
			duration1 = "Minutes",
			duration2 = "Minutes",
			eventTitle = "Calendar Event All Day Title",
			eventTitleEdit = "Calendar Event All Day Title Edit",
			eventType = "All Day",
			number1 = "2",
			number2 = "4",
			pageName = "Calendar Page",
			reminders = "true"
		);

		CalendarScheduler.viewEventWithReminders(
			eventTitle = "Calendar Event All Day Title Edit"
		);

		CalendarEvent.viewAllDay(eventTitle = "Calendar Event All Day Title Edit");
	}

	@priority = "3"
	test EditEventAllDayWithUserInvite {
		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarNavigator.gotoAddEvent();

		CalendarEvent.add(
			eventTitle = "Calendar Event All Day Title",
			eventType = "All Day",
			optionSet = "true",
			optionSetValue = "inviteResource",
			pageName = "Calendar Page",
			specificOptionSetValue = "Test Test"
		);

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarEvent.edit(
			calendarName = "Test Test",
			eventTitle = "Calendar Event All Day Title",
			eventTitleEdit = "Calendar Event All Day Title Edit",
			eventType = "All Day",
			optionSetValue = "inviteResource",
			pageName = "Calendar Page"
		);

		CalendarEvent.viewAllDay(eventTitle = "Calendar Event All Day Title Edit");
	}

	@description = "This is a use case for LPS-59097."
	@priority = "4"
	test EditEventAndViewRSVP {
		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarNavigator.gotoAddEvent();

		CalendarEvent.addRegular(
			eventTitle = "Calendar Event Title",
			optionSet = "true",
			optionSetValue = "inviteResource",
			pageName = "Calendar Page",
			specificOptionSetValue = "Test Test"
		);

		Navigator.gotoPage(pageName = "Calendar Page");

		Calendar.hideCurrentSiteCalendar();

		CalendarEvent.addRSVP(eventTitle = "Calendar Event Title", rsvp = "Yes");

		CalendarScheduler.viewRSVP(eventTitle = "Calendar Event Title", rsvp = "Yes");

		Navigator.gotoPage(pageName = "Calendar Page");

		Calendar.showCurrentSiteCalendar();

		Calendar.hideMyCalendarsCalendar();

		CalendarNavigator.gotoEditEvent(
			eventTitle = "Calendar Event Title",
			eventType = "Regular"
		);

		CalendarEvent.setTimes(endDateTime = "10:00 AM", startDateTime = "06:00 AM");

		CalendarEvent.publishWithUserNotification();

		Navigator.gotoPage(pageName = "Calendar Page");

		Calendar.showMyCalendarsCalendar();

		Calendar.hideCurrentSiteCalendar();

		CalendarScheduler.viewNoRSVP(eventTitle = "Calendar Event Title");

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarEvent.addRSVP(eventTitle = "Calendar Event Title", rsvp = "Yes");

		Navigator.gotoPage(pageName = "Calendar Page");

		Calendar.showCurrentSiteCalendar();

		Calendar.hideMyCalendarsCalendar();

		CalendarScheduler.gotoEditSpecific(eventTitle = "Calendar Event Title");

		PortletEntry.inputTitle(title = "Edited Event Title");

		CalendarEvent.publishWithUserNotification();

		Navigator.gotoPage(pageName = "Calendar Page");

		Calendar.showMyCalendarsCalendar();

		Calendar.hideCurrentSiteCalendar();

		CalendarScheduler.viewRSVP(eventTitle = "Edited Event Title", rsvp = "Yes");

		Navigator.gotoPage(pageName = "Calendar Page");

		Calendar.showCurrentSiteCalendar();

		Calendar.hideMyCalendarsCalendar();

		CalendarScheduler.gotoEditSpecific(eventTitle = "Edited Event Title");

		CalendarEvent.setDates(endDate = "3/29/2016", startDate = "3/29/2016");

		CalendarEvent.publishWithUserNotification();

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarNavigator.gotoMonthViaSmallCalendar(dateMonth = "March 2016");

		CalendarNavigator.gotoSpecificBusyDayViaSmallCalendar(dateNumber = "29");

		Calendar.showMyCalendarsCalendar();

		Calendar.hideCurrentSiteCalendar();

		CalendarScheduler.viewNoRSVP(
			eventTitle = "Edited Event Title",
			eventToday = "false"
		);
	}

	@priority = "4"
	test EditEventRegular {
		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarNavigator.gotoAddEvent();

		CalendarEvent.add(
			eventTitle = "Calendar Event Regular Title",
			eventType = "Regular",
			pageName = "Calendar Page"
		);

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarEvent.edit(
			eventTitle = "Calendar Event Regular Title",
			eventTitleEdit = "Calendar Event Regular Title Edit",
			eventType = "Regular",
			pageName = "Calendar Page"
		);

		CalendarEvent.view(eventTitle = "Calendar Event Regular Title Edit");
	}

	@priority = "3"
	test EditEventRegularReminders {
		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarNavigator.gotoAddEvent();

		CalendarEvent.add(
			duration1 = "Minutes",
			duration2 = "Minutes",
			eventTitle = "Calendar Event Regular Title",
			eventType = "Regular",
			number1 = "5",
			number2 = "10",
			pageName = "Calendar Page",
			reminders = "true"
		);

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarEvent.edit(
			duration1 = "Minutes",
			duration2 = "Minutes",
			eventTitle = "Calendar Event Regular Title",
			eventTitleEdit = "Calendar Event Regular Title Edit",
			eventType = "Regular",
			number1 = "2",
			number2 = "4",
			pageName = "Calendar Page",
			reminders = "true"
		);

		CalendarScheduler.viewEventWithReminders(
			eventTitle = "Calendar Event Regular Title Edit"
		);

		CalendarEvent.view(
			eventTitle = "Calendar Event Regular Title Edit",
			frequency = "Daily",
			numberOfOccurrences = "1"
		);
	}

	@description = "This is a use case for LPS-50026."
	@priority = "4"
	test EditEventRegularWithUserInvite {
		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarNavigator.gotoAddEvent();

		CalendarEvent.add(
			eventTitle = "Calendar Event Regular Title",
			eventType = "Regular",
			optionSet = "true",
			optionSetValue = "inviteResource",
			pageName = "Calendar Page",
			specificOptionSetValue = "Test Test"
		);

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarNavigator.gotoView(viewType = "Week");

		Calendar.hideMyCalendarsCalendar();

		CalendarScheduler.selectSpecificEvent(
			eventTitle = "Calendar Event Regular Title"
		);

		CalendarScheduler.editTitle(eventTitle = "Edited Title");

		CalendarScheduler.saveEvent();

		CalendarEvent.saveEventUserInvite();

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarNavigator.gotoView(viewType = "Week");

		CalendarScheduler.selectSpecificEvent(eventTitle = "Edited Title");

		CalendarScheduler.gotoEditViaDialogBox();

		PortletEntry.inputTitle(title = "New Edited Title");

		CalendarEvent.clickPublish();

		CalendarEvent.saveEventUserInviteCancel();

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarEvent.view(eventTitle = "Edited Title");
	}

	@priority = "3"
	test EditEventRepeating {
		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarNavigator.gotoAddEvent();

		CalendarEvent.add(
			eventTitle = "Calendar Event Repeating Title",
			eventType = "Repeating",
			frequency = "Daily",
			numberOfOccurrences = "1",
			pageName = "Calendar Page"
		);

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarEvent.edit(
			eventTitle = "Calendar Event Repeating Title",
			eventTitleEdit = "Calendar Event Repeating Title Edit",
			eventType = "Repeating",
			pageName = "Calendar Page"
		);

		CalendarEvent.view(
			eventTitle = "Calendar Event Repeating Title Edit",
			frequency = "Daily",
			numberOfOccurrences = "1"
		);
	}

	@description = "This is a use case for LPS-50016."
	@priority = "3"
	test EditEventRepeatingAllEventsInTheSeries {
		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarNavigator.gotoAddEvent();

		PortletEntry.inputTitle(title = "Original Event Title");

		CalendarEvent.setRepeating(frequency = "Daily");

		CalendarEvent.publish();

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarNavigator.gotoNextDay();

		Refresh();

		CalendarNavigator.gotoNextDay();

		CalendarScheduler.selectSpecificEvent(
			eventTitle = "Original Event Title",
			eventToday = "false"
		);

		CalendarScheduler.editTitle(eventTitle = "Edited Title");

		CalendarScheduler.saveRepeatingEvent(saveOption = "Entire Series");

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarNavigator.gotoView(viewType = "Day");

		CalendarNavigator.gotoToday();

		CalendarScheduler.selectSpecificEvent(eventTitle = "Edited Title");
	}

	@description = "This is a use case for LPS-50017"
	@priority = "2"
	test EditEventRepeatingAllFollowing {
		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarNavigator.gotoAddEvent();

		PortletEntry.inputTitle(title = "Original Event Title");

		CalendarEvent.setRepeating(frequency = "Daily");

		CalendarEvent.publish();

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarNavigator.gotoNextDay();

		Refresh();

		CalendarNavigator.gotoNextDay();

		CalendarScheduler.selectSpecificEvent(
			eventTitle = "Original Event Title",
			eventToday = "false"
		);

		CalendarScheduler.gotoEditViaDialogBox();

		PortletEntry.inputTitle(title = "Edited Title");

		CalendarEvent.publishRepeating(saveOption = "Following Events");

		CalendarEvent.viewTitle(eventTitle = "Edited Title");
	}

	@priority = "4"
	test EditEventRepeatingReminders {
		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarNavigator.gotoAddEvent();

		CalendarEvent.add(
			duration1 = "Minutes",
			duration2 = "Minutes",
			eventTitle = "Calendar Event Repeating Title",
			eventType = "Repeating",
			frequency = "Daily",
			number1 = "5",
			number2 = "10",
			numberOfOccurrences = "1",
			pageName = "Calendar Page",
			reminders = "true"
		);

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarEvent.edit(
			duration1 = "Minutes",
			duration2 = "Minutes",
			eventTitle = "Calendar Event Repeating Title",
			eventTitleEdit = "Calendar Event Repeating Title Edit",
			eventType = "Repeating",
			number1 = "2",
			number2 = "4",
			pageName = "Calendar Page",
			reminders = "true"
		);

		CalendarScheduler.viewEventWithReminders(
			eventTitle = "Calendar Event Repeating Title Edit"
		);

		CalendarEvent.view(
			eventTitle = "Calendar Event Repeating Title Edit",
			frequency = "Daily",
			numberOfOccurrences = "1"
		);
	}

	@priority = "4"
	test EditEventRepeatingWithUserInvite {
		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarNavigator.gotoAddEvent();

		CalendarEvent.add(
			eventTitle = "Calendar Event Repeating Title",
			eventType = "Repeating",
			frequency = "Daily",
			numberOfOccurrences = "1",
			optionSet = "true",
			optionSetValue = "inviteResource",
			pageName = "Calendar Page",
			specificOptionSetValue = "Test Test"
		);

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarEvent.edit(
			calendarName = "Test Test",
			eventTitle = "Calendar Event Repeating Title",
			eventTitleEdit = "Calendar Event Repeating Title Edit",
			eventType = "Repeating",
			optionSetValue = "inviteResource",
			pageName = "Calendar Page"
		);

		CalendarEvent.view(eventTitle = "Calendar Event Repeating Title Edit");
	}

	@priority = "3"
	test EditInviteEmailTemplateForCalendarResourceCalendar {
		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarResource.add(calendarResourceName = "Calendar Resource Name");

		Navigator.gotoPage(pageName = "Calendar Page");

		Calendar.add(
			calendarName = "Calendar Resource Name",
			calendarType = "Other Calendars"
		);

		Navigator.gotoPage(pageName = "Calendar Page");

		Calendar.editEmailTemplate(
			calendarName = "Calendar Resource Name",
			calendarType = "Other Calendars",
			fromAddressEdit = "testedit@liferay.com",
			fromNameEdit = "Calendar Resource Name Edit",
			inviteEmail = "true"
		);

		Navigator.gotoPage(pageName = "Calendar Page");

		Calendar.view(
			calendarName = "Calendar Resource Name",
			calendarType = "Other Calendars"
		);
	}

	@priority = "4"
	test EditInviteEmailTemplateForCurrentSiteCalendarsCalendar {
		var siteName = TestCase.getSiteName(siteName = "${siteName}");

		Navigator.gotoPage(pageName = "Calendar Page");

		Calendar.add(
			calendarName = "Site Calendar Name",
			calendarType = "Current Site Calendars",
			site = "${siteName}"
		);

		Navigator.gotoPage(pageName = "Calendar Page");

		Calendar.editEmailTemplate(
			calendarName = "Site Calendar Name",
			calendarType = "Current Site Calendars",
			fromAddressEdit = "testedit@liferay.com",
			fromNameEdit = "Site Calendar Name Edit",
			inviteEmail = "true",
			site = "${siteName}"
		);

		Navigator.gotoPage(pageName = "Calendar Page");

		Calendar.view(
			calendarName = "Site Calendar Name",
			calendarType = "Current Site Calendars",
			site = "${siteName}"
		);
	}

	@priority = "3"
	test EditInviteEmailTemplateForMyCalendarsCalendar {
		Navigator.gotoPage(pageName = "Calendar Page");

		Calendar.add(
			calendarName = "My Calendar Name",
			calendarType = "My Calendars",
			user = "Test Test"
		);

		Navigator.gotoPage(pageName = "Calendar Page");

		Calendar.editEmailTemplate(
			calendarName = "My Calendar Name",
			calendarType = "My Calendars",
			fromAddressEdit = "testedit@liferay.com",
			fromNameEdit = "My Calendar Name Edit",
			inviteEmail = "true",
			user = "Test Test"
		);

		Navigator.gotoPage(pageName = "Calendar Page");

		Calendar.view(
			calendarName = "My Calendar Name",
			calendarType = "My Calendars",
			user = "Test Test"
		);
	}

	@priority = "3"
	test EditInviteEmailTemplateForUserCalendar {
		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.addCP(
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userScreenName = "usersn"
		);

		Navigator.gotoPage(pageName = "Calendar Page");

		Calendar.add(calendarName = "userfn userln", calendarType = "Other Calendars");

		Navigator.gotoPage(pageName = "Calendar Page");

		Calendar.editEmailTemplate(
			calendarName = "userfn userln",
			calendarType = "Other Calendars",
			fromAddressEdit = "testedit@liferay.com",
			fromNameEdit = "Calendar Resource Name Edit",
			inviteEmail = "true"
		);

		Navigator.gotoPage(pageName = "Calendar Page");

		Calendar.view(calendarName = "userfn userln", calendarType = "Other Calendars");
	}

	@description = "This is a use case for LPS-58649."
	@priority = "3"
	test EditLanguageSelectorAndViewEvent {
		property test.name.skip.portal.instance = "Calendar#EditLanguageSelectorAndViewEvent";

		Navigator.gotoPage(pageName = "Calendar Page");

		Portlet.addPG(pageName = "Calendar Page", portletName = "Language");

		LanguagePortlet.selectLanguagePG(language = "Spanish (Spain)");

		CalendarScheduler.addLocalizedEvent(
			eventTitle = "Calendar Event Title",
			saveButton = "Guardar",
			viewType = "Week"
		);

		CalendarScheduler.viewLocalizedEvent(
			eventTitle = "Calendar Event Title",
			viewTypeLocalized = "Semana"
		);

		Navigator.gotoPage(pageName = "Calendar Page");

		LanguagePortlet.selectLanguagePG(language = "English (United States)");

		CalendarScheduler.viewDay(eventTitle = "Calendar Event Title");
	}

	@priority = "3"
	test EditReminderEmailTemplateForCalendarResourceCalendar {
		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarResource.add(calendarResourceName = "Calendar Resource Name");

		Navigator.gotoPage(pageName = "Calendar Page");

		Calendar.add(
			calendarName = "Calendar Resource Name",
			calendarType = "Other Calendars"
		);

		Navigator.gotoPage(pageName = "Calendar Page");

		Calendar.editEmailTemplate(
			calendarName = "Calendar Resource Name",
			calendarType = "Other Calendars",
			fromAddressEdit = "testedit@liferay.com",
			fromNameEdit = "Calendar Resource Name Edit",
			reminderEmail = "true"
		);

		Navigator.gotoPage(pageName = "Calendar Page");

		Calendar.view(
			calendarName = "Calendar Resource Name",
			calendarType = "Other Calendars"
		);
	}

	@priority = "4"
	test EditReminderEmailTemplateForCurrentSiteCalendarsCalendar {
		var siteName = TestCase.getSiteName(siteName = "${siteName}");

		Navigator.gotoPage(pageName = "Calendar Page");

		Calendar.add(
			calendarName = "Site Calendar Name",
			calendarType = "Current Site Calendars",
			site = "${siteName}"
		);

		Navigator.gotoPage(pageName = "Calendar Page");

		Calendar.editEmailTemplate(
			calendarName = "Site Calendar Name",
			calendarType = "Current Site Calendars",
			fromAddressEdit = "testedit@liferay.com",
			fromNameEdit = "Site Calendar Name Edit",
			reminderEmail = "true",
			site = "${siteName}"
		);

		Navigator.gotoPage(pageName = "Calendar Page");

		Calendar.view(
			calendarName = "Site Calendar Name",
			calendarType = "Current Site Calendars",
			site = "${siteName}"
		);
	}

	@priority = "3"
	test EditReminderEmailTemplateForMyCalendarsCalendar {
		Navigator.gotoPage(pageName = "Calendar Page");

		Calendar.add(
			calendarName = "My Calendar Name",
			calendarType = "My Calendars",
			user = "Test Test"
		);

		Navigator.gotoPage(pageName = "Calendar Page");

		Calendar.editEmailTemplate(
			calendarName = "My Calendar Name",
			calendarType = "My Calendars",
			fromAddressEdit = "testedit@liferay.com",
			fromNameEdit = "My Calendar Name Edit",
			reminderEmail = "true",
			user = "Test Test"
		);

		Navigator.gotoPage(pageName = "Calendar Page");

		Calendar.view(
			calendarName = "My Calendar Name",
			calendarType = "My Calendars",
			user = "Test Test"
		);
	}

	@priority = "3"
	test EditReminderEmailTemplateForUserCalendar {
		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.addCP(
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userScreenName = "usersn"
		);

		Navigator.gotoPage(pageName = "Calendar Page");

		Calendar.add(calendarName = "userfn userln", calendarType = "Other Calendars");

		Navigator.gotoPage(pageName = "Calendar Page");

		Calendar.editEmailTemplate(
			calendarName = "userfn userln",
			calendarType = "Other Calendars",
			fromAddressEdit = "testedit@liferay.com",
			fromNameEdit = "Calendar Resource Name Edit",
			reminderEmail = "true"
		);

		Navigator.gotoPage(pageName = "Calendar Page");

		Calendar.view(calendarName = "userfn userln", calendarType = "Other Calendars");
	}

	@priority = "3"
	test EditUserCalendarOtherCalendars {
		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.addCP(
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userScreenName = "usersn"
		);

		Navigator.gotoPage(pageName = "Calendar Page");

		Calendar.add(calendarName = "userfn userln", calendarType = "Other Calendars");

		Navigator.gotoPage(pageName = "Calendar Page");

		Calendar.edit(
			calendarName = "userfn userln",
			calendarNameEdit = "userfn userln Edit",
			calendarType = "Other Calendars"
		);

		Navigator.gotoPage(pageName = "Calendar Page");

		Calendar.view(
			calendarName = "userfn userln - userfn userln Edit",
			calendarType = "Other Calendars"
		);
	}

	@description = "This is a use case for LPS-57992."
	@priority = "4"
	test ExportUserCalendarAsICS {
		CalendarNavigator.gotoAddEvent();

		CalendarEvent.add(
			calendarName = "Test Test",
			eventTitle = "Event For Export",
			eventType = "Regular",
			pageName = "Calendar Page"
		);

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarNavigator.gotoMyCalendarsManage();

		Calendar.exportCalendarFile(calendarName = "Test Test");

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarEvent.view(eventTitle = "Event For Export");
	}

	@priority = "5"
	test ImportCalendarAndViewEventRegularComment {
		var siteName = TestCase.getSiteName(siteName = "${siteName}");

		Navigator.gotoPage(pageName = "Calendar Page");

		Calendar.enableComments(
			calendarName = "${siteName}",
			calendarType = "Current Site Calendars",
			site = "${siteName}",
			user = "Test Test"
		);

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarNavigator.gotoAddEvent();

		CalendarEvent.add(
			calendarName = "${siteName}",
			eventComment = "Calendar Event Regular Comment",
			eventCommentEnabled = "true",
			eventTitle = "Calendar Event Regular Title",
			eventType = "Regular",
			pageName = "Calendar Page",
			site = "${siteName}",
			userFullName = "Test Test (You)"
		);

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarEvent.viewComment(
			calendarName = "${siteName}",
			eventComment = "Calendar Event Regular Comment",
			eventTitle = "Calendar Event Regular Title",
			eventType = "Regular",
			site = "${siteName}",
			userFullName = "Test Test (You)"
		);

		Navigator.gotoPage(pageName = "Calendar Page");

		LAR.exportPortlet(
			larFileName = "calendar_calendar_with_comments.portlet.lar",
			portletName = "Calendar"
		);

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarEvent.tearDown();

		Calendar.tearDown();

		Navigator.gotoPage(pageName = "Calendar Page");

		LAR.importPortlet(
			larFileName = "calendar_calendar_with_comments.portlet.lar",
			portletName = "Calendar"
		);

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarEvent.view(eventTitle = "Calendar Event Regular Title");

		CalendarEvent.viewComment(
			calendarName = "${siteName}",
			eventComment = "Calendar Event Regular Comment",
			eventTitle = "Calendar Event Regular Title",
			eventType = "Regular",
			userFullName = "Test Test (You)"
		);
	}

	@description = "This is a use case for LPS-53072."
	@priority = "4"
	test ImportMicrosoftOutlookCalendarICS {
		var siteName = TestCase.getSiteName(siteName = "${siteName}");

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarNavigator.gotoCurrentSiteCalendarsManage();

		Calendar.importCalendarFile(
			calendarFile = "calendar_microsoft_outlook_calendar.ics",
			calendarName = "${siteName}"
		);
	}

	@description = "This is a use case for LPS-46700."
	@priority = "3"
	test InviteAndViewAdditionalUsers {
		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.addCP(
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userScreenName = "usersn"
		);

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarNavigator.gotoAddEvent();

		CalendarEvent.add(
			eventTitle = "Calendar Event Regular Title",
			eventType = "Regular",
			optionSet = "true",
			optionSetValue = "inviteResource",
			pageName = "Calendar Page",
			specificOptionSetValue = "userfn userln,Test Test"
		);

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarEvent.view(eventTitle = "Calendar Event Regular Title");

		CalendarEvent.viewUsers(
			eventTitle = "Calendar Event Regular Title",
			eventType = "Regular",
			usersList = "userfn userln,Test Test"
		);
	}

	@priority = "4"
	test InviteUsersAndViewResponse {
		var siteName = TestCase.getSiteName(siteName = "${siteName}");

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.addCP(
			userEmailAddress = "usersn1@liferay.com",
			userFirstName = "userfn1",
			userLastName = "userln1",
			userScreenName = "usersn1"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.addCP(
			userEmailAddress = "usersn2@liferay.com",
			userFirstName = "userfn2",
			userLastName = "userln2",
			userScreenName = "usersn2"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.addCP(
			userEmailAddress = "usersn3@liferay.com",
			userFirstName = "userfn3",
			userLastName = "userln3",
			userScreenName = "usersn3"
		);

		for (var userScreenName : list "usersn1,usersn2,usersn3") {
			ProductMenu.gotoPortlet(
				category = "Users",
				panel = "Control Panel",
				portlet = "Users and Organizations"
			);

			User.editPasswordCP(
				userEmailAddress = "${userScreenName}@liferay.com",
				userScreenName = "${userScreenName}"
			);
		}

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarNavigator.gotoAddEvent();

		CalendarEvent.add(
			eventTitle = "Calendar Event Title",
			eventType = "Regular",
			optionSet = "true",
			optionSetValue = "inviteResource",
			pageName = "Calendar Page",
			specificOptionSetValue = "userfn1 userln1,userfn2 userln2,userfn3 userln3"
		);

		User.logoutAndLoginPG(
			userLoginEmailAddress = "usersn1@liferay.com",
			userLoginFullName = "userfn1 userln1"
		);

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarEvent.addRSVP(eventTitle = "Calendar Event Title", rsvp = "Maybe");

		User.logoutAndLoginPG(
			userLoginEmailAddress = "usersn2@liferay.com",
			userLoginFullName = "userfn2 userln2"
		);

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarEvent.addRSVP(eventTitle = "Calendar Event Title", rsvp = "No");

		User.logoutAndLoginPG(
			userLoginEmailAddress = "usersn3@liferay.com",
			userLoginFullName = "userfn3 userln3"
		);

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarEvent.addRSVP(eventTitle = "Calendar Event Title", rsvp = "Yes");

		User.logoutAndLoginPG(
			userLoginEmailAddress = "test@liferay.com",
			userLoginFullName = "Test Test"
		);

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarNavigator.gotoEditEvent(eventTitle = "Calendar Event Title");

		CalendarEvent.viewRSVPAccepted(resourceName = "${siteName}");

		CalendarEvent.viewRSVPAccepted(resourceName = "userfn3 userln3");

		CalendarEvent.viewRSVPDeclined(resourceName = "userfn2 userln2");

		CalendarEvent.viewRSVPMaybe(resourceName = "userfn1 userln1");
	}

	@description = "This is a use case for LPS-45062."
	@priority = "5"
	test ResizeAddedEventsViaEventBlock {
		property portal.release = "false";

		CalendarNavigator.gotoView(viewType = "Day");

		CalendarNavigator.gotoPreviousDay();

		CalendarEvent.addViaDayView(
			eventBlock = "true",
			eventTitle = "Calendar Event Title1"
		);

		Alert.viewSuccessMessage();

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarNavigator.gotoPreviousDay();

		CalendarEvent.resizeViaEventBlock();

		Alert.viewSuccessMessage();

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarNavigator.gotoAddEvent();

		PortletEntry.inputTitle(title = "Calendar Event Title2");

		CalendarEvent.setTimes(endDateTime = "06:00 AM", startDateTime = "03:00 AM");

		CalendarEvent.publish();

		Navigator.gotoPage(pageName = "Calendar Page");

		ScrollWebElementIntoView(locator1 = "Calendar#SCHEDULER_EVENT_GENERIC");

		CalendarEvent.resizeViaEventBlock();

		Alert.viewSuccessMessage();
	}

	@description = "This is a use case for LPS-59743."
	@priority = "3"
	test SearchCalendarResource {
		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarResource.add(calendarResourceName = "Room 1");

		CalendarResource.add(calendarResourceName = "Car1");

		CalendarResource.add(calendarResourceName = "Truck");

		CalendarResource.search(calendarResourceName = "Room Car ");

		CalendarResource.viewResourceName(calendarResourceName = "Room 1");

		CalendarResource.viewResourceName(calendarResourceName = "Car1");

		CalendarResource.viewResourceNameNotPresent(calendarResourceName = "Truck");

		CalendarResource.search(calendarResourceName = "Room");

		CalendarResource.viewResourceName(calendarResourceName = "Room 1");

		CalendarResource.viewResourceNameNotPresent(calendarResourceName = "Car1");

		CalendarResource.viewResourceNameNotPresent(calendarResourceName = "Truck");
	}

	@description = "This is a use case for LPS-54548."
	@priority = "4"
	test SearchEventInSearchPortletWithTag {
		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarNavigator.gotoAddEvent();

		CalendarEvent.add(
			eventTitle = "Calendar Event Title",
			eventType = "Regular",
			optionSet = "true",
			optionSetValue = "tag",
			pageName = "Calendar Page",
			specificOptionSetValue = "tag1"
		);

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarEvent.viewApprovedRSVP(
			eventTitle = "Calendar Event Title",
			rsvp = "Yes"
		);

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarEvent.view(eventTitle = "Calendar Event Title");

		Navigator.gotoPage(pageName = "Calendar Page");

		Search.searchPG(searchTerm = "tag1");

		Search.viewSearchResultPG(
			searchAssetTitle = "Calendar Event Title",
			searchAssetType = "Calendar Event"
		);
	}

	@priority = "5"
	test SearchForOtherCalendars {
		property portal.acceptance = "true";
		property test.name.skip.portal.instance = "Calendar#SearchForOtherCalendars";
		property testray.component.names = "Training";

		var siteName = TestCase.getSiteName(siteName = "${siteName}");

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.addCP(
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userScreenName = "usersn"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.editPasswordCP(
			userEmailAddress = "userea@liferay.com",
			userScreenName = "usersn"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.assignRegularRoleCP(roleName = "Administrator", userScreenName = "usersn");

		User.logoutAndLoginPG(
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln"
		);

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarNavigator.gotoAddEvent();

		CalendarEvent.add(
			eventTitle = "User Calendar Event 1",
			eventType = "Regular",
			pageName = "Calendar Page"
		);

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarScheduler.changeCalendar(
			calendarDefaultName = "${siteName}",
			calendarName = "userfn userln",
			eventTitle = "User Calendar Event 1",
			eventType = "Regular"
		);

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarNavigator.gotoAddEvent();

		CalendarEvent.add(
			eventTitle = "User Calendar Event 2",
			eventType = "Regular",
			pageName = "Calendar Page"
		);

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarScheduler.changeCalendar(
			calendarDefaultName = "${siteName}",
			calendarName = "userfn userln",
			eventTitle = "User Calendar Event 2",
			eventType = "Regular"
		);

		User.logoutAndLoginPG(
			userLoginEmailAddress = "test@liferay.com",
			userLoginFullName = "Test Test"
		);

		Navigator.gotoPage(pageName = "Calendar Page");

		Calendar.searchOtherCalendars(searchValue = "u");

		Calendar.viewOtherCalendarsSearchResult(calendarName = "userfn userln");
	}

	@description = "This is a use case for LPS-51572."
	@priority = "3"
	test SearchForOtherCalendarsAsNonPowerUser {
		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.addCP(
			userEmailAddress = "userea1@liferay.com",
			userFirstName = "userfn1",
			userLastName = "userln1",
			userScreenName = "usersn1"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.editPasswordCP(
			userEmailAddress = "userea1@liferay.com",
			userScreenName = "usersn1"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.addCP(
			userEmailAddress = "userea2@liferay.com",
			userFirstName = "userfn2",
			userLastName = "userln2",
			userScreenName = "usersn2"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.editPasswordCP(
			userEmailAddress = "userea2@liferay.com",
			userScreenName = "usersn2"
		);

		User.logoutAndLoginPG(
			userLoginEmailAddress = "userea1@liferay.com",
			userLoginFullName = "userfn1 userln1"
		);

		Navigator.gotoPage(pageName = "Calendar Page");

		Calendar.searchOtherCalendars(searchValue = "u");

		Calendar.viewOtherCalendarsSearchResult(calendarName = "userfn2 userln2");

		User.logoutAndLoginPG(
			userLoginEmailAddress = "userea2@liferay.com",
			userLoginFullName = "userfn2 userln2"
		);

		Navigator.gotoPage(pageName = "Calendar Page");

		User.logoutAndLoginPG(
			userLoginEmailAddress = "userea1@liferay.com",
			userLoginFullName = "userfn1 userln1"
		);

		Navigator.gotoPage(pageName = "Calendar Page");

		Calendar.searchOtherCalendars(searchValue = "u");

		Calendar.viewOtherCalendarsSearchResult(calendarName = "userfn2 userln2");

		User.logoutAndLoginPG(
			userLoginEmailAddress = "test@liferay.com",
			userLoginFullName = "Test Test"
		);
	}

	@priority = "4"
	test View24hourTimeFormat {
		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarScheduler.viewFirstHour(firstHour = "12am");

		CalendarScheduler.viewLastHour(lastHour = "11pm");

		CalendarNavigator.gotoAddEvent();

		PortletEntry.inputTitle(title = "Calendar Event Title");

		CalendarEvent.setDatesToday();

		CalendarEvent.setTimes(endDateTime = "11:00 PM", startDateTime = "09:00 PM");

		CalendarEvent.publish();

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarNavigator.gotoConfiguration();

		CalendarConfiguration.selectTimeFormat(timeFormat = "24 Hour");

		PortletEntry.save();

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarScheduler.viewFirstHour(firstHour = "00:00");

		CalendarScheduler.viewLastHour(lastHour = "23:00");

		CalendarScheduler.selectSpecificEvent(eventTitle = "Calendar Event Title");

		CalendarScheduler.viewEventTimesViaDialogBox(
			endDateTime = "23:00",
			startDateTime = "21:00"
		);

		CalendarScheduler.gotoDetailsViaDialogBox();

		CalendarEvent.viewTimesViaDetails(
			endDateTime = "23:00",
			startDateTime = "21:00"
		);

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarNavigator.gotoEditEvent(eventTitle = "Calendar Event Title");

		CalendarEvent.viewTimes24Hour(endDateTime = "23:00", startDateTime = "21:00");

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarNavigator.gotoConfiguration();

		CalendarConfiguration.selectTimeFormat(timeFormat = "AM/PM");

		PortletEntry.save();

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarScheduler.viewFirstHour(firstHour = "12am");

		CalendarScheduler.viewLastHour(lastHour = "11pm");

		CalendarScheduler.selectSpecificEvent(eventTitle = "Calendar Event Title");

		CalendarScheduler.viewEventTimesViaDialogBox(
			endDateTime = "11:00pm",
			startDateTime = "9:00pm"
		);

		CalendarScheduler.gotoDetailsViaDialogBox();

		CalendarEvent.viewTimesViaDetails(
			endDateTime = "11:00 PM",
			startDateTime = "09:00 PM"
		);

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarNavigator.gotoEditEvent(eventTitle = "Calendar Event Title");

		CalendarEvent.viewTimes(endDateTime = "11:00 PM", startDateTime = "09:00 PM");
	}

	@priority = "4"
	test ViewAvailableCalendars {
		property test.name.skip.portal.instance = "Calendar#ViewAvailableCalendars";

		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Sites"
		);

		Site.addCP(siteName = "Site Name", siteType = "Blank");

		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Sites"
		);

		Page.add(pageName = "Calendar Site Page", siteName = "Site Name");

		Navigator.openSiteURL(siteName = "Site Name");

		Portlet.addPG(portletName = "Calendar");

		Navigator.openSiteURL(siteName = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.addCP(
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userScreenName = "usersn"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.editPasswordCP(
			userEmailAddress = "userea@liferay.com",
			userScreenName = "usersn"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.assignRegularRoleCP(roleName = "Administrator", userScreenName = "usersn");

		User.logoutAndLoginPG(
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln"
		);

		UserBar.gotoProfile();

		Portlet.addPG(portletName = "Calendar");

		User.logoutAndLoginPG(
			userLoginEmailAddress = "test@liferay.com",
			userLoginFullName = "Test Test"
		);

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarNavigator.gotoAddEvent();

		CalendarEvent.viewAvailableCalendars(
			availableCalendarList = "Liferay,Test Test,Site Name"
		);

		CalendarEvent.viewUnavailableCalendarsNotPresent(
			unavailableCalendarList = "userfn userln"
		);

		Navigator.gotoPage(pageName = "Calendar Page");

		Calendar.add(calendarName = "userfn userln", calendarType = "Other Calendars");

		CalendarNavigator.gotoAddEvent();

		CalendarEvent.viewAvailableCalendars(
			availableCalendarList = "Liferay,Test Test,Site Name,userfn userln"
		);
	}

	@priority = "5"
	test ViewCalendarTimeZoneDefaults {
		property test.name.skip.portal.instance = "Calendar#ViewCalendarTimeZoneDefaults";

		UserBar.gotoMyAccount();

		User.editUserDisplaySettingsTimeZonePacific(
			displaySettingsGreeting = "Welcome Test Test!"
		);

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Control Panel",
			portlet = "Instance Settings"
		);

		PortalSettings.configureTimeZone(timeZone = "(UTC +08:00) China Standard Time");

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarNavigator.gotoAddMyCalendars();

		Calendar.viewSelectedTimeZone(timeZone = "(UTC -08:00) Pacific Standard Time");

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarNavigator.gotoAddCurrentSiteCalendars();

		Calendar.viewSelectedTimeZone(timeZone = "(UTC +08:00) China Standard Time");
	}

	@description = "This is a use case for LPS-51222."
	@priority = "3"
	test ViewCorrectCalendarOnEventSwitch {
		var siteName = TestCase.getSiteName(siteName = "${siteName}");

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarNavigator.gotoAddEvent();

		PortletEntry.inputTitle(title = "Site Event");

		CalendarEvent.selectCalendar(calendarName = "${siteName}");

		CalendarEvent.publish();

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarNavigator.gotoAddEvent();

		PortletEntry.inputTitle(title = "Personal Event");

		CalendarEvent.selectCalendar(calendarName = "Test Test");

		CalendarEvent.publish();

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarEvent.viewDetails(
			calendarName = "${siteName}",
			eventTitle = "Site Event"
		);

		CalendarEvent.viewDetailsResources(calendarName = "${siteName}");

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarEvent.viewDetails(
			calendarName = "Test Test",
			eventTitle = "Personal Event"
		);

		CalendarEvent.viewDetailsResources(calendarName = "Test Test");

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarEvent.viewDetails(
			calendarName = "${siteName}",
			eventTitle = "Site Event"
		);

		CalendarEvent.viewDetailsResources(calendarName = "${siteName}");

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarEvent.viewDetails(
			calendarName = "Test Test",
			eventTitle = "Personal Event"
		);

		CalendarEvent.viewDetailsResources(calendarName = "Test Test");
	}

	@description = "This is a use case for LPS-52517."
	@priority = "3"
	test ViewCorrectNumberOfWeeksMonthView {
		Navigator.gotoPage(pageName = "Calendar Page");

		Calendar.viewMonth(dateMonth = "April 2016");

		Calendar.viewWeekCountViaMonthView(weekNumber = "5");

		Calendar.viewMonth(dateMonth = "July 2016");

		Calendar.viewWeekCountViaMonthView(weekNumber = "6");
	}

	@description = "This is a use case for LPS-67400."
	@priority = "2"
	test ViewCreatedEventVisibleOnScheduler {
		CalendarNavigator.gotoAddEvent();

		var endDateTime = selenium.getElementValue("CalendarEditEvent#END_DATE_TIME");
		var startDateTime = selenium.getElementValue("CalendarEditEvent#START_DATE_TIME");

		CalendarEvent.viewTimes(
			endDateTime = "${endDateTime}",
			startDateTime = "${startDateTime}"
		);

		PortletEntry.inputTitle(title = "Calendar Event");

		CalendarEvent.publish();

		IFrame.closeFrame();

		CalendarScheduler.selectSpecificEvent(eventTitle = "Calendar Event");
	}

	@priority = "3"
	test ViewDefaultDurationsViaScheduler {
		for (var minutes : list "15,30,60,120") {
			Navigator.gotoPage(pageName = "Calendar Page");

			CalendarNavigator.gotoConfiguration();

			CalendarConfiguration.selectDefaultDuration(
				defaultDuration = "${minutes} Minutes"
			);

			PortletEntry.save();

			Navigator.gotoPage(pageName = "Calendar Page");

			CalendarNavigator.gotoView(viewType = "Day");

			CalendarEvent.addViaDayView(
				eventTitle = "Calendar Event ${minutes} Minutes Title"
			);

			CalendarScheduler.viewEventDuration(
				eventTitle = "Calendar Event ${minutes} Minutes Title",
				minutes = "${minutes}"
			);

			CalendarEvent.tearDown();
		}
	}

	@description = "This is a use case for LPS-59251."
	@priority = "3"
	test ViewDisplayedSiteCalendarEventsAsGuest {
		property test.name.skip.portal.instance = "Calendar#ViewDisplayedSiteCalendarEventsAsGuest";

		var siteName = TestCase.getSiteName(siteName = "${siteName}");

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarNavigator.gotoAddEvent();

		PortletEntry.inputTitle(title = "Liferay Calendar Event Title");

		CalendarEvent.setTimes(endDateTime = "04:00 AM", startDateTime = "03:00 AM");

		CalendarEvent.selectCalendar(calendarName = "${siteName}");

		CalendarEvent.publish();

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarNavigator.gotoAddEvent();

		PortletEntry.inputTitle(title = "Test Test Calendar Event Title");

		CalendarEvent.setTimes(endDateTime = "09:00 PM", startDateTime = "08:00 PM");

		CalendarEvent.selectCalendar(calendarName = "Test Test");

		CalendarEvent.publish();

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarScheduler.viewWeek(eventTitle = "Liferay Calendar Event Title");

		CalendarScheduler.viewWeek(eventTitle = "Test Test Calendar Event Title");

		ProductMenu.gotoPersonalSite();

		Portlet.addPG(portletName = "Calendar");

		User.logoutPG();

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarEvent.viewSiteCalendarEventWithDefaultPermissions(
			calendarName = "${siteName}",
			endDateTime = "04:00 AM",
			eventTitle = "Liferay Calendar Event Title",
			siteName = "${siteName}",
			startDateTime = "03:00 AM"
		);

		CalendarEvent.viewSiteCalendarEventNotPresent(
			endDateTime = "09:00 PM",
			siteName = "Test Test",
			startDateTime = "08:00 PM"
		);

		Navigator.gotoSpecificURLPage(
			pageName = "Welcome",
			url = "localhost:8080/web/test"
		);

		CalendarEvent.viewSiteCalendarEventWithDefaultPermissions(
			calendarName = "Test Test",
			endDateTime = "09:00 PM",
			eventTitle = "Test Test Calendar Event Title",
			siteName = "Test Test",
			startDateTime = "08:00 PM"
		);

		CalendarEvent.viewSiteCalendarEventNotPresent(
			endDateTime = "04:00 AM",
			siteName = "${siteName}",
			startDateTime = "03:00 AM"
		);
	}

	@priority = "4"
	test ViewEventCalendarChange {
		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.addCP(
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userScreenName = "usersn"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.editPasswordCP(
			userEmailAddress = "userea@liferay.com",
			userScreenName = "usersn"
		);

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Members",
			panel = "Site Administration",
			portlet = "Site Memberships"
		);

		Site.assignUserAsMemberCP(
			userFirstName = "userfn",
			userLastName = "userln",
			userScreenName = "usersn"
		);

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarNavigator.gotoAddEvent();

		PortletEntry.inputTitle(title = "Calendar Event");

		CalendarEvent.selectCalendar(calendarName = "Test Test");

		CalendarEvent.publish();

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarEvent.view(eventTitle = "Calendar Event");

		User.logoutAndLoginPG(
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln"
		);

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarScheduler.viewDefault(
			eventTitle = "Calendar Event",
			pageName = "Calendar Page"
		);

		User.logoutAndLoginPG(
			userLoginEmailAddress = "test@liferay.com",
			userLoginFullName = "Test Test"
		);

		Navigator.gotoPage(pageName = "Calendar Page");

		Calendar.add(calendarName = "userfn userln", calendarType = "Other Calendars");

		CalendarNavigator.gotoEditEvent(eventTitle = "Calendar Event");

		CalendarEvent.selectCalendar(calendarName = "userfn userln");

		CalendarEvent.publish();

		Navigator.gotoPage(pageName = "Calendar Page");

		Calendar.chooseOtherCalendarMenulistOption(
			calendarName = "userfn userln",
			menuListOption = "Hide Calendar"
		);

		CalendarScheduler.viewDefault(
			eventTitle = "Calendar Event",
			pageName = "Calendar Page"
		);

		User.logoutAndLoginPG(
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln"
		);

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarEvent.view(eventTitle = "Calendar Event");

		User.logoutAndLoginPG(
			userLoginEmailAddress = "test@liferay.com",
			userLoginFullName = "Test Test"
		);
	}

	@description = "This is a use case for LPS-62410."
	@priority = "4"
	test ViewEventDateAndTimeInResourcesAvailability {
		CalendarNavigator.gotoAddEvent();

		CalendarEvent.gotoConfigureInvitations();

		CalendarEvent.viewResourcesAvailability();

		CalendarEvent.compareEventDateAndTimeToResourcesAvailabilityDateAndTime();

		CalendarEvent.selectTimes(endDateTime = "11:00 AM", startDateTime = "08:00 AM");

		CalendarEvent.compareEventDateAndTimeToResourcesAvailabilityDateAndTime();

		CalendarEvent.setEndDateTomorrow();

		CalendarEvent.selectTimes(endDateTime = "07:00 AM", startDateTime = "08:00 AM");

		CalendarEvent.compareEventDateAndTimeToResourcesAvailabilityDateAndTime();

		CalendarEvent.publish();
	}

	@description = "This is a use case for LPS-51783."
	@priority = "4"
	test ViewEventDetailsAllDayWithModifiedUserTimeZone {
		var siteName = TestCase.getSiteName(siteName = "${siteName}");

		UserBar.gotoMyAccount();

		User.editUserDisplaySettingsTimeZonePacific(
			displaySettingsGreeting = "Welcome Test Test!"
		);

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarNavigator.gotoAddEvent();

		PortletEntry.inputTitle(title = "Calendar Event All Day Title");

		CalendarEvent.setAllDay();

		CalendarEvent.publish();

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarEvent.viewDetails(
			calendarName = "${siteName}",
			eventTitle = "Calendar Event All Day Title",
			eventType = "All Day"
		);

		CalendarEvent.viewTimesViaDetails(
			endDateTime = "11:59 PM",
			startDateTime = "12:00 AM"
		);
	}

	@description = "This is a use case for LPS-55171."
	@priority = "2"
	test ViewInactiveResourceNotPresent {
		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Sites"
		);

		Site.addBlankCP(siteName = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Sites"
		);

		Page.add(pageName = "Calendar Page", siteName = "Site Name");

		Navigator.gotoSitePage(pageName = "Calendar Page", siteName = "Site Name");

		Portlet.addPG(portletName = "Calendar");

		Navigator.gotoSitePage(pageName = "Calendar Page", siteName = "Site Name");

		CalendarNavigator.gotoAddResource();

		PortletEntry.inputName(name = "Calendar Resource");

		CalendarResource.deactivate();

		CalendarResource.save();

		CalendarResource.viewDefault();

		Navigator.gotoSitePage(pageName = "Calendar Page", siteName = "Site Name");

		Calendar.searchOtherCalendars(searchValue = "resource");

		Calendar.viewOtherCalendarsSearchResultNotPresent(
			calendarName = "Calendar Resource"
		);

		CalendarNavigator.gotoAddEvent();

		CalendarEvent.viewInvitationResourceNotPresent(
			resourceNameList = "Calendar Resource"
		);
	}

	@priority = "3"
	test ViewInvitedResourceAvailability {
		var siteName = TestCase.getSiteName(siteName = "${siteName}");

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.addCP(
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userScreenName = "usersn"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.editPasswordCP(
			userEmailAddress = "userea@liferay.com",
			userScreenName = "usersn"
		);

		ProductMenu.gotoSite(site = "${siteName}");

		ProductMenu.gotoPortlet(
			category = "Members",
			panel = "Site Administration",
			portlet = "Site Memberships"
		);

		Site.assignUserAsMemberCP(
			userFirstName = "userfn",
			userLastName = "userln",
			userScreenName = "usersn"
		);

		Navigator.gotoPage(pageName = "Calendar Page");

		Calendar.add(calendarName = "userfn userln", calendarType = "Other Calendars");

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarResource.add(calendarResourceName = "Calendar Resource Name");

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarResource.view(calendarResourceName = "Calendar Resource Name");

		Navigator.gotoPage(pageName = "Calendar Page");

		Calendar.add(
			calendarName = "Calendar Resource Name",
			calendarType = "Other Calendars"
		);

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarNavigator.gotoAddEvent();

		CalendarEvent.add(
			calendarName = "userfn userln",
			eventTitle = "Calendar Event All Day Title",
			eventType = "Regular",
			optionSet = "true",
			optionSetValue = "inviteResource",
			pageName = "Calendar Page",
			resourcesAvailability = "true",
			specificOptionSetValue = "Test Test,Calendar Resource Name"
		);

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarEvent.view(
			eventNumber = "2",
			eventTitle = "Calendar Event All Day Title"
		);
	}

	@description = "This is a use case for LPS-69884."
	@priority = "2"
	test ViewResourceCalendarPageAfterCancellingEdit {
		var siteName = TestCase.getSiteName(siteName = "${siteName}");

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarResource.add(calendarResourceName = "Calendar Resource Name");

		CalendarNavigator.gotoResourceCalendars(
			calendarResourceName = "Calendar Resource Name"
		);

		CalendarNavigator.gotoEditResourceCalendar(
			calendarResourceName = "Calendar Resource Name"
		);

		Button.clickCancel();

		CalendarResource.viewResourceCalendars(
			calendarResourceName = "Calendar Resource Name"
		);
	}

	@description = "This is a use case for LPS-54786."
	@priority = "3"
	test ViewShowMoreLocalization {
		property test.name.skip.portal.instance = "Calendar#ViewShowMoreLocalization";

		Navigator.gotoPage(pageName = "Calendar Page");

		for (var eventNumber : list "1,2,3,4,5,6") {
			CalendarNavigator.gotoAddEvent();

			CalendarEvent.add(
				eventTitle = "Calendar Event ${eventNumber}",
				eventType = "All Day",
				pageName = "Calendar Page"
			);
		}

		MyAccount.configureDisplaySettingsLanguage(languageName = "español (España)");

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarScheduler.viewShowMoreLocalizedViaDayView(
			messageLocalized = "Mostrar 1 más",
			viewTypeLocalized = "Día"
		);

		CalendarScheduler.viewShowMoreLocalizedViaWeekView(
			messageLocalized = "Mostrar 1 más",
			viewTypeLocalized = "Semana"
		);

		CalendarScheduler.viewShowMoreLocalizedViaMonthView(
			messageLocalized = "Mostrar 4 más",
			viewTypeLocalized = "Mes"
		);

		MyAccount.configureDisplaySettingsLanguageLocalized(
			category = "Mi cuenta",
			languageName = "English (United States)",
			portlet = "Mi cuenta",
			saveButton = "Guardar"
		);
	}

	@description = "This is a use case for LPS-67928."
	@priority = "5"
	test ViewSiteCalendarRSSFeed {
		var siteName = TestCase.getSiteName(siteName = "${siteName}");

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarNavigator.gotoAddEvent();

		PortletEntry.inputTitle(title = "Current Day Event");

		CalendarEvent.setTimes(endDateTime = "11:59 PM", startDateTime = "11:58 PM");

		CalendarEvent.setDatesToday();

		CalendarEvent.publish();

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarNavigator.gotoPreviousDay();

		CalendarEvent.addViaDayView(eventTitle = "Previous Day Event");

		CalendarNavigator.gotoNextDay();

		CalendarNavigator.gotoNextDay();

		CalendarEvent.addViaDayView(eventTitle = "Future Day Event");

		Navigator.gotoPage(pageName = "Calendar Page");

		Calendar.chooseSiteCalendarMenulistOption(
			menuListOption = "RSS",
			siteCalendarName = "${siteName}",
			siteName = "${siteName}"
		);

		Calendar.viewRSSFeedEventNotPresent(
			calendarName = "${siteName}",
			eventTitle = "Past Day Event",
			pageName = "Calendar Page",
			siteCalendarName = "${siteName}",
			siteName = "${siteName}"
		);

		Calendar.viewRSSFeedEventPresent(
			calendarName = "${siteName}",
			eventTitle = "Current Day Event",
			pageName = "Calendar Page",
			siteCalendarName = "${siteName}",
			siteName = "${siteName}"
		);

		Calendar.viewRSSFeedEventPresent(
			calendarName = "${siteName}",
			eventTitle = "Future Day Event",
			pageName = "Calendar Page",
			siteCalendarName = "${siteName}",
			siteName = "${siteName}"
		);

		Navigator.closeWindow();
	}

	@priority = "3"
	test ViewSiteNameUpdate {
		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Sites"
		);

		Site.addBlankCP(siteName = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Sites"
		);

		Page.add(pageName = "Site Page Name", siteName = "Site Name");

		Navigator.gotoSitePage(pageName = "Site Page Name", siteName = "Site Name");

		Portlet.addPG(pageName = "Site Page Name", portletName = "Calendar");

		Navigator.gotoSitePage(pageName = "Site Page Name", siteName = "Site Name");

		Calendar.viewCurrentSiteCalendarName(
			calendarName = "Site Name",
			siteName = "Site Name"
		);

		ProductMenu.gotoSite(site = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Site Settings"
		);

		Site.editCP(siteName = "Site Name", siteNameEdit = "Site Name Edit");

		Navigator.gotoSitePage(pageName = "Site Page Name", siteName = "Site Name");

		Calendar.viewCurrentSiteCalendarName(
			calendarName = "Site Name",
			siteName = "Site Name Edit"
		);
	}

	@description = "This is a use case for LPS-56229."
	@priority = "3"
	test ViewUserCanAddSiteCalendarsWithCalendarPermissions {
		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Roles"
		);

		Role.addCP(roleName = "Calendar Site Role Name", roleType = "Site");

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Roles"
		);

		Role.definePermissionCP(
			confirmation = "true",
			permissionDefinitionKey = "SITE_ADMIN_APPLICATIONS_CALENDAR_MANAGE_EVENTS_CHECKBOX",
			permissionDefinitionValue = "Manage Events",
			removeLink = "true",
			roleName = "Calendar Site Role Name",
			roleType = "Site"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Roles"
		);

		Role.definePermissionCP(
			permissionDefinitionKey = "SITE_ADMIN_PAGES_SITE_PAGES_RESOURCE_PERMISSIONS_PAGE_UPDATE_CHECKBOX",
			permissionDefinitionValue = "Update",
			roleName = "Authenticated",
			roleUser = "User"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.addCP(
			userEmailAddress = "usersn@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userScreenName = "usersn"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.editPasswordCP(
			userEmailAddress = "usersn@liferay.com",
			userScreenName = "usersn"
		);

		for (var siteName : list "Site A,Site B,Site C") {
			ProductMenu.gotoPortlet(
				category = "Sites",
				panel = "Control Panel",
				portlet = "Sites"
			);

			Site.addBlankCP(siteName = "${siteName}");

			ProductMenu.gotoPortlet(
				category = "Users",
				panel = "Control Panel",
				portlet = "Users and Organizations"
			);

			User.editUserSiteCP(siteName = "${siteName}", userScreenName = "usersn");
		}

		ProductMenu.gotoSite(site = "Site A");

		ProductMenu.gotoPortlet(
			category = "Members",
			panel = "Site Administration",
			portlet = "Site Memberships"
		);

		Site.assignSiteRoleCP(
			resourceName = "userfn userln",
			roleName = "Calendar Site Role Name"
		);

		Navigator.gotoPage(pageName = "Calendar Page");

		ProductMenu.gotoSite(site = "Site C");

		ProductMenu.gotoPortlet(
			category = "Members",
			panel = "Site Administration",
			portlet = "Site Memberships"
		);

		Site.assignSiteRoleCP(
			resourceName = "userfn userln",
			roleName = "Calendar Site Role Name"
		);

		Navigator.gotoPage(pageName = "Calendar Page");

		User.logoutAndLoginPG(
			userLoginEmailAddress = "usersn@liferay.com",
			userScreenName = "usersn"
		);

		UserBar.gotoDashboard();

		Portlet.addPG(portletName = "Calendar");

		User.logoutAndLoginPG(
			userLoginEmailAddress = "usersn@liferay.com",
			userScreenName = "usersn"
		);

		UserBar.gotoDashboard();

		Calendar.searchOtherCalendars(searchValue = "site");

		for (var calendarName : list "Site A,Site B,Site C") {
			Calendar.viewOtherCalendarsSearchResult(calendarName = "${calendarName}");
		}

		CalendarNavigator.gotoAddEvent();

		CalendarEvent.viewAvailableCalendars(
			availableCalendarList = "userfn userln,Site A,Site C"
		);

		CalendarEvent.viewUnavailableCalendarsNotPresent(
			unavailableCalendarList = "Site B,Liferay"
		);
	}

	@description = "This is a use case for 51127."
	@priority = "5"
	test ViewWeekStartMonday {
		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarNavigator.gotoConfiguration();

		CalendarConfiguration.selectWeekStartsOn(weekStartDay = "Monday");

		PortletEntry.save();

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarScheduler.viewWeekStartDayViaWeekView(weekStartDay = "Mon");

		Calendar.viewWeekStartDayViaMonthView(weekStartDay = "Mon");

		Calendar.viewWeekStartDayViaSmallCalendar(weekStartDay = "Mo");

		CalendarNavigator.gotoAddEvent();

		Calendar.viewWeekStartDayViaAddEventMiniCalendar(weekStartDay = "Mo");

		CalendarEvent.gotoRepeatConfiguration();

		CalendarEvent.selectRepeatFrequency(frequency = "Weekly");

		CalendarEvent.viewRepeatWeekStartDay(weekStartDay = "Monday");
	}

	@description = "This is a use case for 51127."
	@priority = "3"
	test ViewWeekStartSaturday {
		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarNavigator.gotoConfiguration();

		CalendarConfiguration.selectWeekStartsOn(weekStartDay = "Saturday");

		PortletEntry.save();

		Navigator.gotoPage(pageName = "Calendar Page");

		CalendarScheduler.viewWeekStartDayViaWeekView(weekStartDay = "Sat");

		Calendar.viewWeekStartDayViaMonthView(weekStartDay = "Sat");

		Calendar.viewWeekStartDayViaSmallCalendar(weekStartDay = "Sa");

		CalendarNavigator.gotoAddEvent();

		Calendar.viewWeekStartDayViaAddEventMiniCalendar(weekStartDay = "Sa");

		CalendarEvent.gotoRepeatConfiguration();

		CalendarEvent.selectRepeatFrequency(frequency = "Weekly");

		CalendarEvent.viewRepeatWeekStartDay(weekStartDay = "Saturday");
	}
}