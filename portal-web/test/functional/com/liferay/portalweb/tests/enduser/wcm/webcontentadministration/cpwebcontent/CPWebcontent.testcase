@component-name = "portal-wcm"
definition {
	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Web Content Administration";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			WebContent.tearDownCP();

			WebContentTemplates.tearDownCP();

			WebContentStructures.tearDownCP();
		}
	}

	@priority = "5"
	test AddFolder {
		property testray.component.names = "Training";

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentFolder.addCP(
			folderDescription = "WC Folder Description",
			folderName = "WC Folder Name"
		);
	}

	@priority = "5"
	test AddStructures {
		property testray.component.names = "Training";

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoManageStructures();

		WebContentStructures.addCP(
			structureDescription = "WC Structure Description",
			structureName = "WC Structure Name 1"
		);

		for (var structureFieldName : list "Boolean,Date,Decimal,Documents and Media") {
			DynamicDataMapping.addField(
				field = "${structureFieldName}",
				fieldFieldLabel = "${structureFieldName}",
				fieldName = StringUtil.replace("${structureFieldName}", " ", "")
			);
		}

		WebContentStructures.saveCP(structureName = "WC Structure Name 1");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoManageStructures();

		WebContentStructures.addCP(
			structureDescription = "WC Structure Description",
			structureName = "WC Structure Name 2"
		);

		for (var structureFieldName : list "HTML,Image,Integer,Link to Page") {
			DynamicDataMapping.addField(
				field = "${structureFieldName}",
				fieldFieldLabel = "${structureFieldName}",
				fieldName = StringUtil.replace("${structureFieldName}", " ", "")
			);
		}

		WebContentStructures.saveCP(structureName = "WC Structure Name 2");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoManageStructures();

		WebContentStructures.addCP(
			structureDescription = "WC Structure Description",
			structureName = "WC Structure Name 3"
		);

		for (var structureFieldName : list "Number,Radio,Select,Separator,Text,Text Box") {
			DynamicDataMapping.addField(
				field = "${structureFieldName}",
				fieldFieldLabel = "${structureFieldName}",
				fieldName = StringUtil.replace("${structureFieldName}", " ", "")
			);
		}

		WebContentStructures.saveCP(structureName = "WC Structure Name 3");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoManageStructures();

		WebContentStructures.viewCP(
			structureDescription = "WC Structure Description",
			structureName = "WC Structure Name 1"
		);

		LexiconEntry.gotoEntry(rowEntry = "WC Structure Name 1");

		for (var structureFieldName : list "Boolean,Date,Decimal,Documents and Media") {
			DynamicDataMapping.viewField(
				fieldFieldLabel = "${structureFieldName}",
				fieldName = StringUtil.replace("${structureFieldName}", " ", "")
			);
		}

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoManageStructures();

		WebContentStructures.viewCP(
			structureDescription = "WC Structure Description",
			structureName = "WC Structure Name 2"
		);

		LexiconEntry.gotoEntry(rowEntry = "WC Structure Name 2");

		for (var structureFieldName : list "HTML,Image,Integer,Link to Page") {
			DynamicDataMapping.viewField(
				fieldFieldLabel = "${structureFieldName}",
				fieldName = StringUtil.replace("${structureFieldName}", " ", "")
			);
		}

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoManageStructures();

		WebContentStructures.viewCP(
			structureDescription = "WC Structure Description",
			structureName = "WC Structure Name 3"
		);

		LexiconEntry.gotoEntry(rowEntry = "WC Structure Name 3");

		for (var structureFieldName : list "Number,Radio,Select,Separator,Text,Text Box") {
			DynamicDataMapping.viewField(
				fieldFieldLabel = "${structureFieldName}",
				fieldName = StringUtil.replace("${structureFieldName}", " ", "")
			);
		}
	}

	@description = "This is a use case for LPS-77387."
	@priority = "4"
	test AddStructureViaLocaleURL {
		property test.name.skip.portal.instance = "CPWebcontent#AddStructureViaLocaleURL";
		var portalURL = PropsUtil.get("portal.url");

		Navigator.openSpecificURL(url = "${portalURL}/en/");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoManageStructures();

		LexiconEntry.gotoAdd();

		Pause(locator1 = "3000");

		Navigator.ensureLocaleURL(locale = "en");

		WebContentStructures.addName(structureName = "WC Structure Name");

		Panel.expandPanel(panelHeading = "Details");

		PortletEntry.inputDescriptionTextInput(description = "WC Structure Description");

		SelectFrame(value1 = "relative=top");

		DynamicDataMapping.addField(
			field = "Text",
			fieldFieldLabel = "Text",
			fieldName = "Text"
		);

		WebContentStructures.saveCP(structureName = "WC Structure Name");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoManageStructures();

		AssertElementNotPresent(
			locator1 = "DDMSelectStructure#DDM_STRUCTURE_TABLE_NAME_2",
			key_ddlDataDefinitionName = "WC Structure Name"
		);
	}

	@description = "This is a use case for LPS-52248."
	@priority = "4"
	test AddStructureWithSeparatorField {
		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoManageStructures();

		WebContentStructures.addCP(
			structureDescription = "WC Structure Description",
			structureName = "WC Structure Name"
		);

		DynamicDataMapping.addField(
			field = "Separator",
			fieldFieldLabel = "Separator",
			fieldName = "Separator"
		);

		WebContentStructures.saveCP(structureName = "WC Structure Name");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoManageTemplates();

		WebContentTemplates.addCP(
			templateDescription = "WC Template Description",
			templateLanguage = "ftl",
			templateName = "WC Template Name"
		);

		WebContentTemplates.addStructure(structureName = "WC Structure Name");

		DDLDataDefinition.save();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoAddWithStructureCP(structureName = "WC Structure Name");

		WebContent.addWithStructureCP(
			structureName = "WC Structure Name",
			templateName = "WC Template Name",
			webContentTitle = "WC WebContent Title"
		);

		PortletEntry.publish();

		WebContent.viewTitle(webContentTitle = "WC WebContent Title");

		AssertConsoleTextNotPresent(
			value1 = "Expression Separator is instead a com.liferay.portal.freemarker.LiferayTemplateModel"
		);

		AssertConsoleTextNotPresent(value1 = "freemarker.core.NonStringException");
	}

	@priority = "4"
	test AddStructureWithSubfield {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoManageStructures();

		WebContentStructures.addCP(
			structureDescription = "WC Structure Description",
			structureName = "WC Structure Name"
		);

		DynamicDataMapping.addField(
			field = "Text",
			fieldFieldLabel = "Text",
			fieldName = "Text"
		);

		DynamicDataMapping.addFieldNested(
			field = "Integer",
			fieldFieldLabel = "Integer",
			fieldName = "Integer"
		);

		WebContentStructures.saveCP(structureName = "WC Structure Name");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoManageTemplates();

		WebContentTemplates.addCP(
			templateLanguage = "ftl",
			templateName = "WC Template Name"
		);

		WebContentTemplates.addStructure(
			structureName = "WC Structure Name",
			templateFieldNames = "Text",
			templateLanguage = "ftl"
		);

		DDLDataDefinition.save();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoAddWithStructureCP(structureName = "WC Structure Name");

		WebContent.addWithStructureCP(
			structureName = "WC Structure Name",
			templateName = "WC Template Name",
			webContentInteger = "123",
			webContentText = "Text",
			webContentTitle = "WC WebContent Title"
		);

		PortletEntry.publish();

		WebContent.viewTitle(webContentTitle = "WC WebContent Title");

		WebContent.viewWithStructureCP(
			webContentText = "Text",
			webContentTitle = "WC WebContent Title"
		);

		WebContent.viewNestedField(
			fieldName = "Text",
			nestedField = "Integer",
			nestedFieldData = "123"
		);

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoManageStructures();

		WebContentStructures.viewCP(
			structureDescription = "WC Structure Description",
			structureName = "WC Structure Name"
		);

		LexiconEntry.gotoEntry(rowEntry = "WC Structure Name");

		for (var structureFieldName : list "Text,Integer") {
			DynamicDataMapping.viewField(
				fieldFieldLabel = "${structureFieldName}",
				fieldName = "${structureFieldName}"
			);
		}
	}

	@priority = "4"
	test AddStructureWithUnlocalizableFields {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoManageStructures();

		WebContentStructures.addCP(
			structureDescription = "WC Structure Description",
			structureName = "WC Structure Name"
		);

		for (var structureFieldName : list "Text,Text Box") {
			DynamicDataMapping.addField(
				field = "${structureFieldName}",
				fieldFieldLabel = "${structureFieldName}",
				fieldName = StringUtil.replace("${structureFieldName}", " ", "")
			);
		}

		WebContentStructures.saveCP(structureName = "WC Structure Name");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoManageStructures();

		WebContentNavigator.gotoEditStructure(structureName = "WC Structure Name");

		for (var structureFieldName : list "Text Box") {
			DynamicDataMapping.editFieldLocalizable(
				fieldFieldLabel = "${structureFieldName}"
			);
		}

		WebContentStructures.saveCP();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoManageTemplates();

		WebContentTemplates.addCP(
			templateDescription = "WC Template Description",
			templateLanguage = "ftl",
			templateName = "WC Template Name"
		);

		WebContentTemplates.addStructure(
			structureName = "WC Structure Name",
			templateFieldNames = "Text,Text Box",
			templateLanguage = "ftl"
		);

		DDLDataDefinition.save();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoAddWithStructureCP(structureName = "WC Structure Name");

		WebContent.addWithStructureCP(
			structureName = "WC Structure Name",
			templateName = "WC Template Name",
			webContentText = "Text",
			webContentTextBox = "Text Box",
			webContentTitle = "WC WebContent Title"
		);

		PortletEntry.publish();

		WebContent.viewTitle(webContentTitle = "WC WebContent Title");

		WebContentNavigator.gotoEditCP(webContentTitle = "WC WebContent Title");

		WebContent.addTranslation(
			localizedLanguage = "Spanish (Spain)",
			localizedText = "Text Spanish",
			localizedTextBox = "Text Box Spanish",
			localizedTitle = "Title Spanish",
			webContentTitle = "WC WebContent Title"
		);

		PortletEntry.publish();

		WebContentNavigator.gotoEditCP(webContentTitle = "WC WebContent Title");

		WebContent.viewUnlocalizableTextBox(
			editLocalizedTextBox = "Text Box Unlocalized",
			localizedText = "Text Spanish",
			localizedTextBox = "Text Box",
			localizedTitle = "Title Spanish",
			webContentTextBox = "Text Box",
			webContentTitle = "WC WebContent Title"
		);
	}

	@description = "This is a use case for LPS-69560."
	@priority = "5"
	test AddStructureWithWebContentAndGeolocationFields {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoAddCP();

		WebContent.addCP(
			webContentContent = "WC WebContent 1 Content",
			webContentTitle = "WC WebContent 1 Title"
		);

		PortletEntry.publish();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoManageStructures();

		WebContentStructures.addCP(
			structureDescription = "WC Structure Description",
			structureName = "WC Structure Name"
		);

		DynamicDataMapping.addField(
			field = "Web Content",
			fieldFieldLabel = "Web Content",
			fieldName = "WebContent"
		);

		DynamicDataMapping.addField(
			field = "Geolocation",
			fieldFieldLabel = "Geolocation",
			fieldName = "Geolocation"
		);

		WebContentStructures.saveCP(structureName = "WC Structure Name");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoManageTemplates();

		WebContentTemplates.addCP(
			templateDescription = "WC Template Description",
			templateName = "WC Template Name"
		);

		WebContentTemplates.addStructure(structureName = "WC Structure Name");

		DDLDataDefinition.save();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoAddWithStructureCP(structureName = "WC Structure Name");

		WebContent.addWithStructureCP(
			fieldName = "WebContent",
			WebContentSelectWCFile = "WC WebContent 1 Title",
			webContentTitle = "WC WebContent 2 Title"
		);

		PortletEntry.publish();

		WebContent.viewTitle(webContentTitle = "WC WebContent 2 Title");

		WebContentNavigator.gotoEditCP(webContentTitle = "WC WebContent 2 Title");

		WebContent.viewCPWithoutContentField(
			field = "Web Content",
			fieldData = "WC WebContent 1 Title",
			fieldFieldLabel = "Web Content",
			fieldName = "WebContent",
			webContentTitle = "WC WebContent 2 Title"
		);

		WebContent.viewCPWithoutContentField(
			field = "Geolocation",
			fieldFieldLabel = "Geolocation",
			fieldName = "Geolocation",
			webContentTitle = "WC WebContent 2 Title"
		);
	}

	@priority = "5"
	test AddTemplateWithStructure {
		property portal.acceptance = "true";

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoManageStructures();

		WebContentStructures.addCP(
			structureDescription = "WC Structure Description",
			structureName = "WC Structure Name"
		);

		DynamicDataMapping.addField(
			field = "Text",
			fieldFieldLabel = "Text",
			fieldName = "Text"
		);

		WebContentStructures.saveCP(structureName = "WC Structure Name");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoManageTemplates();

		WebContentTemplates.addCP(
			templateDescription = "WC Template Description",
			templateLanguage = "ftl",
			templateName = "WC Template Name"
		);

		WebContentTemplates.addStructure(
			structureName = "WC Structure Name",
			templateFieldNames = "Text",
			templateLanguage = "ftl"
		);

		DDLDataDefinition.save();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentTemplates.viewCP(
			structureName = "WC Structure Name",
			templateDescription = "WC Template Description",
			templateLanguage = "ftl",
			templateName = "WC Template Name",
			templateScript = '''${Text.getData()}'''
		);
	}

	@priority = "5"
	test AddTemplateXSL {
		property testray.component.names = "Training";

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoManageTemplates();

		WebContentTemplates.addCP(
			templateDescription = "WC Template Description",
			templateFile = "xsl_template.xsl",
			templateLanguage = "xsl",
			templateName = "WC Template Name"
		);

		PortletEntry.save();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentTemplates.viewCP(
			templateDescription = "WC Template Description",
			templateLanguage = "xsl",
			templateName = "WC Template Name",
			templateScript = '''"/root/dynamic-element[@name='Text']"'''
		);
	}

	@priority = "4"
	test AddWebContent {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoAddCP();

		WebContent.addCP(
			webContentContent = "WC WebContent Content",
			webContentTitle = "WC WebContent Title"
		);

		PortletEntry.publish();

		WebContent.viewTitle(webContentTitle = "WC WebContent Title");

		WebContentNavigator.gotoEditCP(webContentTitle = "WC WebContent Title");

		WebContent.viewCP(
			webContentContent = "WC WebContent Content",
			webContentTitle = "WC WebContent Title"
		);
	}

	@priority = "4"
	test AddWebContentDraft {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoAddCP();

		WebContent.addDraft(
			webContentContent = "WC WebContent Content",
			webContentTitle = "WC WebContent Title"
		);

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoViewStatus(
			webContentStatus = "Draft",
			webContentTitle = "WC WebContent Title"
		);

		WebContent.viewStatus(
			webContentContent = "WC WebContent Content",
			webContentStatus = "Draft",
			webContentTitle = "WC WebContent Title"
		);
	}

	@priority = "3"
	test AddWebContentExpirationDate {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoAddCP();

		WebContent.addCP(
			webContentContent = "WC WebContent Content",
			webContentTitle = "WC WebContent Title"
		);

		WebContent.addExpirationDateCP(expirationDate = "01/02/3000");

		PortletEntry.publish();

		WebContentNavigator.gotoEditCP(webContentTitle = "WC WebContent Title");

		WebContent.viewCP(
			webContentContent = "WC WebContent Content",
			webContentTitle = "WC WebContent Title"
		);

		WebContent.viewExpirationDateCP(expirationDate = "01/02/3000");
	}

	@priority = "3"
	test AddWebContentMultiple {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoAddCP();

		WebContent.addCP(
			webContentContent = "WC WebContent Content 1",
			webContentTitle = "WC WebContent Title 1"
		);

		PortletEntry.publish();

		WebContent.viewTitle(webContentTitle = "WC WebContent Title 1");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoAddCP();

		WebContent.addCP(
			webContentContent = "WC WebContent Content 2",
			webContentTitle = "WC WebContent Title 2"
		);

		PortletEntry.publish();

		WebContent.viewTitle(webContentTitle = "WC WebContent Title 2");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoAddCP();

		WebContent.addCP(
			webContentContent = "WC WebContent Content 3",
			webContentTitle = "WC WebContent Title 3"
		);

		PortletEntry.publish();

		WebContent.viewTitle(webContentTitle = "WC WebContent Title 3");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoEditCP(webContentTitle = "WC WebContent Title 1");

		WebContent.viewCP(
			webContentContent = "WC WebContent Content 1",
			webContentTitle = "WC WebContent Title 1"
		);

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoEditCP(webContentTitle = "WC WebContent Title 2");

		WebContent.viewCP(
			webContentContent = "WC WebContent Content 2",
			webContentTitle = "WC WebContent Title 2"
		);

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoEditCP(webContentTitle = "WC WebContent Title 3");

		WebContent.viewCP(
			webContentContent = "WC WebContent Content 3",
			webContentTitle = "WC WebContent Title 3"
		);
	}

	@priority = "4"
	test AddWebContentTitleEscapeCharacter {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoAddCP();

		WebContent.addCP(
			webContentContent = "WC WebContent Content",
			webContentTitle = '''<!-- -->'''
		);

		PortletEntry.publish();

		WebContent.viewTitle(
			webContentTitle = '''<!-- -->''',
			webContentTitleEscapeCharacter = '''&lt;!-- --&gt;'''
		);

		WebContentNavigator.gotoEditCP(
			webContentTitle = '''<!-- -->''',
			webContentTitleEscapeCharacter = '''&lt;!-- --&gt;'''
		);

		WebContent.viewCP(
			webContentContent = "WC WebContent Content",
			webContentTitle = '''<!-- -->''',
			webContentTitleEscapeCharacter = '''&lt;!-- --&gt;'''
		);
	}

	@priority = "4"
	test AddWebContentWithImageField {
		property test.name.skip.portal.instance = "CPWebcontent#AddWebContentWithImageField";

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoManageStructures();

		WebContentStructures.addCP(
			structureDescription = "WC Structure Description",
			structureName = "WC Structure Name"
		);

		DynamicDataMapping.addField(
			field = "Image",
			fieldFieldLabel = "Image",
			fieldName = "Image"
		);

		WebContentStructures.saveCP(structureName = "WC Structure Name");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoManageTemplates();

		WebContentTemplates.addCP(
			templateDescription = "WC Template Description",
			templateLanguage = "ftl",
			templateName = "WC Template Name"
		);

		WebContentTemplates.addStructure(
			structureName = "WC Structure Name",
			templateFieldNames = "Image",
			templateLanguage = "ftl"
		);

		DDLDataDefinition.save();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoAddWithStructureCP(structureName = "WC Structure Name");

		WebContent.addWithStructureCP(
			structureName = "WC Structure Name",
			templateName = "WC Template Name",
			webContentImage = "Document_2.jpeg",
			webContentTitle = "WC WebContent Title"
		);

		PortletEntry.publish();

		WebContent.viewTitle(webContentTitle = "WC WebContent Title");

		Navigator.openURL();

		Page.add(pageName = "Test Page");

		Portlet.addPG(portletName = "Web Content Display");

		WebContentDisplayPortlet.selectWebContent(
			webContentTitle = "WC WebContent Title"
		);

		Navigator.gotoPage(pageName = "Test Page");

		WebContentDisplayPortlet.viewImageFieldViaWCD();
	}

	@priority = "4"
	test AddWebContentWithStructure {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoManageStructures();

		WebContentStructures.addCP(
			structureDescription = "WC Structure Description",
			structureName = "WC Structure Name"
		);

		DynamicDataMapping.addField(
			field = "Text",
			fieldFieldLabel = "Text",
			fieldName = "Text"
		);

		WebContentStructures.saveCP(structureName = "WC Structure Name");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoManageTemplates();

		WebContentTemplates.addCP(
			templateDescription = "WC Template Description",
			templateName = "WC Template Name"
		);

		WebContentTemplates.addStructure(
			structureName = "WC Structure Name",
			templateFieldNames = "Text"
		);

		DDLDataDefinition.save();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoAddWithStructureCP(structureName = "WC Structure Name");

		WebContent.addWithStructureCP(
			structureName = "WC Structure Name",
			templateName = "WC Template Name",
			webContentText = "WC WebContent Text",
			webContentTitle = "WC WebContent Title"
		);

		PortletEntry.publish();

		WebContent.viewTitle(webContentTitle = "WC WebContent Title");
	}

	@priority = "3"
	test AddWebContentWithTemplateXSL {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoManageStructures();

		WebContentStructures.addCP(
			structureDescription = "WC Structure Description",
			structureName = "WC Structure Name"
		);

		DynamicDataMapping.addField(
			field = "Text",
			fieldFieldLabel = "Text",
			fieldName = "Text"
		);

		WebContentStructures.saveCP(structureName = "WC Structure Name");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoManageTemplates();

		WebContentTemplates.addCP(
			templateDescription = "WC Template Description",
			templateFile = "xsl_template.xsl",
			templateLanguage = "xsl",
			templateName = "WC Template Name"
		);

		PortletEntry.save();

		WebContentNavigator.gotoViewTemplate(templateName = "WC Template Name");

		WebContentTemplates.addStructure(
			structureName = "WC Structure Name",
			templateFieldNames = "Text",
			templateLanguage = "xsl"
		);

		DDLDataDefinition.save();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoAddWithStructureCP(structureName = "WC Structure Name");

		WebContent.addWithStructureCP(
			structureName = "WC Structure Name",
			templateName = "WC Template Name",
			webContentText = "WC WebContent Text",
			webContentTitle = "WC WebContent Title"
		);

		PortletEntry.publish();

		WebContent.viewTitle(webContentTitle = "WC WebContent Title");

		WebContent.viewWithStructureCP(
			webContentText = "WC WebContent Text",
			webContentTitle = "WC WebContent Title"
		);

		WebContentNavigator.gotoPreviewViaHeaderCP(
			webContentTitle = "WC WebContent Title"
		);

		WebContent.preview(
			fieldName = "Text",
			webContentText = "WC WebContent Text",
			webContentTitle = "WC WebContent Title"
		);
	}

	@priority = "3"
	test AdvancedSearchStructure {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoManageStructures();

		WebContentStructures.addCP(
			structureDescription = "WC Structure Description",
			structureName = "WC Structure Name"
		);

		DynamicDataMapping.addField(
			field = "Text",
			fieldFieldLabel = "Text",
			fieldName = "Text"
		);

		WebContentStructures.saveCP(structureName = "WC Structure Name");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoManageStructures();

		WebContentStructures.advancedSearchCP(
			structureDescription = "WC Structure Description",
			structureName = "WC Structure Name"
		);
	}

	@priority = "3"
	test AdvancedSearchTemplate {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoManageTemplates();

		WebContentTemplates.addCP(
			templateDescription = "WC Template Description",
			templateLanguage = "ftl",
			templateName = "WC Template Name"
		);

		PortletEntry.save();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentTemplates.advancedSearchCP(
			templateDescription = "WC Template Description",
			templateName = "WC Template Name"
		);
	}

	@priority = "4"
	test CompareWebContentVersionsHistory {
		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoAddCP();

		WebContent.addCP(
			webContentContent = "WC WebContent Content",
			webContentTitle = "WC WebContent Title"
		);

		PortletEntry.publish();

		WebContent.viewTitle(webContentTitle = "WC WebContent Title");

		WebContentNavigator.gotoEditCP(webContentTitle = "WC WebContent Title");

		WebContent.editCP(
			webContentContentEdit = "WC WebContent New Content",
			webContentTitle = "WC WebContent Title",
			webContentTitleEdit = "WC WebContent New Title"
		);

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		LexiconEntry.gotoEntryMenuItem(
			menuItem = "View History",
			rowEntry = "WC WebContent New Title"
		);

		LexiconEntry.gotoEntryMenuItem(
			menuItem = "Compare to...",
			rowEntry = "WC WebContent Title"
		);

		WebContent.viewCompareVersions(
			newContent = "WC WebContent New Content",
			version = "1.1"
		);
	}

	@priority = "5"
	test DeleteWebContent {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoAddCP();

		WebContent.addCP(
			webContentContent = "WC WebContent Content",
			webContentTitle = "WC WebContent Title"
		);

		PortletEntry.publish();

		WebContent.viewTitle(webContentTitle = "WC WebContent Title");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContent.deleteCP(webContentTitle = "WC WebContent Title");
	}

	@priority = "3"
	test DeleteWebContentTitleEscapeCharacter {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoAddCP();

		WebContent.addCP(
			webContentContent = "WC WebContent Content",
			webContentTitle = '''<!-- -->'''
		);

		PortletEntry.publish();

		WebContent.viewTitle(
			webContentTitle = '''<!-- -->''',
			webContentTitleEscapeCharacter = '''&lt;!-- --&gt;'''
		);

		WebContent.deleteCP(
			webContentTitle = '''<!-- -->''',
			webContentTitleEscapeCharacter = '''&lt;!-- --&gt;'''
		);
	}

	@priority = "4"
	test EditBasicWebContentStructureAndTemplate {
		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoManageStructures();

		WebContentNavigator.gotoEditStructure(structureName = "Basic Web Content");

		PortletEntry.inputName(name = "Basic Web Content Edit");

		for (var structureFieldName : list "Date,Image") {
			DynamicDataMapping.addField(
				field = "${structureFieldName}",
				fieldFieldLabel = "${structureFieldName}",
				fieldName = "${structureFieldName}"
			);
		}

		WebContentStructures.saveCP(structureName = "Basic Web Content Edit");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoManageTemplates();

		LexiconEntry.gotoEntryMenuItem(
			menuItem = "Edit",
			rowEntry = "Basic Web Content"
		);

		PortletEntry.inputName(name = "Basic Web Content Edit");

		Panel.expandPanel(panelHeading = "Details");

		PortletEntry.inputDescription(description = "Basic Web Content Description");

		for (var templateFieldName : list "Date,Image") {
			WebContentTemplates.addField(fieldName = "${templateFieldName}");
		}

		PortletEntry.save();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoManageStructures();

		WebContentNavigator.gotoEditStructure(structureName = "Basic Web Content Edit");

		for (var structureFieldName : list "Date,Image") {
			DynamicDataMapping.viewField(
				fieldFieldLabel = "${structureFieldName}",
				fieldName = "${structureFieldName}"
			);
		}

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentTemplates.viewCP(
			structureName = "Basic Web Content Edit",
			templateDescription = "Basic Web Content Description",
			templateLanguage = "ftl",
			templateName = "Basic Web Content Edit",
			templateScript = '''${Image.getData()}'''
		);
	}

	@priority = "4"
	test EditSubstructureDefaultValues {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoManageStructures();

		WebContentStructures.addCP(
			structureDescription = "WC Structure Description",
			structureName = "WC Structure Name1"
		);

		for (var structureFieldName : list "Text,Text Box,Image,Documents and Media") {
			DynamicDataMapping.addField(
				field = "${structureFieldName}",
				fieldFieldLabel = "${structureFieldName}",
				fieldName = StringUtil.replace("${structureFieldName}", " ", "")
			);
		}

		WebContentStructures.saveCP(structureName = "WC Structure Name1");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoManageStructures();

		LexiconEntry.gotoAdd();

		WebContentStructures.addName(structureName = "2");

		Panel.expandPanel(panelHeading = "Details");

		PortletEntry.inputDescriptionTextInput(description = "WC Structure Description");

		WebContentStructures.addSubstructure(
			parentStructureName = "WC Structure Name1",
			structureName = "2"
		);

		DynamicDataMapping.addField(
			field = "Integer",
			fieldFieldLabel = "Integer",
			fieldName = "Integer"
		);

		WebContentStructures.saveCP(structureName = "WC Structure Name1");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoManageStructures();

		WebContentStructures.editSubstructureDefaultValuesCP(
			editSubstructureFieldNames = "Text",
			substructureName = "2"
		);
	}

	@priority = "4"
	test EditWCAddLocalization {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoAddCP();

		WebContent.addCP(
			webContentContent = "WC WebContent Content",
			webContentTitle = "WC WebContent Title"
		);

		PortletEntry.publish();

		WebContent.viewTitle(webContentTitle = "WC WebContent Title");

		WebContentNavigator.gotoEditCP(webContentTitle = "WC WebContent Title");

		WebContent.addTranslation(
			localizedContent = "WC Contenido de la web Contenido",
			localizedLanguage = "Spanish (Spain)",
			localizedTitle = "WC Contenido de la web Titulo",
			webContentTitle = "WC WebContent Title"
		);

		PortletEntry.publish();

		WebContentNavigator.gotoEditCP(webContentTitle = "WC WebContent Title");

		WebContent.viewCP(
			webContentContent = "WC WebContent Content",
			webContentTitle = "WC WebContent Title"
		);

		WebContent.viewTranslation(
			localizedContent = "WC Contenido de la web Contenido",
			localizedLanguage = "Spanish (Spain)",
			localizedTitle = "WC Contenido de la web Titulo",
			webContentTitle = "WC WebContent Title"
		);
	}

	@priority = "5"
	test EditWebContent {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoAddCP();

		WebContent.addCP(
			webContentContent = "WC WebContent Content",
			webContentTitle = "WC WebContent Title"
		);

		PortletEntry.publish();

		WebContent.viewTitle(webContentTitle = "WC WebContent Title");

		WebContentNavigator.gotoEditCP(webContentTitle = "WC WebContent Title");

		WebContent.editCP(
			webContentContentEdit = "WC WebContent Content Edit",
			webContentTitle = "WC WebContent Title",
			webContentTitleEdit = "WC WebContent Title Edit"
		);

		WebContentNavigator.gotoEditCP(webContentTitle = "WC WebContent Title Edit");

		WebContent.viewCP(
			webContentContent = "WC WebContent Content Edit",
			webContentTitle = "WC WebContent Title Edit"
		);
	}

	@priority = "3"
	test ExpireEditWebContent {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoAddCP();

		WebContent.addCP(
			webContentContent = "WC WebContent Content",
			webContentTitle = "WC WebContent Title"
		);

		PortletEntry.publish();

		WebContent.viewTitle(webContentTitle = "WC WebContent Title");

		WebContentNavigator.gotoEditCP(webContentTitle = "WC WebContent Title");

		WebContent.editCP(
			webContentContentEdit = "WC WebContent Content Edit",
			webContentTitle = "WC WebContent Title",
			webContentTitleEdit = "WC WebContent Title Edit"
		);

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContent.expireCP(webContentTitleList = "WC WebContent Title Edit");

		WebContentNavigator.gotoEditCP(webContentTitle = "WC WebContent Title Edit");

		WebContent.viewCP(
			webContentContent = "WC WebContent Content Edit",
			webContentTitle = "WC WebContent Title Edit"
		);

		WebContent.viewStatus(
			webContentContent = "WC WebContent Content Edit",
			webContentStatus = "Expired",
			webContentTitle = "WC WebContent Title Edit"
		);
	}

	@priority = "4"
	test ExpireWebContent {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoAddCP();

		WebContent.addCP(
			webContentContent = "WC WebContent Content",
			webContentTitle = "WC WebContent Title"
		);

		PortletEntry.publish();

		WebContent.viewTitle(webContentTitle = "WC WebContent Title");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContent.expireCP(webContentTitleList = "WC WebContent Title");

		WebContentNavigator.gotoEditCP(webContentTitle = "WC WebContent Title");

		WebContent.viewCP(
			webContentContent = "WC WebContent Content",
			webContentTitle = "WC WebContent Title"
		);

		WebContent.viewStatus(
			webContentContent = "WC WebContent Content",
			webContentStatus = "Expired",
			webContentTitle = "WC WebContent Title"
		);
	}

	@priority = "5"
	test ImportLAR {
		property portal.acceptance = "true";
		property testray.component.names = "Training";

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoManageStructures();

		WebContentStructures.addCP(
			structureDescription = "WC Structure Description",
			structureName = "WC Structure Name"
		);

		DynamicDataMapping.addField(
			field = "Text",
			fieldFieldLabel = "Text",
			fieldName = "Text"
		);

		WebContentStructures.saveCP(structureName = "WC Structure Name");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoManageTemplates();

		WebContentTemplates.addCP(
			templateDescription = "WC Template Description",
			templateName = "WC Template Name"
		);

		WebContentTemplates.addStructure(
			structureName = "WC Structure Name",
			templateFieldNames = "Text"
		);

		DDLDataDefinition.save();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoAddWithStructureCP(structureName = "WC Structure Name");

		WebContent.addWithStructureCP(
			structureName = "WC Structure Name",
			templateName = "WC Template Name",
			webContentText = "WC WebContent Text",
			webContentTitle = "WC WebContent Title"
		);

		PortletEntry.publish();

		WebContent.viewTitle(webContentTitle = "WC WebContent Title");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		LAR.exportPortlet(larFileName = "Web_Content.portlet.lar");

		WebContent.tearDownCP();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentTemplates.deleteCP(templateName = "WC Template Name");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentStructures.deleteCP(structureName = "WC Structure Name");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		LAR.importPortlet(larFileName = "Web_Content.portlet.lar");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContent.viewWithStructureCP(
			webContentText = "WC WebContent Text",
			webContentTitle = "WC WebContent Title"
		);

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoManageStructures();

		WebContentStructures.viewCP(
			structureDescription = "WC Structure Description",
			structureName = "WC Structure Name"
		);

		LexiconEntry.gotoEntry(rowEntry = "WC Structure Name");

		DynamicDataMapping.viewField(fieldFieldLabel = "Text", fieldName = "Text");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentTemplates.viewCP(
			templateDescription = "WC Template Description",
			templateName = "WC Template Name"
		);
	}

	@priority = "4"
	test ImportLARLinkToPageValidation {
		Page.add(pageName = "Test Page");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoManageStructures();

		WebContentStructures.addCP(
			structureDescription = "Test Structure Description",
			structureName = "Test Structure"
		);

		DynamicDataMapping.addField(
			field = "Link to Page",
			fieldFieldLabel = "Link to Page",
			fieldName = "LinkToPage"
		);

		WebContentStructures.saveCP(structureName = "Test Structure");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoManageTemplates();

		WebContentTemplates.addCP(
			templateDescription = "Test Template Description",
			templateName = "Test Template"
		);

		WebContentTemplates.addStructure(structureName = "Test Structure");

		DDLDataDefinition.save();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoAddWithStructureCP(structureName = "Test Structure");

		WebContent.addWithStructureCP(
			linkedPageName = "Test Page",
			structureName = "Test Structure",
			templateName = "Test Template",
			webContentTitle = "WC Title"
		);

		PortletEntry.publish();

		WebContent.viewTitle(webContentTitle = "WC Title");

		LAR.exportPortlet(larFileName = "Web_Content.portlet.lar");

		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Sites"
		);

		Site.addBlankCP(siteName = "Site Name");

		ProductMenu.gotoSite(site = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		LAR.importPortlet(
			importValidationMissingItem = "Linked Page",
			larFileName = "Web_Content.portlet.lar",
			linkedPageName = "Test Page",
			siteName = "Site Name"
		);
	}

	@priority = "5"
	test ImportTrainingLAR {
		property testray.component.names = "Training";

		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Sites"
		);

		Site.addBlankCP(siteName = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Sites"
		);

		Page.add(pageName = "Site Page Name", siteName = "Site Name");

		ProductMenu.gotoSite(site = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		LAR.importPortlet(
			larFileName = "space-content-7.0.lar",
			siteName = "Site Name",
			uploadFrom = "dependencies"
		);

		Navigator.gotoSitePage(pageName = "Site Page Name", siteName = "Site Name");

		Portlet.addPG(portletName = "Web Content Display");

		Portlet.gotoPortletOptions(
			portletName = "Web Content Display",
			portletOption = "Look and Feel Configuration"
		);

		Portlet.selectApplicationDecorator(decorator = "Barebone");

		Navigator.gotoSitePage(pageName = "Site Page Name", siteName = "Site Name");

		Portlet.viewApplicationDecorator(decorator = "Barebone");
	}

	@priority = "4"
	test PublishDraftWebContent {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoAddCP();

		WebContent.addDraft(
			webContentContent = "WC WebContent Content",
			webContentTitle = "WC WebContent Title"
		);

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoViewStatus(
			webContentStatus = "Draft",
			webContentTitle = "WC WebContent Title"
		);

		WebContent.viewStatus(
			webContentContent = "WC WebContent Content",
			webContentStatus = "Draft",
			webContentTitle = "WC WebContent Title"
		);

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoEditCP(webContentTitle = "WC WebContent Title");

		PortletEntry.publish(
			webContentContent = "WC WebContent Content",
			webContentTitle = "WC WebContent Title"
		);

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContent.viewApprovedStatus(webContentTitle = "WC WebContent Title");
	}

	@priority = "4"
	test PublishExpireWebContent {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoAddCP();

		WebContent.addCP(
			webContentContent = "WC WebContent Content",
			webContentTitle = "WC WebContent Title"
		);

		PortletEntry.publish();

		WebContent.viewTitle(webContentTitle = "WC WebContent Title");

		WebContent.expireCP(webContentTitleList = "WC WebContent Title");

		WebContentNavigator.gotoEditCP(webContentTitle = "WC WebContent Title");

		WebContent.viewCP(
			webContentContent = "WC WebContent Content",
			webContentTitle = "WC WebContent Title"
		);

		WebContent.viewStatus(
			webContentContent = "WC WebContent Content",
			webContentStatus = "Expired",
			webContentTitle = "WC WebContent Title"
		);

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoViewStatus(
			webContentStatus = "Expired",
			webContentTitle = "WC WebContent Title"
		);

		WebContent.viewStatus(
			webContentContent = "WC WebContent Content",
			webContentStatus = "Expired",
			webContentTitle = "WC WebContent Title"
		);

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoEditCP(webContentTitle = "WC WebContent Title");

		PortletEntry.publish(
			webContentContent = "WC WebContent Content",
			webContentTitle = "WC WebContent Title"
		);

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContent.viewApprovedStatus(webContentTitle = "WC WebContent Title");
	}

	@priority = "5"
	test SearchWebContent {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoAddCP();

		WebContent.addCP(
			webContentContent = "WC WebContent Content",
			webContentTitle = "WC WebContent Title"
		);

		PortletEntry.publish();

		WebContent.viewTitle(webContentTitle = "WC WebContent Title");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContent.searchCP(
			webContentFolder = "Home",
			webContentTitle = "WC WebContent Title"
		);

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContent.searchNoResultsCP(
			searchQuery = "WC2 WebContent2 Title2",
			webContentFolder = "Home",
			webContentTitle = "WC WebContent Title"
		);
	}

	@priority = "4"
	test UserEditWebContent {
		var siteName = TestCase.getSiteName(siteName = "${siteName}");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoAddCP();

		WebContent.addCP(
			webContentContent = "WC WebContent Content",
			webContentTitle = "WC WebContent Title"
		);

		PortletEntry.publish();

		WebContent.viewTitle(webContentTitle = "WC WebContent Title");

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Roles"
		);

		Role.addCP(roleName = "Web Content Administrator Role");

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Roles"
		);

		Role.definePermissionsCP(
			permissionDefinitionKeys = "SITE_ADMIN_CONTENT_WEB_CONTENT_GENERAL_PERMISSIONS_ACCESS_IN_SITE_ADMINISTRATION_CHECKBOX,SITE_ADMIN_CONTENT_WEB_CONTENT_GENERAL_PERMISSIONS_VIEW_CHECKBOX,SITE_ADMIN_CONTENT_WEB_CONTENT_RESOURCE_PERMISSIONS_WEB_CONTENT_ACTION_CHECKBOX,SITE_ADMIN_CONTENT_WEB_CONTENT_RESOURCE_PERMISSIONS_WEB_CONTENT_FOLDER_ACTION_CHECKBOX,SITE_ADMIN_CONTENT_WEB_CONTENT_RESOURCE_PERMISSIONS_WEB_CONTENT_ARTICLE_ACTION_CHECKBOX",
			roleName = "Web Content Administrator Role"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.addCP(
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userScreenName = "usersn"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.editPasswordCP(
			userEmailAddress = "userea@liferay.com",
			userScreenName = "usersn"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Roles"
		);

		Role.assignRegRoleCP(
			roleName = "Web Content Administrator Role",
			userScreenName = "usersn"
		);

		ProductMenu.gotoSite(site = "${siteName}");

		ProductMenu.gotoPortlet(
			category = "Members",
			panel = "Site Administration",
			portlet = "Site Memberships"
		);

		Site.addAllMembersCP();

		User.logoutPG();

		User.loginPG(password = "test", userEmailAddress = "userea@liferay.com");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoEditCP(webContentTitle = "WC WebContent Title");

		WebContent.editCP(
			webContentContentEdit = "WC WebContent Content Edit",
			webContentTitle = "WC WebContent Title",
			webContentTitleEdit = "WC WebContent Title Edit"
		);

		WebContent.viewTitle(webContentTitle = "WC WebContent Title Edit");

		WebContent.viewUserEditCP(
			userFirstLast = "userfn userln",
			webContentContent = "WC WebContent Content Edit",
			webContentTitle = "WC WebContent Title Edit"
		);
	}

	@priority = "4"
	test ValidateDDMNavigation {
		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoManageStructures();

		WebContentNavigator.gotoManageTemplatesViaStructures(
			structureName = "Basic Web Content"
		);

		WebContentTemplates.addCP(
			templateDescription = "Test WC Template Description",
			templateName = "Test WC Template"
		);

		PortletEntry.save();

		LexiconEntry.gotoEntryMenuItem(menuItem = "Edit", rowEntry = "Test WC Template");

		Navigator.gotoBack();

		SiteAdmin.viewPortletTitle(
			portletTitle = "Templates for Structure: Basic Web Content"
		);

		WebContentTemplates.viewTableEntryCP(
			templateDescription = "Test WC Template Description",
			templateName = "Test WC Template"
		);

		WebContentTemplates.viewTableEntryCP(
			templateDescription = "",
			templateName = "Basic Web Content"
		);

		Navigator.gotoBack();

		SiteAdmin.viewPortletTitle(portletTitle = "Structures");

		WebContentStructures.viewTableEntryCP(
			structureDescription = "Basic Web Content",
			structureName = "Basic Web Content"
		);
	}

	@priority = "4"
	test ViewContentNotLostWithBlankTitle {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoAddCP();

		WebContent.addNullCP(webContentContent = "WC WebContent Content");
	}

	@priority = "3"
	test ViewDisplayStyleCP {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContentNavigator.gotoAddCP();

		WebContent.addCP(
			webContentContent = "WC WebContent Content",
			webContentTitle = "WC WebContent Title"
		);

		PortletEntry.publish();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Web Content"
		);

		WebContent.viewDisplayStyleCP(webContentTitle = "WC WebContent Title");
	}
}