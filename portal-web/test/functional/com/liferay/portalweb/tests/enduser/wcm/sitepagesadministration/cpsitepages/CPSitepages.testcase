@component-name = "portal-wcm"
definition {
	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Site Pages Administration";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			BlogsEntry.tearDownCP();

			Page.tearDownPG();

			Site.tearDownCP();

			User.tearDownCP();
		}
	}

	@priority = "3"
	test AddPageMultiplePagesToSite {
		var siteName = TestCase.getSiteName(siteName = "${siteName}");

		Navigator.openURL();

		Page.add(pageName = "Site Page 1");

		Page.add(pageName = "Site Page 2");

		Page.add(pageName = "Site Page 3");

		Page.tearDownPG();
	}

	@priority = "4"
	test AddPagesFullPageApplication {
		for (var portlet : list "Blogs,Documents and Media,Wiki,Media Gallery,Message Boards,Form,Hello Soy Portlet,RSS Publisher") {
			Page.add(
				pageName = "${portlet} Full Page Application",
				portlet = "${portlet}",
				sitePageType = "Full Page Application"
			);

			if ("${portlet}" == "Dynamic Data Lists Form") {
				AssertTextEquals(
					locator1 = "Home#PAGE_COLUMN_PORTLET_COLUMN_1_PORTLET_TITLE",
					value1 = "Form",
					key_portletTitleName = "Form"
				);
			}
			else if ("${portlet}" == "RSS") {
				AssertTextEquals(
					locator1 = "Home#PAGE_COLUMN_PORTLET_COLUMN_1_PORTLET_TITLE",
					value1 = "RSS Publisher",
					key_portletTitleName = "RSS Publisher"
				);
			}
			else {
				AssertTextEquals(
					locator1 = "Home#PAGE_COLUMN_PORTLET_COLUMN_1_PORTLET_TITLE",
					value1 = "${portlet}",
					key_portletTitleName = "${portlet}"
				);
			}

			AssertElementNotPresent(locator1 = "ControlMenu#ADD");
		}
	}

	@priority = "4"
	test AddPageViaNavigationMenu {
		property test.name.skip.portal.instance = "CPSitepages#AddPageViaNavigationMenu";
		var portalURL = PropsUtil.get("portal.url");

		NavigationMenu.gotoAddPage();

		PortletEntry.inputName(name = "Test Page Name");

		Page.saveAddPage();

		AssertLocation(value1 = "${portalURL}/web/guest/test-page-name");
	}

	@priority = "3"
	test AddPageWithEscapeCharacter {
		Page.add(pageName = "Tester&apos;s Page");
	}

	@priority = "3"
	test AddPageWithMultipleChildPagesToSite {
		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Sites"
		);

		Site.addBlankCP(siteName = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Sites"
		);

		Page.add(pageName = "Site Page", siteName = "Site Name");

		for (var childPageName : list "Site Child Page 1,Site Child Page 2,Site Child Page 3") {
			ProductMenu.gotoPortlet(
				category = "Sites",
				panel = "Control Panel",
				portlet = "Sites"
			);

			Page.addChild(
				page = "Public Pages",
				pageName = "Site Page",
				siteChildPageName = "${childPageName}",
				siteName = "Site Name"
			);
		}

		for (var childPageName : list "Site Child Page 1,Site Child Page 2,Site Child Page 3") {
			Navigator.gotoSitePage(pageName = "Site Page", siteName = "Site Name");

			Page.viewChildPage(pageName = "${childPageName}");
		}
	}

	@priority = "4"
	test AddSitePrivateChildPage {
		var portalURL = PropsUtil.get("portal.url");

		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Sites"
		);

		Site.addBlankCP(siteName = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Sites"
		);

		Page.add(
			pageName = "Site Page",
			siteName = "Site Name",
			sitePagePrivacy = "Private"
		);

		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Sites"
		);

		Page.addChild(
			page = "Private Pages",
			pageName = "Site Page",
			siteChildPageName = "Site Child Page",
			siteName = "Site Name"
		);

		Navigator.gotoSpecificURLPage(
			pageName = "Site Page",
			url = "${portalURL}/group/site-name/site-child-page"
		);

		ProductMenu.gotoPrivatePages();

		Page.viewChildPage(pageName = "Site Child Page");
	}

	@priority = "4"
	test AddSitePrivatePage {
		var portalURL = PropsUtil.get("portal.url");

		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Sites"
		);

		Site.addBlankCP(siteName = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Sites"
		);

		Page.add(
			pageName = "Site Page",
			siteName = "Site Name",
			sitePagePrivacy = "Private"
		);

		Navigator.gotoSpecificURLPage(
			pageName = "Site Page",
			url = "${portalURL}/group/site-name/site-page"
		);

		Page.view(pageName = "Site Page");
	}

	@priority = "4"
	test AddSitePrivatePagePortlet {
		var portalURL = PropsUtil.get("portal.url");

		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Sites"
		);

		Site.addBlankCP(siteName = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Sites"
		);

		Page.add(
			pageName = "Blogs Page",
			siteName = "Site Name",
			sitePagePrivacy = "Private"
		);

		Navigator.gotoSpecificURLPage(
			pageName = "Blogs Page",
			url = "${portalURL}/group/site-name"
		);

		Portlet.addPG(
			pageAccess = "Private",
			pageName = "Blogs Page",
			portletName = "Blogs",
			siteName = "Site Name",
			siteURL = "true"
		);
	}

	@priority = "4"
	test AddSitePublicChildPage {
		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Sites"
		);

		Site.addBlankCP(siteName = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Sites"
		);

		Page.add(pageName = "Site Page", siteName = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Sites"
		);

		Page.addChild(
			page = "Public Pages",
			pageName = "Site Page",
			siteChildPageName = "Site Child Page",
			siteName = "Site Name"
		);

		var portalURL = PropsUtil.get("portal.url");

		Navigator.gotoSpecificURLPage(
			pageName = "Site Page",
			url = "${portalURL}/web/site-name/site-child-page"
		);

		Page.viewChildPage(pageName = "Site Child Page");
	}

	@priority = "5"
	test AddSitePublicPage {
		property portal.acceptance = "true";

		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Sites"
		);

		Site.addBlankCP(siteName = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Sites"
		);

		Page.add(pageName = "Site Page", siteName = "Site Name");

		var portalURL = PropsUtil.get("portal.url");

		Navigator.gotoSpecificURLPage(
			pageName = "Site Page",
			url = "${portalURL}/web/site-name/site-page"
		);

		Page.view(pageName = "Site Page");
	}

	@priority = "4"
	test AddSitePublicPagePortlet {
		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Sites"
		);

		Site.addBlankCP(siteName = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Sites"
		);

		Page.add(pageName = "Blogs Page", siteName = "Site Name");

		Navigator.gotoSitePage(pageName = "Blogs Page", siteName = "Site Name");

		Portlet.addPG(portletName = "Blogs");
	}

	@priority = "5"
	test ChangePageLayout {
		property osgi.app.includes = "frontend-columns-layouttpl";
		property plugins.deployment.type = "osgi";
		property testray.component.names = "Training";

		Page.add(pageName = "Site Page Name");

		Portlet.addPG(portletName = "Web Content Display");

		Page.viewPageLayout(pageLayout = "2 Column (30/70)");

		SitePageNavigator.gotoEditPage(page = "Site Page Name");

		Page.editPageTypeLayout(columnName = "1 Column");

		Page.viewPageLayout(pageLayout = "1 Column");

		SitePageNavigator.gotoEditPage(page = "Site Page Name");

		Page.editPageTypeLayout(columnName = "1-2-1 Columns");

		Navigator.gotoPage(pageName = "Site Page Name");

		Portlet.addPG(portletName = "Web Content Display");

		SitePageNavigator.gotoEditPage(page = "Site Page Name");

		Page.editPageTypeLayout(columnName = "Freeform");

		Portlet.viewPG(portletName = "Web Content Display");

		SitePageNavigator.gotoEditPage(page = "Site Page Name");

		Page.editPageTypeLayout(columnName = "2 Columns (50/50)");

		Portlet.viewPG(portletName = "Web Content Display");

		SitePageNavigator.gotoEditPage(page = "Site Page Name");

		Page.editPageTypeLayout(columnName = "2 Columns (70/30)");

		Portlet.viewPG(portletName = "Web Content Display");

		SitePageNavigator.gotoEditPage(page = "Site Page Name");

		Page.editPageTypeLayout(columnName = "3 Columns");

		Portlet.viewPG(portletName = "Web Content Display");

		SitePageNavigator.gotoEditPage(page = "Site Page Name");

		Page.editPageTypeLayout(columnName = "1-2 Columns (30/70)");

		Portlet.viewPG(portletName = "Web Content Display");

		Navigator.gotoPage(pageName = "Site Page Name");

		SitePageNavigator.gotoEditPage(page = "Site Page Name");

		Page.editPageTypeLayout(columnName = "1-2 Columns (70/30)");

		Portlet.viewPG(portletName = "Web Content Display");

		SitePageNavigator.gotoEditPage(page = "Site Page Name");

		Page.editPageTypeLayout(columnName = "2-2 Columns");

		Portlet.viewPG(portletName = "Web Content Display");

		SitePageNavigator.gotoEditPage(page = "Site Page Name");

		Page.editPageTypeLayout(columnName = "1-3-1 Columns");

		Portlet.viewPG(portletName = "Web Content Display");

		SitePageNavigator.gotoEditPage(page = "Site Page Name");

		Page.editPageTypeLayout(columnName = "1-3-2 Columns");

		Portlet.viewPG(portletName = "Web Content Display");

		SitePageNavigator.gotoEditPage(page = "Site Page Name");

		Page.editPageTypeLayout(columnName = "2-1-2 Columns");

		Portlet.viewPG(portletName = "Web Content Display");

		SitePageNavigator.gotoEditPage(page = "Site Page Name");

		Page.editPageTypeLayout(columnName = "3-2-3 Columns");

		Portlet.viewPG(portletName = "Web Content Display");
	}

	@ignore = "true"
	@priority = "4"
	test CopyApplicationsFromPageToPage {
		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Sites"
		);

		Site.addBlankCP(siteName = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Sites"
		);

		Page.add(pageName = "Site Page", siteName = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Sites"
		);

		Page.add(pageName = "Blog Page", siteName = "Site Name");

		Navigator.gotoSitePage(pageName = "Blog Page", siteName = "Site Name");

		Portlet.addPG(portletName = "Blogs");

		SitePageNavigator.gotoEditPage(page = "Blog Page");

		Page.copyApplicationsFromPageToPage(
			pageName = "Blog Page",
			pageNameCopy = "Site Page"
		);
	}

	@priority = "5"
	test DeleteSitePages {
		property portal.acceptance = "true";

		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Sites"
		);

		Site.addBlankCP(siteName = "Site Name");

		for (var pageName : list "Site Page 1,Site Page 2,Site Page 3") {
			Navigator.openURL();

			ProductMenu.gotoPortlet(
				category = "Sites",
				panel = "Control Panel",
				portlet = "Sites"
			);

			Page.add(
				page = "Public Pages",
				pageName = "${pageName}",
				siteName = "Site Name"
			);
		}

		Page.deletePG(pageName = "Site Page 2");
	}

	@priority = "5"
	test EditSitePage {
		property portal.acceptance = "true";
		property testray.component.names = "Training";

		SitePageNavigator.gotoPages(page = "Public Pages");

		Page.add(pageName = "Site Page");

		SitePageNavigator.gotoEditPage(page = "Site Page");

		Page.editName(pageNameEdit = "Site Page Edit");

		SitePageNavigator.gotoPages(page = "Public Pages");

		Page.view(pageName = "Site Page Edit");

		SitePageNavigator.gotoEditPage(page = "Welcome");

		Page.viewSelectedLayoutColumn(columnName = "1 Column");

		Page.editName(pageNameEdit = "Home");

		SitePageNavigator.gotoPages(page = "Public Pages");

		Page.view(pageName = "Home");
	}

	@priority = "4"
	test SaveEmbeddedPageType {
		var portalURL = PropsUtil.get("portal.url");

		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Sites"
		);

		Site.addBlankCP(siteName = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Sites"
		);

		Page.add(pageName = "Site Page", siteName = "Site Name");

		Navigator.gotoSitePage(pageName = "Site Page", siteName = "Site Name");

		SitePageNavigator.gotoEditPage(page = "Site Page");

		Page.editSelectPageType(page = "Site Page", pageType = "Embedded");

		Navigator.gotoSpecificURLPage(
			pageName = "Site Page",
			url = "${portalURL}/web/site-name"
		);

		Page.viewEmbeddedPagePG();
	}

	@priority = "4"
	test SavePortletPageType {
		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Sites"
		);

		Site.addBlankCP(siteName = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Sites"
		);

		Page.add(
			pageName = "Site Page",
			pageTemplateName = "Blog",
			siteName = "Site Name"
		);

		Navigator.gotoSitePage(pageName = "Site Page", siteName = "Site Name");

		Blogs.viewControlsPG();
	}

	@priority = "3"
	test ViewNoInfoMessageWhenChangingSiteTemplateAsUser {
		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.addCP(
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userScreenName = "usersn"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.editPasswordCP(
			userEmailAddress = "userea@liferay.com",
			userScreenName = "usersn"
		);

		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Sites"
		);

		Site.addCommunityCP(siteName = "Site Name");

		ProductMenu.gotoSite(site = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Members",
			panel = "Site Administration",
			portlet = "Site Memberships"
		);

		Site.assignUserAsMemberCP(
			userFirstName = "userfn",
			userLastName = "userln",
			userScreenName = "usersn"
		);

		User.firstLoginPG(password = "test", userEmailAddress = "userea@liferay.com");

		Navigator.openSiteURL(siteName = "Site Name");

		Page.viewDefaultSiteTemplatePagesPG(
			pageName = "Home",
			siteName = "Site Name",
			siteTemplate = "Community",
			siteURL = "true"
		);

		User.firstLoginPG(password = "test", userEmailAddress = "test@liferay.com");

		Navigator.gotoSitePage(pageName = "Home", siteName = "Site Name");

		Portlet.addPG(portletName = "Blogs");

		User.firstLoginPG(password = "test", userEmailAddress = "userea@liferay.com");

		Navigator.gotoSitePage(pageName = "Home", siteName = "Site Name");

		SiteTemplates.viewNoInfoMessage();

		User.firstLoginPG(password = "test", userEmailAddress = "test@liferay.com");
	}
}