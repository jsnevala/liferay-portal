@component-name = "portal-web-forms-and-data-lists"
definition {
	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Forms";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			Navigator.openURL();

			ProductMenu.gotoPortlet(
				category = "Content",
				panel = "Site Administration",
				portlet = "Forms"
			);

			FormsAdmin.teardownForms();

			Page.tearDownPG();
		}
	}

	@priority = "5"
	test AddFormInGlobal {
		property testray.component.names = "Training";

		Navigator.openURL();

		ProductMenu.gotoSite(site = "Global");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Forms"
		);

		LexiconEntry.gotoAdd();

		Form.editName();

		Form.editDescription();

		Form.editPageTitle(formPageName = "Created Form Page Name");

		Form.gotoAddField(fieldType = "Text Field");

		Form.editFieldLabel(fieldValue = "Label");

		FormFields.editHelpText(fieldHelpText = "Help Text", fieldName = "tip");

		FormFields.enableSwitcher(fieldName = "required");

		FormFields.save();

		Form.save();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Forms"
		);

		FormsAdmin.viewForm(
			formDescription = "Created Form Description",
			formName = "Created Form Name"
		);

		FormsAdminNavigator.gotoPermissions(
			entryTitle = "Created Form Name",
			menuItem = "Permissions"
		);

		Role.definePermissionPG(
			permissionDefinitionKey = "CONTENT_PERMISSIONS_ADD_RECORD_CHECKBOX",
			roleName = "Power User"
		);

		Navigator.openURL();

		Page.add(pageName = "Private Form Page", sitePagePrivacy = "Private");

		Navigator.gotoPage(
			pageName = "Private Form Page",
			sitePagePrivacy = "Private Pages"
		);

		Portlet.addPG(pageName = "Private Form Page", portletName = "Form");

		FormPortletConfiguration.configureScopePG(
			portletName = "Form",
			scopeSelection = "Global"
		);

		FormPortletConfiguration.selectForm(formName = "Created Form Name");

		PortletEntry.save();

		Navigator.openURL();

		Navigator.gotoPage(
			pageName = "Private Form Page",
			sitePagePrivacy = "Private Pages"
		);

		FormFields.viewTextLabel(fieldLabel = "Label", fieldName = "Label");
	}

	@priority = "5"
	test AddFormWithSpanishAsDefaultPortalLanguage {
		property test.name.skip.portal.instance = "Forms#AddFormWithSpanishAsDefaultPortalLanguage";

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Control Panel",
			portlet = "Instance Settings"
		);

		PortalSettings.configureCurrentLanguagesCP(
			defaultPortalLanguage = "Spanish (Spain)"
		);

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Forms"
		);

		LexiconEntry.gotoAdd();

		Form.editName();

		Form.editDescription();

		Form.gotoAddField(fieldType = "Text Field");

		Form.editFieldLabel(fieldValue = "Text Field On Spanish Portal");

		FormFields.save();

		Form.save();

		Page.add(pageName = "Form Page");

		Navigator.gotoPage(pageName = "Form Page");

		Portlet.addPG(pageName = "Form Page", portletName = "Form");

		FormPortletNavigator.gotoSelectForm();

		FormPortletConfiguration.selectForm();

		PortletEntry.save();

		Navigator.gotoPage(pageName = "Form Page");

		FormFields.viewTextLabel(
			fieldLabel = "Text Field On Spanish Portal",
			fieldName = "TextFieldOnSpanishPortal"
		);

		FormFields.editText(
			fieldName = "TextFieldOnSpanishPortal",
			fieldValue = "Text Field Value"
		);

		FormPortlet.submit();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Forms"
		);

		FormsAdminNavigator.gotoViewEntries();

		FormsAdmin.viewFormTableEntry(
			fieldLabel = "Text Field On Spanish Portal",
			fieldValue = "Text Field Value"
		);

		FormsAdminNavigator.gotoView();

		FormsAdmin.viewTextEntry(
			fieldLabel = "Text Field On Spanish Portal",
			fieldName = "TextFieldOnSpanishPortal",
			fieldValue = "Text Field Value"
		);
	}

	@priority = "5"
	test ConfigureDataProviderWithSelectField {
		property test.name.skip.portal.instance = "Forms#ConfigureDataProviderWithSelectField";
		var portalURL = PropsUtil.get("portal.url");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Forms"
		);

		LexiconEntry.gotoHeaderMenuItem(menuItem = "Data Providers");

		FormsAdminNavigator.gotoAddDataProvider();

		FormsAdmin.editDataProvider(
			displayedAttribute = "nameCurrentValue",
			name = "Liferay Countries",
			password = "test",
			storedAttribute = "name",
			url = "${portalURL}/api/jsonws/country/get-countries",
			username = "test@liferay.com"
		);

		FormsAdmin.saveDataProvider();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Forms"
		);

		LexiconEntry.gotoAdd();

		Form.editName();

		Form.editDescription();

		Form.gotoAddField(fieldType = "Select from List");

		Form.editFieldLabel(fieldValue = "Data Provider Select Field");

		Form.editFieldDataProvider(dataProvider = "Liferay Countries");

		FormFields.save();

		Form.save();

		Page.add(pageName = "Form Page");

		Navigator.gotoPage(pageName = "Form Page");

		Portlet.addPG(pageName = "Form Page", portletName = "Form");

		FormPortletNavigator.gotoSelectForm();

		FormPortletConfiguration.selectForm();

		PortletEntry.save();

		Navigator.gotoPage(pageName = "Form Page");

		FormFields.viewSelectLabel(
			fieldLabel = "Data Provider Select Field",
			fieldName = "DataProviderSelectField"
		);

		FormFields.selectSelectOption(
			fieldName = "SelectField",
			selectOption = "United States"
		);

		FormPortlet.submit();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Forms"
		);

		FormsAdminNavigator.gotoViewEntries();

		FormsAdmin.viewFormTableEntry(
			fieldLabel = "Data Provider Select Field",
			fieldValue = "united-states"
		);
	}

	@description = "This is a use case for LPS-64379."
	@priority = "3"
	test CreateUntitledForm {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Forms"
		);

		LexiconEntry.gotoAdd();

		Form.gotoAddField(fieldType = "Text Field");

		Form.editFieldLabel(fieldValue = "Text Field");

		FormFields.save();

		Form.save();

		FormsAdmin.viewForm(formDescription = "", formName = "Untitled Form");
	}

	@description = "This is a use case for LPS-60520."
	@priority = "4"
	test DeleteDateFieldAndViewEntries {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Forms"
		);

		LexiconEntry.gotoAdd();

		Form.editName();

		Form.editDescription();

		Form.gotoAddField(fieldType = "Text Field");

		Form.editFieldLabel(fieldValue = "Text Field");

		FormFields.save();

		Form.gotoAddField(fieldType = "Date");

		Form.editFieldLabel(fieldValue = "Date Field");

		FormFields.save();

		Form.save();

		Page.add(pageName = "Form Page");

		Navigator.gotoPage(pageName = "Form Page");

		Portlet.addPG(pageName = "Form Page", portletName = "Form");

		FormPortletNavigator.gotoSelectForm();

		FormPortletConfiguration.selectForm();

		PortletEntry.save();

		Navigator.gotoPage(pageName = "Form Page");

		FormFields.viewTextField(fieldLabel = "Text Field", fieldName = "TextField");

		FormFields.editText(fieldName = "TextField", fieldValue = "Text Field Value");

		FormFields.viewDateField(fieldLabel = "Date Field", fieldName = "DateField");

		FormFields.editDate(fieldName = "DateField", fieldValue = "01/01/2016");

		FormPortlet.submit();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Forms"
		);

		LexiconEntry.gotoEntryMenuItem(
			menuItem = "Edit",
			rowEntry = "Created Form Name"
		);

		FormsAdminNavigator.gotoDeleteField(
			fieldLabel = "Date Field",
			fieldName = "DateField"
		);

		FormFields.viewDateFieldNotPresent(
			fieldLabel = "Date Field",
			fieldName = "DateField"
		);

		Form.save();

		Portlet.changeDisplayStyle(displayStyle = "Descriptive");

		FormsAdminNavigator.gotoViewEntries();

		FormsAdmin.viewFormTableEntryNotPresent(
			fieldLabel = "Date Field",
			fieldValue = "1/1/16"
		);
	}

	@priority = "4"
	test EditAllFormFieldNames {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Forms"
		);

		LexiconEntry.gotoAdd();

		Form.editName();

		Form.editDescription();

		Form.gotoAddField(fieldType = "Form Text");

		Form.editFieldLabel(fieldValue = "Paragraph");

		FormFields.viewFieldName(fieldName = "Paragraph");

		FormFields.editFieldName(fieldValue = "ParagraphName");

		FormFields.viewFieldName(fieldName = "ParagraphName");

		FormFields.editParagraphBody(fieldValue = "Paragraph body text.");

		FormFields.save();

		Form.gotoAddField(fieldType = "Text Field");

		Form.editFieldLabel(fieldValue = "Text");

		FormFields.viewFieldName(fieldName = "Text");

		FormFields.editFieldName(fieldValue = "TextName");

		FormFields.viewFieldName(fieldName = "TextName");

		FormFields.save();

		Form.gotoAddField(fieldType = "Select from List");

		Form.editFieldLabel(fieldValue = "Select");

		FormFields.viewFieldName(fieldName = "Select");

		FormFields.editFieldName(fieldValue = "SelectName");

		FormFields.viewFieldName(fieldName = "SelectName");

		FormFields.editOptionsRow(optionName = "Select1", optionValue = "Select 1");

		FormFields.viewOptionsRowFieldName(fieldName = "Select1");

		FormFields.editOptionsRowNameField(optionValue = "Select1Name");

		FormFields.editOptionsRow(
			optionName = "Select2",
			optionValue = "Select 2",
			rowNumber = "2"
		);

		FormFields.viewOptionsRowFieldName(fieldName = "Select2", rowNumber = "2");

		FormFields.editOptionsRowNameField(optionValue = "Select2Name", rowNumber = "2");

		FormFields.save();

		Form.gotoAddField(fieldType = "Single Selection");

		Form.editFieldLabel(fieldValue = "Radio");

		FormFields.viewFieldName(fieldName = "Radio");

		FormFields.editFieldName(fieldValue = "RadioName");

		FormFields.viewFieldName(fieldName = "RadioName");

		FormFields.editOptionsRow(optionName = "Option1", optionValue = "Option 1");

		FormFields.viewOptionsRowFieldName(fieldName = "Option1");

		FormFields.editOptionsRowNameField(optionValue = "Option1Name");

		FormFields.editOptionsRow(
			optionName = "Option2",
			optionValue = "Option 2",
			rowNumber = "2"
		);

		FormFields.viewOptionsRowFieldName(fieldName = "Option2", rowNumber = "2");

		FormFields.editOptionsRowNameField(optionValue = "Option2Name", rowNumber = "2");

		FormFields.save();

		Form.gotoAddField(fieldType = "Date");

		Form.editFieldLabel(fieldValue = "Date");

		FormFields.viewFieldName(fieldName = "Date");

		FormFields.editFieldName(fieldValue = "DateName");

		FormFields.viewFieldName(fieldName = "DateName");

		FormFields.save();

		Form.gotoAddField(fieldType = "Single Checkbox");

		Form.editFieldLabel(fieldValue = "Checkbox");

		FormFields.viewFieldName(fieldName = "Checkbox");

		FormFields.editFieldName(fieldValue = "CheckboxName");

		FormFields.viewFieldName(fieldName = "CheckboxName");

		FormFields.save();

		Form.save();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Forms"
		);

		LexiconEntry.gotoEntryMenuItem(
			menuItem = "Edit",
			rowEntry = "Created Form Name"
		);

		FormsAdminNavigator.gotoEditField(fieldName = "Paragraph");

		FormFields.viewFieldName(fieldName = "ParagraphName");

		FormFields.saveEdit();

		FormsAdminNavigator.gotoEditField(fieldName = "Text");

		FormFields.viewFieldName(fieldName = "TextName");

		FormFields.saveEdit();

		FormsAdminNavigator.gotoEditField(fieldName = "Select");

		FormFields.viewFieldName(fieldName = "SelectName");

		FormFields.viewOptionsRowFieldName(fieldName = "Select1Name");

		FormFields.viewOptionsRowFieldName(fieldName = "Select2Name", rowNumber = "2");

		FormFields.saveEdit();

		FormsAdminNavigator.gotoEditField(fieldName = "Radio");

		FormFields.viewFieldName(fieldName = "RadioName");

		FormFields.viewOptionsRowFieldName(fieldName = "Option1Name");

		FormFields.viewOptionsRowFieldName(fieldName = "Option2Name", rowNumber = "2");

		FormFields.saveEdit();

		FormsAdminNavigator.gotoEditField(fieldName = "Date");

		FormFields.viewFieldName(fieldName = "DateName");

		FormFields.saveEdit();

		FormsAdminNavigator.gotoEditField(fieldName = "Checkbox");

		FormFields.viewFieldName(fieldName = "CheckboxName");

		FormFields.saveEdit();

		Form.save();
	}

	@description = "This is a use case for LPS-50757."
	@priority = "4"
	test EditAllFormFieldsTypesUsedBySystemSettings {
		property test.name.skip.portal.instance = "Forms#EditAllFormFieldsTypesUsedBySystemSettings";

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Control Panel",
			portlet = "System Settings"
		);

		SystemSettings.gotoCategory(category = "Forms and Workflow");

		SystemSettings.editConfiguration(configurationName = "Dynamic Data Lists");

		FormFields.viewCheckboxLabel(
			fieldLabel = "Changeable Default Language",
			fieldName = "changeableDefaultLanguage"
		);

		FormFields.viewCheckboxNotChecked(fieldName = "changeableDefaultLanguage");

		FormFields.viewFieldHelpText(
			fieldHelpText = "If checked, the default language of data definitions will be changeable. The default language of data definitions is inherited from the site settings.",
			fieldName = "changeableDefaultLanguage"
		);

		FormFields.viewSelectLabel(
			fieldLabel = "Default Display View",
			fieldName = "defaultDisplayView"
		);

		FormFields.viewSelectValue(fieldName = "defaultDisplayView");

		FormFields.enableCheckbox(fieldName = "changeableDefaultLanguage");

		FormFields.selectSelectOption(
			fieldName = "defaultDisplayView",
			selectOption = "Descriptive"
		);

		SystemSettings.saveConfiguration();

		SystemSettings.editConfiguration(configurationName = "Dynamic Data Lists");

		FormFields.viewCheckboxChecked(fieldName = "changeableDefaultLanguage");

		FormFields.viewSelectOption(
			fieldName = "defaultDisplayView",
			selectOption = "Descriptive"
		);

		SystemSettings.exitEditConfiguration();

		SystemSettings.resetConfiguration(
			category = "Forms and Workflow",
			configurationName = "Dynamic Data Lists"
		);

		SystemSettings.editConfiguration(
			configurationName = "Dynamic Data Mapping Service"
		);

		FormFields.viewRepeatableTextMultilineField(
			fieldHelpText = "Set the allowed file extensions for template images. A file extension of * will permit all file extensions.",
			fieldLabel = "Small image extensions",
			fieldName = "smallImageExtensions",
			repeatableFieldNumber = "4"
		);

		FormFields.addRepeatableField(
			fieldName = "smallImageExtensions",
			repeatableFieldNumber = "4"
		);

		FormFields.viewRepeatableTextMultilineField(
			fieldHelpText = "Set the allowed file extensions for template images. A file extension of * will permit all file extensions.",
			fieldLabel = "Small image extensions",
			fieldName = "smallImageExtensions",
			repeatableFieldNumber = "5"
		);

		FormFields.viewTextField(
			fieldHelpText = "Set the maximum file size for template images in bytes. A value of 0 can be used to indicate unlimited file size.",
			fieldLabel = "Small image max size",
			fieldName = "smallImageMaxSize"
		);

		FormFields.editRepeatableTextMultiline(
			fieldName = "smallImageExtensions",
			fieldValue = ".svg",
			repeatableFieldNumber = "4"
		);

		FormFields.editRepeatableTextMultiline(
			fieldName = "smallImageExtensions",
			fieldValue = "*",
			repeatableFieldNumber = "5"
		);

		FormFields.editText(fieldName = "smallImageMaxSize", fieldValue = "5120");

		SystemSettings.saveConfiguration();

		SystemSettings.editConfiguration(
			configurationName = "Dynamic Data Mapping Service"
		);

		FormFields.viewRepeatableTextMultilineValue(
			fieldName = "smallImageExtensions",
			fieldValue = ".svg",
			repeatableFieldNumber = "4"
		);

		FormFields.viewRepeatableTextMultilineValue(
			fieldName = "smallImageExtensions",
			fieldValue = "*",
			repeatableFieldNumber = "5"
		);

		FormFields.viewTextValue(fieldName = "smallImageMaxSize", fieldValue = "5120");

		SystemSettings.exitEditConfiguration();

		SystemSettings.resetConfiguration(
			category = "Forms and Workflow",
			configurationName = "Dynamic Data Mapping Service"
		);

		SystemSettings.gotoCategory(category = "Other");

		SystemSettings.editConfiguration(
			configurationName = "Apache Felix Declarative Service Implementation"
		);

		FormFields.viewTextField(
			fieldHelpText = "How long a lock is held before releasing due to suspected deadlock",
			fieldLabel = "Lock timeout milliseconds",
			fieldName = "ds.lock.timeout.milliseconds"
		);

		FormFields.editText(fieldName = "ds.lock.timeout.milliseconds", fieldValue = "");

		FormFields.viewFieldValidationErrorMessage(
			fieldName = "ds.lock.timeout.milliseconds",
			fieldValidationErrorMessage = "This field is required."
		);

		SystemSettings.exitEditConfiguration();

		SystemSettings.gotoCategory(category = "Foundation");

		SystemSettings.editConfiguration(configurationName = "JavaScript Loader");

		FormFields.viewCheckboxLabel(
			fieldLabel = "Apply Versioning",
			fieldName = "applyVersioning"
		);

		FormFields.viewCheckboxLabel(
			fieldLabel = "Explain Module Resolutions",
			fieldName = "explainResolutions"
		);

		FormFields.viewCheckboxLabel(
			fieldLabel = "Expose Global",
			fieldName = "exposeGlobal"
		);

		FormFields.viewCheckboxChecked(fieldName = "applyVersioning");

		for (var fieldName : list "applyVersioning,exposeGlobal") {
			FormFields.viewCheckboxChecked(fieldName = "${fieldName}");

			FormFields.disableCheckbox(fieldName = "${fieldName}");
		}

		SystemSettings.saveConfiguration();

		SystemSettings.editConfiguration(configurationName = "JavaScript Loader");

		for (var fieldName : list "applyVersioning,explainResolutions,exposeGlobal") {
			FormFields.viewCheckboxNotChecked(fieldName = "${fieldName}");
		}

		SystemSettings.exitEditConfiguration();

		SystemSettings.resetConfiguration(
			category = "Foundation",
			configurationName = "JavaScript Loader"
		);
	}

	@description = "This is a use case for LPS-59749"
	@priority = "3"
	test EditFormsConfigurationViaSystemSettings {
		property test.name.skip.portal.instance = "Forms#EditFormsConfigurationViaSystemSettings";

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Forms"
		);

		Portlet.viewDefaultDisplayStyle(displayStyle = "Descriptive");

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Control Panel",
			portlet = "System Settings"
		);

		SystemSettings.gotoCategory(category = "Forms and Workflow");

		SystemSettings.editConfiguration(configurationName = "Forms");

		FormFields.selectSelectOption(fieldName = "DisplayView", selectOption = "List");

		PortletEntry.save();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Forms"
		);

		Portlet.viewDefaultDisplayStyle(displayStyle = "List");

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Control Panel",
			portlet = "System Settings"
		);

		SystemSettings.resetConfiguration(
			category = "Forms and Workflow",
			configurationName = "Forms"
		);

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Forms"
		);

		Portlet.viewDefaultDisplayStyle(displayStyle = "Descriptive");
	}

	@description = "This is a use case for LPS-59331"
	@priority = "5"
	test NavigateToCorrectForm {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Forms"
		);

		LexiconEntry.gotoAdd();

		Form.editName(formName = "Text");

		Form.gotoAddField(fieldType = "Text Field");

		Form.editFieldLabel(fieldValue = "Text");

		FormFields.save();

		Form.save();

		FormsAdminNavigator.gotoEditFormByName(formName = "Text");

		Form.viewFormName(formName = "Text");

		Navigator.gotoBack();

		LexiconEntry.gotoAdd();

		Form.editName(formName = "Checkbox");

		Form.gotoAddField(fieldType = "Single Checkbox");

		Form.editFieldLabel(fieldValue = "Checkbox");

		FormFields.save();

		Form.save();

		FormsAdminNavigator.gotoEditFormByName(formName = "Checkbox");

		Form.viewFormName(formName = "Checkbox");

		Navigator.gotoBack();

		FormsAdminNavigator.gotoEditFormByName(formName = "Text");

		Form.viewFormName(formName = "Text");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Forms"
		);

		FormsAdminNavigator.gotoEditFormByName(formName = "Checkbox");

		Form.viewFormName(formName = "Checkbox");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Forms"
		);

		FormsAdminNavigator.gotoEditFormByName(formName = "Text");

		Form.viewFormName(formName = "Text");
	}

	@description = "This is a use case for LPS-61740"
	@priority = "5"
	test PreviewAndPublishForm {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Forms"
		);

		LexiconEntry.gotoAdd();

		Form.editName();

		Form.editDescription();

		Form.gotoAddField(fieldType = "Text Field");

		Form.editFieldLabel(fieldValue = "Text Field");

		FormFields.save();

		Form.save();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Forms"
		);

		FormsAdminNavigator.gotoEditFormByName();

		FormsAdminNavigator.gotoPublish();

		FormsAdminNavigator.gotoPreviewForm();

		Form.previewForm(
			fieldLabel = "Text Field",
			fieldName = "TextField",
			fieldValue = "Preview Form Text entry"
		);

		Navigator.closeWindow();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Forms"
		);

		FormsAdminNavigator.gotoEditFormByName();

		FormsAdminNavigator.gotoPublish();

		Form.clickPublishSwitcher();

		Button.clickConfirm();

		Form.submitFormPublish(
			fieldLabel = "Text Field",
			fieldName = "TextField",
			fieldValue = "Published form text entry"
		);

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Forms"
		);

		FormsAdminNavigator.gotoViewEntries();

		FormsAdmin.viewFormTableEntry(
			fieldLabel = "Text Field",
			fieldValue = "Published form text entry"
		);

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Forms"
		);

		FormsAdminNavigator.gotoEditFormByName();

		FormsAdminNavigator.gotoPublish();

		Form.clickPublishSwitcher();

		Button.clickConfirm();

		Form.viewFormNotPublished();
	}

	@description = "This is a use case for LPS-59336."
	@priority = "4"
	test SearchFormRecordMultipleEntries {
		var fieldValueList = "testEntry1,exampleText,sampleAnswer";

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Forms"
		);

		LexiconEntry.gotoAdd();

		Form.editName(formName = "Test Form");

		Form.editDescription(formDescription = "Test Form Description");

		Form.gotoAddField(fieldType = "Text Field");

		Form.editFieldLabel(fieldValue = "Text Field");

		FormFields.save();

		Form.save();

		Page.add(pageName = "Form Page");

		Portlet.addPG(pageName = "Form Page", portletName = "Form");

		FormPortletNavigator.gotoSelectForm();

		FormPortletConfiguration.selectForm(formName = "Test Form");

		PortletEntry.save();

		Navigator.gotoPage(pageName = "Form Page");

		for (var fieldValue : list "${fieldValueList}") {
			FormFields.editText(fieldName = "TextField", fieldValue = "${fieldValue}");

			FormPortlet.submit();
		}

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Forms"
		);

		FormsAdmin.viewForm(
			formDescription = "Test Form Description",
			formName = "Test Form"
		);

		FormsAdminNavigator.gotoViewEntries(formName = "Test Form");

		FormsAdmin.viewFormTableEntry(
			fieldLabel = "Text Field",
			fieldValue = "testEntry1"
		);

		for (var fieldValue : list "${fieldValueList}") {
			FormsAdmin.searchFormEntry(searchTerm = "${fieldValue}");

			FormsAdmin.viewFormTableEntry(
				fieldLabel = "Text Field",
				fieldValue = "${fieldValue}"
			);

			for (var fieldValueNotVisible : list "${fieldValueList}") {
				if (!("${fieldValueNotVisible}" == "${fieldValue}")) {
					FormsAdmin.viewTableEntryNotPresent(
						fieldLabel = "Text Field",
						fieldValue = "${fieldValueNotVisible}"
					);
				}
			}
		}

		FormsAdmin.searchFormEntry(searchTerm = "otherEntry");

		FormsAdmin.viewNoFormEntries();
	}

	@priority = "4"
	test SubmitForm3x3Layout {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Forms"
		);

		LexiconEntry.gotoAdd();

		Form.editName();

		Form.editDescription();

		Form.gotoAddField(fieldType = "Text Field");

		Form.editFieldLabel(fieldValue = "one");

		FormFields.save();

		Form.addColumn(columnLineNumber = "3");

		Form.gotoAddField(columnSize = "10", fieldType = "Text Field");

		Form.editFieldLabel(fieldValue = "two");

		FormFields.save();

		Form.addColumn(columnLineNumber = "10");

		Form.gotoAddField(columnSize = "3", fieldType = "Text Field");

		Form.editFieldLabel(fieldValue = "three");

		FormFields.save();

		Form.gotoAddField(fieldType = "Text Field");

		Form.editFieldLabel(fieldValue = "four");

		FormFields.save();

		Form.addColumn(columnLineNumber = "2", rowNumber = "2");

		Form.gotoAddField(columnSize = "11", fieldType = "Text Field");

		Form.editFieldLabel(fieldValue = "five");

		FormFields.save();

		Form.addColumn(columnLineNumber = "7", rowNumber = "2");

		Form.gotoAddField(columnSize = "6", fieldType = "Text Field");

		Form.editFieldLabel(fieldValue = "six");

		FormFields.save();

		Form.save();

		Page.add(pageName = "Form Page");

		Navigator.gotoPage(pageName = "Form Page");

		Portlet.addPG(pageName = "Form Page", portletName = "Form");

		FormPortletNavigator.gotoSelectForm();

		FormPortletConfiguration.selectForm();

		PortletEntry.save();

		Navigator.gotoPage(pageName = "Form Page");

		for (var fieldName : list "one,two,three,four,five,six") {
			FormFields.editText(
				fieldName = "${fieldName}",
				fieldValue = "Field ${fieldName}"
			);
		}

		FormPortlet.submit();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Forms"
		);

		FormsAdminNavigator.gotoViewEntries();

		for (var fieldLabel : list "one,two,three,four,five") {
			FormsAdmin.viewFormTableEntry(
				fieldLabel = "${fieldLabel}",
				fieldValue = "Field ${fieldLabel}"
			);
		}
	}

	@priority = "4"
	test SubmitFormAndViewEmailNotification {
		property test.name.skip.portal.instance = "Forms#SubmitFormAndViewEmailNotification";
		property test.smtp.server.enabled = "true";

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Forms"
		);

		LexiconEntry.gotoAdd();

		Form.editName();

		Form.editDescription();

		Form.gotoAddField(fieldType = "Text Field");

		Form.editFieldLabel(fieldValue = "Text Field");

		FormFields.save();

		FormsAdminNavigator.gotoSettings();

		Form.configureEmailNotifications(
			fromAddress = "test@liferay.com",
			fromName = "Sender Name",
			subject = "Form Subject",
			toAddress = "formreviewer@liferay.com"
		);

		Form.save();

		Page.add(pageName = "Form Page");

		Navigator.gotoPage(pageName = "Form Page");

		Portlet.addPG(pageName = "Form Page", portletName = "Form");

		FormPortletNavigator.gotoSelectForm();

		FormPortletConfiguration.selectForm();

		PortletEntry.save();

		Navigator.gotoPage(pageName = "Form Page");

		FormFields.viewTextLabel(fieldLabel = "Text Field", fieldName = "TextField");

		FormFields.editText(fieldName = "TextField", fieldValue = "Text Field Value");

		FormPortlet.submitSuccessfully();

		MockMock.viewMail(
			asset = "Form Subject",
			content = "Text Field Value",
			recipient = "formreviewer@liferay.com",
			sender = "Sender Name",
			subject = "submitted an entry"
		);

		MockMock.clickBodyLink(
			asset = "Form Subject",
			bodyLink = "Click here to access the form"
		);

		SelectWindow.selectPopUp(locator1 = "null");

		FormsAdmin.viewTextEntry(
			fieldLabel = "Text Field",
			fieldName = "TextField",
			fieldValue = "Text Field Value"
		);
	}

	@description = "This is a use case for LPS-60818."
	@priority = "5"
	test SubmitFormContainingCaptchaAndViewTextFieldValue {
		property captcha.max.challenges = "0";
		property portal.acceptance = "true";

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Forms"
		);

		LexiconEntry.gotoAdd();

		Form.editName();

		Form.editDescription();

		Form.gotoAddField(fieldType = "Text Field");

		Form.editFieldLabel(fieldValue = "Text Field");

		FormFields.save();

		FormsAdminNavigator.gotoSettings();

		Form.configureRequireCaptcha();

		Form.save();

		Page.add(pageName = "Form Page");

		Navigator.gotoPage(pageName = "Form Page");

		Portlet.addPG(pageName = "Form Page", portletName = "Form");

		FormPortletNavigator.gotoSelectForm();

		FormPortletConfiguration.selectForm();

		PortletEntry.save();

		Navigator.gotoPage(pageName = "Form Page");

		FormFields.viewTextField(fieldLabel = "Text Field", fieldName = "TextField");

		FormFields.editText(fieldName = "TextField", fieldValue = "Text Field Value");

		FormFields.viewCaptchaField();

		FormFields.editCaptchaTextVerification(fieldValue = "1");

		FormPortlet.submitWithError(errorMessage = "Text verification failed.");

		FormFields.viewTextValue(
			fieldName = "TextField",
			fieldValue = "Text Field Value"
		);
	}

	@priority = "5"
	test SubmitFormWithAllFieldTypesAfterEditingFieldsAndExportImportLAR {
		property portal.acceptance = "true";
		property testray.component.names = "Training";

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Forms"
		);

		LexiconEntry.gotoAdd();

		Form.editName();

		Form.editDescription();

		Form.gotoAddField(fieldType = "Form Text");

		Form.editFieldLabel(fieldValue = "Paragraph");

		FormFields.editParagraphBody(fieldValue = "Paragraph body text.");

		FormFields.save();

		Form.gotoAddField(fieldType = "Text Field");

		Form.editFieldLabel(fieldValue = "Text");

		FormFields.save();

		Form.gotoAddField(fieldType = "Select from List");

		Form.editFieldLabel(fieldValue = "Select");

		FormFields.editOptionsRow(optionName = "Select1", optionValue = "Select 1");

		FormFields.editOptionsRow(
			optionName = "Select2",
			optionValue = "Select 2",
			rowNumber = "2"
		);

		FormFields.save();

		Form.gotoAddField(fieldType = "Single Selection");

		Form.editFieldLabel(fieldValue = "Radio");

		FormFields.editOptionsRow(optionName = "Option1", optionValue = "Option 1");

		FormFields.editOptionsRow(
			optionName = "Option2",
			optionValue = "Option 2",
			rowNumber = "2"
		);

		FormFields.save();

		Form.gotoAddField(fieldType = "Date");

		Form.editFieldLabel(fieldValue = "Date");

		FormFields.save();

		Form.gotoAddField(fieldType = "Single Checkbox");

		Form.editFieldLabel(fieldValue = "Checkbox");

		FormFields.save();

		Form.save();

		Page.add(pageName = "Form Page");

		Navigator.gotoPage(pageName = "Form Page");

		Portlet.addPG(pageName = "Form Page", portletName = "Form");

		FormPortletNavigator.gotoSelectForm();

		FormPortletConfiguration.selectForm();

		PortletEntry.save();

		Navigator.gotoPage(pageName = "Form Page");

		FormFields.viewParagraphField(
			fieldTitle = "Paragraph",
			fieldValue = "Paragraph body text."
		);

		FormFields.viewTextLabel(fieldLabel = "Text", fieldName = "Text");

		FormFields.viewSelectLabel(fieldLabel = "Select", fieldName = "Select");

		FormFields.selectSelectOption(fieldName = "Select", selectOption = "Select 1");

		FormFields.selectSelectOption(fieldName = "Select", selectOption = "Select 2");

		FormFields.viewRadioLabel(fieldLabel = "Radio", fieldName = "Radio");

		FormFields.selectRadioOption(fieldName = "Radio", radioOption = "Option 1");

		FormFields.selectRadioOption(fieldName = "Radio", radioOption = "Option 2");

		FormFields.viewDateLabel(fieldLabel = "Date", fieldName = "Date");

		FormFields.viewCheckboxLabel(fieldLabel = "Checkbox", fieldName = "Checkbox");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Forms"
		);

		LexiconEntry.gotoEntryMenuItem(
			menuItem = "Edit",
			rowEntry = "Created Form Name"
		);

		FormsAdminNavigator.gotoEditField(fieldName = "Paragraph");

		Form.editFieldLabel(fieldValue = "New Paragraph");

		FormFields.editParagraphBody(fieldValue = "New Paragraph body text.");

		FormFields.saveEdit();

		FormsAdminNavigator.gotoEditField(fieldName = "Text");

		Form.editFieldLabel(fieldValue = "New Text");

		FormFields.saveEdit();

		FormsAdminNavigator.gotoEditField(fieldName = "Select");

		Form.editFieldLabel(fieldValue = "New Select");

		FormFields.editOptionsRow(
			optionName = "NewSelect1",
			optionValue = "New Select 1"
		);

		FormFields.editOptionsRow(
			optionName = "NewSelect2",
			optionValue = "New Select 2",
			rowNumber = "2"
		);

		FormFields.saveEdit();

		FormsAdminNavigator.gotoEditField(fieldName = "Radio");

		Form.editFieldLabel(fieldValue = "New Radio");

		FormFields.editOptionsRow(
			optionName = "NewOption1",
			optionValue = "New Option 1"
		);

		FormFields.editOptionsRow(
			optionName = "NewOption2",
			optionValue = "New Option 2",
			rowNumber = "2"
		);

		FormFields.saveEdit();

		FormsAdminNavigator.gotoEditField(fieldName = "Date");

		Form.editFieldLabel(fieldValue = "New Date");

		FormFields.saveEdit();

		FormsAdminNavigator.gotoEditField(fieldName = "Checkbox");

		Form.editFieldLabel(fieldValue = "New Checkbox");

		FormFields.saveEdit();

		Form.save();

		Navigator.gotoPage(pageName = "Form Page");

		FormFields.viewParagraphField(
			fieldTitle = "New Paragraph",
			fieldValue = "New Paragraph body text."
		);

		FormFields.editText(fieldName = "NewText", fieldValue = "Text");

		FormFields.selectSelectOption(
			fieldName = "NewSelect",
			selectOption = "New Select 1"
		);

		FormFields.selectSelectOption(
			fieldName = "NewSelect",
			selectOption = "New Select 2"
		);

		FormFields.selectRadioOption(
			fieldName = "NewRadio",
			radioOption = "New Option 1"
		);

		FormFields.selectRadioOption(
			fieldName = "NewRadio",
			radioOption = "New Option 2"
		);

		FormFields.editDate(fieldName = "NewDate", fieldValue = "05/02/2016");

		FormFields.enableCheckbox(fieldName = "NewCheckbox");

		FormPortlet.submit();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Forms"
		);

		FormsAdminNavigator.gotoViewEntries();

		FormsAdminNavigator.gotoView();

		FormFields.viewParagraphField(
			fieldTitle = "New Paragraph",
			fieldValue = "New Paragraph body text."
		);

		FormsAdmin.viewTextEntry(
			fieldLabel = "New Text",
			fieldName = "NewText",
			fieldValue = "Text"
		);

		FormsAdmin.viewSelectEntry(
			fieldLabel = "New Select",
			fieldName = "NewSelect",
			selectOption = "New Select 2"
		);

		FormsAdmin.viewRadioEntry(
			fieldLabel = "New Radio",
			fieldName = "NewRadio",
			fieldValue = "New Option 1"
		);

		FormsAdmin.viewDateEntry(
			fieldLabel = "New Date",
			fieldName = "NewDate",
			fieldValue = "05/02/2016"
		);

		FormsAdmin.viewCheckboxEntry(
			fieldLabel = "New Checkbox",
			fieldName = "NewCheckbox"
		);

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Forms"
		);

		LAR.exportPortlet(larFileName = "FormsExport.lar");

		Pause(locator1 = "5000");

		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Sites"
		);

		Site.addBlankCP(siteName = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Sites"
		);

		Page.add(pageName = "Site Page Name", siteName = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Forms"
		);

		LAR.importPortlet(larFileName = "FormsExport.lar", siteName = "Site Name");

		Navigator.openSiteURL(siteName = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Forms"
		);

		FormsAdminNavigator.gotoViewEntries();

		FormsAdminNavigator.gotoView();

		FormFields.viewParagraphField(
			fieldTitle = "New Paragraph",
			fieldValue = "New Paragraph body text."
		);

		FormsAdmin.viewTextEntry(
			fieldLabel = "New Text",
			fieldName = "NewText",
			fieldValue = "Text"
		);

		FormsAdmin.viewSelectEntry(
			fieldLabel = "New Select",
			fieldName = "NewSelect",
			selectOption = "New Select 2"
		);

		FormsAdmin.viewRadioEntry(
			fieldLabel = "New Radio",
			fieldName = "NewRadio",
			fieldValue = "New Option 1"
		);

		FormsAdmin.viewDateEntry(
			fieldLabel = "New Date",
			fieldName = "NewDate",
			fieldValue = "05/02/2016"
		);

		FormsAdmin.viewCheckboxEntry(
			fieldLabel = "New Checkbox",
			fieldName = "NewCheckbox"
		);
	}

	@description = "This is a use case for LPS-64798."
	@priority = "5"
	test SubmitFormWithAllFieldTypesAndTwoPages {
		property portal.acceptance = "true";
		property testray.component.names = "Training";

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Forms"
		);

		LexiconEntry.gotoAdd();

		Form.editName();

		Form.editDescription();

		Form.editPageTitle(formPageName = "Page 1");

		Form.gotoAddField(fieldType = "Form Text");

		Form.editFieldLabel(fieldValue = "Paragraph");

		FormFields.editParagraphBody(fieldValue = "Paragraph body text.");

		FormFields.save();

		Form.gotoAddField(fieldType = "Text Field");

		Form.editFieldLabel(fieldValue = "SingleLineText");

		FormFields.save();

		Form.gotoAddField(fieldType = "Text Field");

		Form.editFieldLabel(fieldValue = "MultilineText");

		FormFields.selectTextFieldLineOption(textFieldLineOption = "multiline");

		FormFields.enableSwitcher(fieldName = "required");

		FormFields.save();

		Form.gotoAddField(fieldType = "Select from List");

		Form.editFieldLabel(fieldValue = "Select");

		FormFields.editOptionsRow(optionName = "Select1", optionValue = "Select 1");

		FormFields.editOptionsRow(
			optionName = "Select2",
			optionValue = "Select 2",
			rowNumber = "2"
		);

		FormFields.save();

		Form.gotoAddField(fieldType = "Single Selection");

		Form.editFieldLabel(fieldValue = "Radio");

		FormFields.enableSwitcher(fieldName = "required");

		FormFields.editOptionsRow(optionName = "Option1", optionValue = "Option 1");

		FormFields.editOptionsRow(
			optionName = "Option2",
			optionValue = "Option 2",
			rowNumber = "2"
		);

		FormFields.save();

		Form.gotoAddField(fieldType = "Date");

		Form.editFieldLabel(fieldValue = "Date");

		FormFields.save();

		Form.gotoAddField(fieldType = "Single Checkbox");

		Form.editFieldLabel(fieldValue = "Checkbox");

		FormFields.enableSwitcher(fieldName = "required");

		FormFields.save();

		Form.addPage();

		Form.editPageTitle(formPageName = "Page 2");

		Form.gotoAddField(fieldType = "Text Field");

		Form.editFieldLabel(fieldValue = "SingleLineText2");

		FormFields.save();

		Form.save();

		Page.add(pageName = "Form Page");

		Navigator.gotoPage(pageName = "Form Page");

		Portlet.addPG(pageName = "Form Page", portletName = "Form");

		FormPortletNavigator.gotoSelectForm();

		FormPortletConfiguration.selectForm();

		PortletEntry.save();

		Navigator.gotoPage(pageName = "Form Page");

		FormFields.viewParagraphField(
			fieldTitle = "Paragraph",
			fieldValue = "Paragraph body text."
		);

		FormFields.editText(
			fieldName = "SingleLineText",
			fieldValue = "Single Line Text"
		);

		FormFields.editTextMultiline(
			fieldName = "MultilineText",
			fieldValue = "Multiline Text"
		);

		FormFields.selectSelectOption(fieldName = "Select", selectOption = "Select 1");

		FormFields.selectRadioOption(fieldName = "Radio", radioOption = "Option 1");

		FormFields.editDate(fieldName = "Date", fieldValue = "05/02/2016");

		FormFields.enableCheckbox(fieldName = "Checkbox");

		FormPortlet.nextPage(formPageCurrent = "Page 1", formPageNext = "Page 2");

		FormFields.editText(
			fieldName = "SingleLineText2",
			fieldValue = "SingleLineText2"
		);

		FormPortlet.submit();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Forms"
		);

		FormsAdminNavigator.gotoViewEntries();

		FormsAdminNavigator.gotoView();

		FormFields.viewParagraphField(
			fieldTitle = "Paragraph",
			fieldValue = "Paragraph body text."
		);

		FormsAdmin.viewTextEntry(
			fieldLabel = "SingleLineText",
			fieldName = "SingleLineText",
			fieldValue = "Single Line Text"
		);

		FormsAdmin.viewMultilineTextEntry(
			fieldLabel = "MultilineText",
			fieldName = "MultilineText",
			fieldValue = "Multiline Text"
		);

		FormsAdmin.viewSelectEntry(
			fieldLabel = "Select",
			fieldName = "Select",
			selectOption = "Select 1"
		);

		FormsAdmin.viewRadioEntry(
			fieldLabel = "Radio",
			fieldName = "Radio",
			fieldValue = "Option 1"
		);

		FormsAdmin.viewDateEntry(
			fieldLabel = "Date",
			fieldName = "Date",
			fieldValue = "05/02/2016"
		);

		FormsAdmin.viewCheckboxEntry(fieldLabel = "Checkbox", fieldName = "Checkbox");

		FormPortlet.nextPage(formPageCurrent = "Page 1", formPageNext = "Page 2");

		FormsAdmin.viewTextEntry(
			fieldLabel = "SingleLineText2",
			fieldName = "SingleLineText2",
			fieldValue = "SingleLineText2"
		);
	}

	@priority = "5"
	test SubmitFormWithCustomTextContainingValidation {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Forms"
		);

		LexiconEntry.gotoAdd();

		Form.editName();

		Form.editDescription();

		Form.gotoAddField(fieldType = "Text Field");

		Form.editFieldLabel(fieldValue = "Text");

		FormFields.enableAdvancedOptions();

		FormFields.enableSwitcher(fieldName = "validation");

		FormFields.editValidation(
			validationArgument = "Contains",
			validationErrorMessage = "Text must contain &quot;Test&quot;",
			validationInput = "Test",
			validationType = "Text"
		);

		FormFields.save();

		Form.save();

		Page.add(pageName = "Form Page");

		Navigator.gotoPage(pageName = "Form Page");

		Portlet.addPG(pageName = "Form Page", portletName = "Form");

		FormPortletNavigator.gotoSelectForm();

		FormPortletConfiguration.selectForm();

		PortletEntry.save();

		Navigator.gotoPage(pageName = "Form Page");

		FormFields.viewTextLabel(fieldLabel = "Text", fieldName = "Text");

		FormFields.editText(fieldName = "Text", fieldValue = "Text Field Value");

		FormPortlet.submitWithValidationError(
			validationErrorMessage = "Text must contain &quot;Test&quot;"
		);

		FormFields.editText(fieldName = "Text", fieldValue = "Test");

		FormPortlet.submit();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Forms"
		);

		FormsAdmin.viewForm();

		FormsAdminNavigator.gotoViewEntries();

		FormsAdmin.viewFormTableEntry(fieldLabel = "Text", fieldValue = "Test");
	}

	@priority = "4"
	test SubmitFormWithMultipleFieldsAndViewEntriesViaDescriptiveDisplay {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Forms"
		);

		LexiconEntry.gotoAdd();

		Form.editName();

		Form.editDescription();

		Form.gotoAddField(fieldType = "Text Field");

		Form.editFieldLabel(fieldValue = "Text Field");

		FormFields.save();

		Form.gotoAddField(fieldType = "Single Checkbox");

		Form.editFieldLabel(fieldValue = "Checkbox Field");

		FormFields.save();

		Form.gotoAddField(fieldType = "Single Selection");

		Form.editFieldLabel(fieldValue = "Radio Field");

		FormFields.editOptionsRow(optionName = "Option1", optionValue = "Option 1");

		FormFields.editOptionsRow(
			optionName = "Option2",
			optionValue = "Option 2",
			rowNumber = "2"
		);

		FormFields.save();

		Form.gotoAddField(fieldType = "Select from List");

		Form.editFieldLabel(fieldValue = "Select Field");

		FormFields.editOptionsRow(optionName = "Select1", optionValue = "Select 1");

		FormFields.editOptionsRow(
			optionName = "Select2",
			optionValue = "Select 2",
			rowNumber = "2"
		);

		FormFields.save();

		Form.save();

		Page.add(pageName = "Form Page");

		Navigator.gotoPage(pageName = "Form Page");

		Portlet.addPG(pageName = "Form Page", portletName = "Form");

		FormPortletNavigator.gotoSelectForm();

		FormPortletConfiguration.selectForm();

		PortletEntry.save();

		Navigator.gotoPage(pageName = "Form Page");

		FormFields.viewTextLabel(fieldLabel = "Text Field", fieldName = "TextField");

		FormFields.editText(fieldName = "TextField", fieldValue = "Text Field Value");

		FormFields.viewCheckboxLabel(
			fieldLabel = "Checkbox Field",
			fieldName = "CheckboxField"
		);

		FormFields.enableCheckbox(fieldName = "CheckboxField");

		FormFields.viewRadioLabel(fieldLabel = "Radio Field", fieldName = "RadioField");

		FormFields.selectRadioOption(fieldName = "RadioField", radioOption = "Option 1");

		FormFields.viewSelectLabel(
			fieldLabel = "Select Field",
			fieldName = "SelectField"
		);

		FormFields.selectSelectOption(
			fieldName = "SelectField",
			selectOption = "Select 2"
		);

		FormPortlet.submit();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Forms"
		);

		Portlet.changeDisplayStyle(displayStyle = "Descriptive");

		FormsAdminNavigator.gotoViewEntries();

		FormsAdmin.viewFormTableEntry(
			fieldLabel = "Text Field",
			fieldValue = "Text Field Value"
		);

		FormsAdmin.viewFormTableEntry(fieldLabel = "Checkbox Field", fieldValue = "Yes");

		FormsAdmin.viewFormTableEntry(
			fieldLabel = "Radio Field",
			fieldValue = "Option 1"
		);

		FormsAdmin.viewFormTableEntry(
			fieldLabel = "Select Field",
			fieldValue = "Select 2"
		);

		FormsAdminNavigator.gotoView();

		FormsAdmin.viewTextEntry(
			fieldLabel = "Text Field",
			fieldName = "TextField",
			fieldValue = "Text Field Value"
		);

		FormsAdmin.viewCheckboxEntry(
			fieldLabel = "Checkbox Field",
			fieldName = "CheckboxField"
		);

		FormsAdmin.viewRadioEntry(
			fieldLabel = "Radio Field",
			fieldName = "RadioField",
			fieldValue = "Option 1"
		);

		FormsAdmin.viewSelectEntry(
			fieldLabel = "Select Field",
			fieldName = "SelectField",
			fieldValue = "Select 2"
		);
	}

	@priority = "4"
	test SubmitFormWithMultipleSelectField {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Forms"
		);

		LexiconEntry.gotoAdd();

		Form.editName();

		Form.gotoAddField(fieldType = "Multiple Selection");

		Form.editFieldLabel(fieldValue = "Multiple Selection");

		for (var number : list "1,2,3,4") {
			FormFields.editOptionsRow(
				optionName = "${number}",
				optionValue = "${number}",
				rowNumber = "${number}"
			);
		}

		FormFields.save();

		Form.save();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Forms"
		);

		FormsAdminNavigator.gotoEditFormByName();

		FormsAdminNavigator.gotoPublish();

		Form.clickPublishSwitcher();

		Button.clickConfirm();

		Form.viewFormPublish(
			fieldLabel = "Multiple Selection",
			fieldName = "MultipleSelection"
		);

		for (var checkboxOption : list "1,2,4") {
			FormFields.selectCheckboxOption(
				checkboxOption = "${checkboxOption}",
				fieldName = "MultipleSelection"
			);
		}

		FormPortlet.clickSubmit();

		WaitForSPARefresh();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Forms"
		);

		FormsAdminNavigator.gotoViewEntries();

		for (var fieldValue : list "1,2,4") {
			FormsAdmin.viewFormTableEntry(
				fieldLabel = "Multiple Selection",
				fieldValue = "${fieldValue}"
			);
		}

		FormsAdmin.viewFormTableEntryNotPresent(
			fieldLabel = "Multiple Selection",
			fieldValue = "3"
		);
	}

	@description = "This is a use case for LPS-61450 and LPS-61252."
	@priority = "4"
	test SubmitFormWithParagraphField {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Forms"
		);

		LexiconEntry.gotoAdd();

		Form.editName();

		Form.editDescription();

		Form.gotoAddField(fieldType = "Form Text");

		Form.editFieldLabel(fieldValue = "Paragraph Field");

		FormFields.editParagraphBody(fieldValue = "Paragraph field body text.");

		FormFields.save();

		Form.save();

		Page.add(pageName = "Form Page");

		Portlet.addPG(pageName = "Form Page", portletName = "Form");

		FormPortletNavigator.gotoSelectForm();

		FormPortletConfiguration.selectForm();

		PortletEntry.save();

		Navigator.gotoPage(pageName = "Form Page");

		FormFields.viewParagraphField(
			fieldTitle = "Paragraph Field",
			fieldValue = "Paragraph field body text."
		);

		FormPortlet.submit();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Forms"
		);

		FormsAdminNavigator.gotoViewEntries();

		FormsAdmin.viewFormTableEntry(fieldLabel = "Status", fieldValue = "Approved");

		FormsAdminNavigator.gotoView();

		FormsAdmin.viewParagraphEntry(
			fieldTitle = "Paragraph Field",
			fieldValue = "Paragraph field body text."
		);
	}

	@description = "This is a use case for LPS-59338."
	@priority = "4"
	test SubmitFormWithRequiredCheckboxField {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Forms"
		);

		LexiconEntry.gotoAdd();

		Form.editName();

		Form.editDescription();

		Form.gotoAddField(fieldType = "Single Checkbox");

		Form.editFieldLabel(fieldValue = "Checkbox Field");

		FormFields.enableSwitcher(fieldName = "required");

		FormFields.save();

		Form.save();

		Page.add(pageName = "Form Page");

		Navigator.gotoPage(pageName = "Form Page");

		Portlet.addPG(pageName = "Form Page", portletName = "Form");

		FormPortletNavigator.gotoSelectForm();

		FormPortletConfiguration.selectForm();

		PortletEntry.save();

		Navigator.gotoPage(pageName = "Form Page");

		FormFields.viewCheckboxLabel(
			fieldLabel = "Checkbox Field",
			fieldName = "CheckboxField"
		);

		FormFields.viewRequiredAsterisk();

		FormPortlet.submitWithValidationError();

		FormFields.enableCheckbox(fieldName = "CheckboxField");

		FormPortlet.submit();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Forms"
		);

		FormsAdminNavigator.gotoViewEntries();

		FormsAdmin.viewFormTableEntry(fieldLabel = "Checkbox Field", fieldValue = "Yes");
	}

	@description = "This is a use case for LPS-59997."
	@priority = "3"
	test SubmitFormWithRequiredMultiLineTextField {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Forms"
		);

		LexiconEntry.gotoAdd();

		Form.editName();

		Form.editDescription();

		Form.gotoAddField(fieldType = "Text Field");

		Form.editFieldLabel(fieldValue = "Text Field");

		FormFields.selectTextFieldLineOption(textFieldLineOption = "multiline");

		FormFields.enableSwitcher(fieldName = "required");

		FormFields.save();

		Form.save();

		Page.add(pageName = "Form Page");

		Navigator.gotoPage(pageName = "Form Page");

		Portlet.addPG(pageName = "Form Page", portletName = "Form");

		FormPortletNavigator.gotoSelectForm();

		FormPortletConfiguration.selectForm();

		PortletEntry.save();

		Navigator.gotoPage(pageName = "Form Page");

		FormFields.viewTextLabel(fieldLabel = "Text Field", fieldName = "TextField");

		FormFields.viewRequiredAsterisk();

		FormFields.editBlankMultiTextFieldWithEnterKey(fieldName = "TextField");

		FormPortlet.submitWithValidationError();

		FormFields.editTextMultiline(
			fieldName = "TextField",
			fieldValue = "Text Field Value"
		);

		FormPortlet.submit();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Forms"
		);

		FormsAdminNavigator.gotoViewEntries();

		FormsAdmin.viewFormTableEntry(
			fieldLabel = "Text Field",
			fieldValue = "Text Field Value"
		);
	}

	@priority = "4"
	test SubmitFormWithRequiredRadioField {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Forms"
		);

		LexiconEntry.gotoAdd();

		Form.editName();

		Form.editDescription();

		Form.gotoAddField(fieldType = "Single Selection");

		Form.editFieldLabel(fieldValue = "Radio Field");

		FormFields.enableSwitcher(fieldName = "required");

		FormFields.enableAdvancedOptions();

		FormFields.editOptionsRow(optionName = "Option1", optionValue = "Option 1");

		FormFields.editOptionsRow(
			optionName = "Option2",
			optionValue = "Option 2",
			rowNumber = "2"
		);

		FormFields.save();

		Form.save();

		Page.add(pageName = "Form Page");

		Navigator.gotoPage(pageName = "Form Page");

		Portlet.addPG(pageName = "Form Page", portletName = "Form");

		FormPortletNavigator.gotoSelectForm();

		FormPortletConfiguration.selectForm();

		PortletEntry.save();

		Navigator.gotoPage(pageName = "Form Page");

		FormFields.viewRadioLabel(fieldLabel = "Radio Field", fieldName = "RadioField");

		FormFields.viewRequiredAsterisk();

		FormPortlet.submitWithValidationError();

		FormFields.selectRadioOption(fieldName = "RadioField", radioOption = "Option 1");

		FormPortlet.submit();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Forms"
		);

		FormsAdminNavigator.gotoViewEntries();

		FormsAdmin.viewFormTableEntry(
			fieldLabel = "Radio Field",
			fieldValue = "Option 1"
		);
	}

	@description = "This is a use case for LPS-59335."
	@priority = "5"
	test SubmitFormWithRequiredRepeatingTextField {
		property portal.acceptance = "true";

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Forms"
		);

		LexiconEntry.gotoAdd();

		Form.editName();

		Form.editDescription();

		Form.gotoAddField(fieldType = "Text Field");

		Form.editFieldLabel(fieldValue = "Text Field");

		FormFields.enableSwitcher(fieldName = "required");

		FormFields.enableAdvancedOptions();

		FormFields.enableSwitcher(fieldName = "repeatable");

		FormFields.save();

		Form.save();

		Page.add(pageName = "Form Page");

		Navigator.gotoPage(pageName = "Form Page");

		Portlet.addPG(pageName = "Form Page", portletName = "Form");

		FormPortletNavigator.gotoSelectForm();

		FormPortletConfiguration.selectForm();

		PortletEntry.save();

		Navigator.gotoPage(pageName = "Form Page");

		FormFields.addRepeatableField(
			fieldName = "TextField",
			repeatableFieldNumber = "1"
		);

		FormFields.editRepeatingText(
			fieldName = "TextField",
			fieldValue = "Text Field Value",
			fieldValueRepeat = "Text Field Value Repeat"
		);

		FormPortlet.submitSuccessfully();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Forms"
		);

		FormsAdminNavigator.gotoViewEntries();

		FormsAdmin.viewFormTableEntry(
			fieldLabel = "Text",
			fieldValue = "Text Field Value, Text Field Value Repeat"
		);
	}

	@description = "This is a use case for LPS-58829."
	@priority = "5"
	test SubmitFormWithRequiredTextField {
		property portal.acceptance = "true";
		property testray.component.names = "Training";

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Forms"
		);

		LexiconEntry.gotoAdd();

		Form.editName();

		Form.editDescription();

		Form.gotoAddField(fieldType = "Text Field");

		Form.editFieldLabel(fieldValue = "Text Field");

		FormFields.enableSwitcher(fieldName = "required");

		FormFields.save();

		Form.save();

		Page.add(pageName = "Form Page");

		Navigator.gotoPage(pageName = "Form Page");

		Portlet.addPG(pageName = "Form Page", portletName = "Form");

		FormPortletNavigator.gotoSelectForm();

		FormPortletConfiguration.selectForm();

		PortletEntry.save();

		Navigator.gotoPage(pageName = "Form Page");

		FormFields.viewTextLabel(fieldLabel = "Text Field", fieldName = "TextField");

		FormFields.viewRequiredAsterisk();

		FormPortlet.submitWithValidationError();

		FormFields.editText(fieldName = "TextField", fieldValue = "Text Field Value");

		FormPortlet.submit();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Forms"
		);

		FormsAdminNavigator.gotoViewEntries();

		FormsAdmin.viewFormTableEntry(
			fieldLabel = "Text Field",
			fieldValue = "Text Field Value"
		);
	}

	@description = "This is a use case for LPS-59351."
	@priority = "4"
	test SubmitFormWithSwitcherCheckboxField {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Forms"
		);

		LexiconEntry.gotoAdd();

		Form.editName();

		Form.editDescription();

		Form.gotoAddField(fieldType = "Single Checkbox");

		Form.editFieldLabel(fieldValue = "Checkbox Field");

		FormFields.enableSwitcher(fieldName = "showAsSwitcher");

		FormFields.save();

		Form.save();

		Page.add(pageName = "Form Page");

		Navigator.gotoPage(pageName = "Form Page");

		Portlet.addPG(pageName = "Form Page", portletName = "Form");

		FormPortletNavigator.gotoSelectForm();

		FormPortletConfiguration.selectForm();

		PortletEntry.save();

		Navigator.gotoPage(pageName = "Form Page");

		FormFields.viewSwitcherLabel(
			fieldLabel = "Checkbox Field",
			fieldName = "CheckboxField"
		);

		FormFields.enableSwitcher(fieldName = "CheckboxField");

		FormPortlet.clickSubmit();

		Alert.viewSuccessMessage();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Forms"
		);

		FormsAdminNavigator.gotoViewEntries();

		FormsAdmin.viewFormTableEntry(fieldLabel = "Checkbox Field", fieldValue = "Yes");

		FormsAdminNavigator.gotoView();

		FormsAdmin.viewCheckboxEntry(
			fieldLabel = "Checkbox Field",
			fieldName = "CheckboxField"
		);
	}

	@priority = "4"
	test SubmitFormWithTextField {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Forms"
		);

		LexiconEntry.gotoAdd();

		Form.editName();

		Form.editDescription();

		Form.gotoAddField(fieldType = "Text Field");

		Form.editFieldLabel(fieldValue = "Text Field");

		FormFields.save();

		Form.save();

		Page.add(pageName = "Form Page");

		Navigator.gotoPage(pageName = "Form Page");

		Portlet.addPG(pageName = "Form Page", portletName = "Form");

		FormPortletNavigator.gotoSelectForm();

		FormPortletConfiguration.selectForm();

		PortletEntry.save();

		Navigator.gotoPage(pageName = "Form Page");

		FormFields.viewTextLabel(fieldLabel = "Text Field", fieldName = "TextField");

		FormFields.editText(fieldName = "TextField", fieldValue = "Text Field Value");

		FormPortlet.submit();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Forms"
		);

		FormsAdminNavigator.gotoViewEntries();

		FormsAdmin.viewFormTableEntry(
			fieldLabel = "Text Field",
			fieldValue = "Text Field Value"
		);

		FormsAdminNavigator.gotoView();

		FormsAdmin.viewTextEntry(
			fieldLabel = "Text Field",
			fieldName = "TextField",
			fieldValue = "Text Field Value"
		);
	}

	@priority = "5"
	test SubmitFormWithThreePages {
		property portal.acceptance = "true";

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Forms"
		);

		LexiconEntry.gotoAdd();

		Form.editName();

		Form.editDescription();

		Form.editPageTitle(formPageName = "Page 1");

		Form.gotoAddField(fieldType = "Text Field");

		Form.editFieldLabel(fieldValue = "Text");

		FormFields.save();

		Form.addPage();

		Form.editPageTitle(formPageName = "Page 2");

		Form.gotoAddField(fieldType = "Single Selection");

		FormFields.editText(fieldName = "label", fieldValue = "Radio");

		FormFields.viewFieldName(fieldName = "Radio");

		FormFields.editOptionsRow(optionName = "Option1", optionValue = "Option 1");

		FormFields.editOptionsRow(
			optionName = "Option2",
			optionValue = "Option 2",
			rowNumber = "2"
		);

		FormFields.save();

		Form.addPage();

		Form.editPageTitle(formPageName = "Page 3");

		Form.gotoAddField(fieldType = "Single Checkbox");

		Form.editFieldLabel(fieldValue = "Checkbox");

		FormFields.save();

		Form.save();

		Page.add(pageName = "Form Page");

		Navigator.gotoPage(pageName = "Form Page");

		Portlet.addPG(pageName = "Form Page", portletName = "Form");

		FormPortletNavigator.gotoSelectForm();

		FormPortletConfiguration.selectForm();

		PortletEntry.save();

		Navigator.gotoPage(pageName = "Form Page");

		FormFields.viewTextLabel(fieldLabel = "Text", fieldName = "Text");

		FormFields.editText(fieldName = "Text", fieldValue = "Text Field Value");

		FormPortlet.nextPage(formPageCurrent = "Page 1", formPageNext = "Page 2");

		FormFields.viewRadioLabel(fieldLabel = "Radio", fieldName = "Radio");

		FormFields.selectRadioOption(fieldName = "Radio", radioOption = "Option 2");

		FormPortlet.nextPage(formPageCurrent = "Page 2", formPageNext = "Page 3");

		FormFields.viewCheckboxLabel(fieldLabel = "Checkbox", fieldName = "Checkbox");

		FormFields.enableCheckbox(fieldName = "Checkbox");

		FormPortlet.submit();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Forms"
		);

		FormsAdminNavigator.gotoViewEntries();

		FormsAdmin.viewFormTableEntry(
			fieldLabel = "Text",
			fieldValue = "Text Field Value"
		);

		FormsAdmin.viewFormTableEntry(fieldLabel = "Radio", fieldValue = "Option 2");

		FormsAdmin.viewFormTableEntry(fieldLabel = "Checkbox", fieldValue = "Yes");
	}

	@description = "This is a use case for LPS-64305."
	@priority = "4"
	test ViewDefaultFieldNamesWithPunctuationCharacters {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Forms"
		);

		LexiconEntry.gotoAdd();

		Form.editName();

		Form.editDescription();

		Form.gotoAddField(fieldType = "Text Field");

		FormFields.editText(
			fieldName = "label",
			fieldValue = ",.?/;:{}[]\|-+!@#$%^*()=_"
		);

		FormFields.viewFieldName(fieldName = "text");

		FormFields.editFieldName(fieldValue = ",.?/;:{}[]\|-+!@#$%^*()=_");

		FormFields.viewFieldName(fieldName = "text");

		FormFields.save();

		Form.gotoAddField(fieldType = "Text Field");

		FormFields.editText(fieldName = "label", fieldValue = "Jump, She exclaimed!");

		FormFields.viewFieldName(fieldName = "JumpSheExclaimed");

		FormFields.editFieldName(fieldValue = "Jump, She exclaimed!");

		FormFields.viewFieldName(fieldName = "JumpSheExclaimed");

		FormFields.save();

		Form.save();

		Page.add(pageName = "Form Page");

		Navigator.gotoPage(pageName = "Form Page");

		Portlet.addPG(pageName = "Form Page", portletName = "Form");

		FormPortletNavigator.gotoSelectForm();

		FormPortletConfiguration.selectForm();

		PortletEntry.save();

		Navigator.gotoPage(pageName = "Form Page");

		FormFields.viewTextField(
			fieldLabel = ",.?/;:{}[]\|-+!@#$%^*()=_",
			fieldName = "text"
		);

		FormFields.viewTextField(
			fieldLabel = "Jump, She exclaimed!",
			fieldName = "JumpSheExclaimed"
		);

		FormFields.editText(fieldName = "text", fieldValue = "1,2,3.");

		FormFields.editText(
			fieldName = "JumpSheExclaimed",
			fieldValue = ",.?/;:{}[]\|-+!@#$%^*()=_"
		);

		FormPortlet.submitSuccessfully();
	}

	@priority = "4"
	test ViewRepeatableTextFieldLabel {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Forms"
		);

		LexiconEntry.gotoAdd();

		Form.editName();

		Form.editDescription();

		Form.gotoAddField(fieldType = "Text Field");

		Form.editFieldLabel(fieldValue = "Text Field");

		FormFields.enableAdvancedOptions();

		FormFields.enableSwitcher(fieldName = "repeatable");

		FormFields.save();

		Form.save();

		Page.add(pageName = "Form Page");

		Navigator.gotoPage(pageName = "Form Page");

		Portlet.addPG(pageName = "Form Page", portletName = "Form");

		FormPortletNavigator.gotoSelectForm();

		FormPortletConfiguration.selectForm();

		PortletEntry.save();

		Navigator.gotoPage(pageName = "Form Page");

		FormFields.addRepeatableField(
			fieldName = "TextField",
			repeatableFieldNumber = "1"
		);

		FormFields.viewRepeatableTextFieldLabel(
			fieldLabel = "Text Field",
			fieldName = "TextField"
		);
	}

	@description = "This is a use case for LPS-59604."
	@priority = "3"
	test ViewTextFieldWithConditionalVisibility {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Forms"
		);

		LexiconEntry.gotoAdd();

		Form.editName();

		Form.editDescription();

		Form.gotoAddField(fieldType = "Text Field");

		Form.editFieldLabel(fieldValue = "Visible Field");

		FormFields.save();

		Form.gotoAddField(fieldType = "Text Field");

		Form.editFieldLabel(fieldValue = "Hidden Field");

		FormFields.enableAdvancedOptions();

		FormFields.editText(
			fieldName = "visibility",
			fieldValue = "equals(VisibleField, &quot;test&quot;)"
		);

		FormFields.save();

		Form.save();

		Page.add(pageName = "Form Page");

		Portlet.addPG(pageName = "Form Page", portletName = "Form");

		FormPortletNavigator.gotoSelectForm();

		FormPortletConfiguration.selectForm();

		PortletEntry.save();

		Navigator.gotoPage(pageName = "Form Page");

		FormFields.editText(fieldName = "VisibleField", fieldValue = "quality test");

		FormPortletNavigator.clickFormContent();

		FormFields.viewTextFieldNotVisible(
			fieldLabel = "Hidden Field",
			fieldName = "HiddenField"
		);

		FormFields.editText(fieldName = "VisibleField", fieldValue = "test");

		FormPortletNavigator.clickFormContent();

		FormFields.viewTextField(fieldLabel = "Hidden Field", fieldName = "HiddenField");
	}
}