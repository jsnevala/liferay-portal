@component-name = "portal-security"
definition {
	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Authentication";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			PortalSettings.tearDownAuthenticationCP();

			Page.tearDownPG();
		}
	}

	@priority = "5"
	test TestLDAPConnectionAndEntries {
		property apacheds.enabled = "true";
		property portal.acceptance = "true";
		property test.name.skip.portal.instance = "Authentication#TestLDAPConnectionAndEntries";

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Control Panel",
			portlet = "Instance Settings"
		);

		PortalSettingsNavigator.gotoLDAP();

		PortalSettings.addLDAPServer(LDAPServerName = "ApacheDS Server");

		PortalSettingsNavigator.gotoLDAP();

		PortalSettings.editLDAPServer(LDAPServerName = "ApacheDS Server");

		PortalSettings.testLDAPConnection();
	}

	@priority = "3"
	test ViewAuthenticationCAS {
		property test.name.skip.portal.instance = "Authentication#ViewAuthenticationCAS";

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Control Panel",
			portlet = "Instance Settings"
		);

		PortalSettings.viewAuthenticationCASCP();
	}

	@priority = "3"
	test ViewAuthenticationGeneral {
		property test.name.skip.portal.instance = "Authentication#ViewAuthenticationGeneral";

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Control Panel",
			portlet = "Instance Settings"
		);

		PortalSettings.viewAuthenticationGeneralCP();
	}

	@priority = "5"
	test ViewAuthenticationLDAP {
		property test.name.skip.portal.instance = "Authentication#ViewAuthenticationLDAP";
		property testray.component.names = "Training";

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Control Panel",
			portlet = "Instance Settings"
		);

		PortalSettings.viewAuthenticationLDAPCP();
	}

	@priority = "3"
	test ViewAuthenticationNTLM {
		property test.name.skip.portal.instance = "Authentication#ViewAuthenticationNTLM";

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Control Panel",
			portlet = "Instance Settings"
		);

		PortalSettings.viewAuthenticationNTLMCP();
	}

	@priority = "3"
	test ViewAuthenticationOpenID {
		property test.name.skip.portal.instance = "Authentication#ViewAuthenticationOpenID";

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Control Panel",
			portlet = "Instance Settings"
		);

		PortalSettings.viewAuthenticationOpenIDCP();
	}

	@priority = "3"
	test ViewAuthenticationOpenSSO {
		property test.name.skip.portal.instance = "Authentication#ViewAuthenticationOpenSSO";

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Control Panel",
			portlet = "Instance Settings"
		);

		PortalSettings.viewAuthenticationOpenSSOCP();
	}

	@priority = "3"
	test ViewInstanceSettingEnableLDAPAuthNotAffectSystemSetting {
		property test.name.skip.portal.instance = "Authentication#ViewInstanceSettingEnableLDAPAuthNotAffectSystemSetting";

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Control Panel",
			portlet = "System Settings"
		);

		SystemSettings.gotoCategory(category = "Foundation");

		SystemSettings.viewConfiguration(configurationName = "LDAP Auth");

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Control Panel",
			portlet = "Instance Settings"
		);

		PortalSettingsNavigator.gotoLDAP();

		PortalSettings.enableLDAPSetting(enableCheckboxKey = "ENABLED");

		PortalSettings.enableLDAPSetting(enableCheckboxKey = "ENABLED");

		PortalSettingsNavigator.gotoLDAP();

		PortalSettings.viewEnabledLDAPSetting(enableCheckboxKey = "ENABLED");

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Control Panel",
			portlet = "System Settings"
		);

		SystemSettings.gotoCategory(category = "Foundation");

		SystemSettings.viewConfiguration(configurationName = "LDAP Auth");
	}
}