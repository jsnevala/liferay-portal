@component-name = "portal-security"
definition {
	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Authentication";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			PortalSettings.tearDownAuthenticationCP();

			Page.tearDownPG();
		}
	}

	@description = "This is a use case for LPS-65498."
	@priority = "3"
	test ImportLDAPUserWithBlankPassword {
		property apacheds.blank.user.password.enabled = "true";
		property apacheds.enabled = "true";
		property test.name.skip.portal.instance = "AuthenticationUsecase#ImportLDAPUserWithBlankPassword";

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Control Panel",
			portlet = "Server Administration"
		);

		ServerAdministration.executeServerResourcesActions(
			actionsDescription = "Reindex all search indexes."
		);

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Control Panel",
			portlet = "Instance Settings"
		);

		PortalSettingsNavigator.gotoLDAP();

		PortalSettings.enableLDAPSetting(enableCheckboxKey = "ENABLED");

		PortalSettings.addLDAPServer(LDAPServerName = "ApacheDS Server");

		PortalSettingsNavigator.gotoLDAP();

		PortalSettings.editLDAPServer(LDAPServerName = "ApacheDS Server");

		PortalSettings.testLDAPConnection();

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Control Panel",
			portlet = "Instance Settings"
		);

		PortalSettingsNavigator.gotoLDAP();

		for (var enableCheckboxKey : list "ENABLED,IMPORT_ENABLED,IMPORT_ON_STARTUP_ENABLED,USE_LDAP_PASSWORD_POLICY") {
			PortalSettingsNavigator.gotoLDAP();

			PortalSettings.enableLDAPSetting(enableCheckboxKey = "${enableCheckboxKey}");

			PortalSettingsNavigator.gotoLDAP();

			PortalSettings.viewEnabledLDAPSetting(
				enableCheckboxKey = "${enableCheckboxKey}"
			);
		}

		AssertConsoleTextNotPresent(value1 = "Unable to encrypt blank password");

		Portlet.shutdownServer();

		Portlet.startServer(deleteLiferayHome = "false");

		User.firstLoginPG();

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Control Panel",
			portlet = "Server Administration"
		);

		ServerAdministration.executeServerResourcesActions(
			actionsDescription = "Reindex all search indexes."
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		if (IsElementNotPresent(locator1 = "UsersAndOrganizations#USER_TABLE_SCREEN_NAME_LINK", key_userScreenName = "ldapusercn")) {
			ProductMenu.gotoPortlet(
				category = "Configuration",
				panel = "Control Panel",
				portlet = "Instance Settings"
			);

			PortalSettings.disableLDAPCP();

			ProductMenu.gotoPortlet(
				category = "Configuration",
				panel = "Control Panel",
				portlet = "Instance Settings"
			);

			PortalSettingsNavigator.gotoLDAP();

			PortalSettings.enableLDAPSetting(enableCheckboxKey = "ENABLED");

			PortalSettings.editLDAPServer(LDAPServerName = "ApacheDS Server");

			PortalSettings.testLDAPConnection();

			ProductMenu.gotoPortlet(
				category = "Configuration",
				panel = "Control Panel",
				portlet = "Instance Settings"
			);

			PortalSettingsNavigator.gotoLDAP();

			for (var enableCheckboxKey : list "ENABLED,IMPORT_ENABLED,IMPORT_ON_STARTUP_ENABLED,USE_LDAP_PASSWORD_POLICY") {
				PortalSettingsNavigator.gotoLDAP();

				PortalSettings.enableLDAPSetting(enableCheckboxKey = "${enableCheckboxKey}");

				PortalSettingsNavigator.gotoLDAP();

				PortalSettings.viewEnabledLDAPSetting(
					enableCheckboxKey = "${enableCheckboxKey}"
				);
			}

			AssertConsoleTextNotPresent(value1 = "Unable to encrypt blank password");

			Portlet.shutdownServer();

			Portlet.startServer(deleteLiferayHome = "false");

			User.firstLoginPG();

			ProductMenu.gotoPortlet(
				category = "Configuration",
				panel = "Control Panel",
				portlet = "Server Administration"
			);

			ServerAdministration.executeServerResourcesActions(
				actionsDescription = "Reindex all search indexes."
			);

			ProductMenu.gotoPortlet(
				category = "Users",
				panel = "Control Panel",
				portlet = "Users and Organizations"
			);
		}

		User.viewCP(
			userEmailAddress = "ldapuseremail@liferay.com",
			userFirstName = "ldapusergivenname",
			userLastName = "ldapusersn",
			userScreenName = "ldapusercn"
		);

		AssertConsoleTextNotPresent(value1 = "Unable to encrypt blank password");
	}

	@description = "This is a use case for LPS-30529 and LPS-77948."
	@priority = "4"
	test ResetFieldsValueForImportedLDAPUser {
		property apacheds.enabled = "true";
		property test.name.skip.portal.instance = "AuthenticationUsecase#ResetFieldsValueForImportedLDAPUser";

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Control Panel",
			portlet = "Server Administration"
		);

		ServerAdministration.executeServerResourcesActions(
			actionsDescription = "Reindex all search indexes."
		);

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Control Panel",
			portlet = "Instance Settings"
		);

		PortalSettingsNavigator.gotoLDAP();

		PortalSettings.addLDAPServer(LDAPServerName = "ApacheDS Server");

		PortalSettingsNavigator.gotoLDAP();

		PortalSettings.editLDAPServer(LDAPServerName = "ApacheDS Server");

		PortalSettings.testLDAPConnection();

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Control Panel",
			portlet = "Instance Settings"
		);

		PortalSettingsNavigator.gotoLDAP();

		PortalSettings.enableLDAPSetting(enableCheckboxKey = "ENABLED");

		for (var enableCheckboxKey : list "ENABLED,EXPORT_ENABLED,IMPORT_ENABLED,IMPORT_ON_STARTUP_ENABLED") {
			PortalSettingsNavigator.gotoLDAP();

			PortalSettings.enableLDAPSetting(enableCheckboxKey = "${enableCheckboxKey}");

			PortalSettingsNavigator.gotoLDAP();

			PortalSettings.viewEnabledLDAPSetting(
				enableCheckboxKey = "${enableCheckboxKey}"
			);
		}

		Portlet.shutdownServer();

		Portlet.startServer(deleteLiferayHome = "false");

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Control Panel",
			portlet = "Server Administration"
		);

		ServerAdministration.executeServerResourcesActions(
			actionsDescription = "Reindex all search indexes."
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		if (IsElementNotPresent(locator1 = "UsersAndOrganizations#USER_TABLE_SCREEN_NAME_LINK", key_userScreenName = "ldapusercn")) {
			ProductMenu.gotoPortlet(
				category = "Configuration",
				panel = "Control Panel",
				portlet = "Instance Settings"
			);

			PortalSettings.disableLDAPCP();

			ProductMenu.gotoPortlet(
				category = "Configuration",
				panel = "Control Panel",
				portlet = "Instance Settings"
			);

			PortalSettingsNavigator.gotoLDAP();

			PortalSettings.enableLDAPSetting(enableCheckboxKey = "ENABLED");

			PortalSettings.editLDAPServer(LDAPServerName = "ApacheDS Server");

			PortalSettings.testLDAPConnection();

			ProductMenu.gotoPortlet(
				category = "Configuration",
				panel = "Control Panel",
				portlet = "Instance Settings"
			);

			PortalSettingsNavigator.gotoLDAP();

			for (var enableCheckboxKey : list "ENABLED,IMPORT_ENABLED,IMPORT_ON_STARTUP_ENABLED,USE_LDAP_PASSWORD_POLICY") {
				PortalSettingsNavigator.gotoLDAP();

				PortalSettings.enableLDAPSetting(enableCheckboxKey = "${enableCheckboxKey}");

				PortalSettingsNavigator.gotoLDAP();

				PortalSettings.viewEnabledLDAPSetting(
					enableCheckboxKey = "${enableCheckboxKey}"
				);
			}

			AssertConsoleTextNotPresent(value1 = "Unable to encrypt blank password");

			Portlet.shutdownServer();

			Portlet.startServer(deleteLiferayHome = "false");

			User.firstLoginPG();

			ProductMenu.gotoPortlet(
				category = "Configuration",
				panel = "Control Panel",
				portlet = "Server Administration"
			);

			ServerAdministration.executeServerResourcesActions(
				actionsDescription = "Reindex all search indexes."
			);

			ProductMenu.gotoPortlet(
				category = "Users",
				panel = "Control Panel",
				portlet = "Users and Organizations"
			);
		}

		User.viewCP(
			userEmailAddress = "ldapuseremail@liferay.com",
			userFirstName = "ldapusergivenname",
			userLastName = "ldapusersn",
			userScreenName = "ldapusercn"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.editUserGenderCP(
			userGender = "Female",
			userName = "ldapusergivenname ldapusersn"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.editUserJobTitleCP(
			userJobTitle = "QA",
			userName = "ldapusergivenname ldapusersn"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.editUserSuffixCP(
			userName = "ldapusergivenname ldapusersn",
			userSuffix = "Phd"
		);

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		User.editPasswordCP(
			userEmailAddress = "ldapuseremail@liferay.com",
			userScreenName = "ldapusercn"
		);

		User.logoutAndLoginPG(
			userLoginEmailAddress = "ldapuseremail@liferay.com",
			userLoginFullName = "ldapusergivenname ldapusersn"
		);

		Page.gotoMyAccount(portletName = "Account Settings");

		// LPS-77948

		/* <execute function="AssertElementPresent" locator1="UsersAndOrganizationsEditUser#DETAILS_GENDER_SELECTED" value1="Female">
			<var name="key_userGender" value="Female" />
		</execute> */

		AssertTextEquals(
			locator1 = "UsersAndOrganizationsEditUser#DETAILS_JOB_TITLE_FIELD",
			value1 = "QA"
		);

		// LPS-77948

		/* <execute function="AssertElementPresent" locator1="UsersAndOrganizationsEditUser#DETAILS_SUFFIX_SELECTED" value1="Phd">
			<var name="key_userSuffix" value="Phd" />
		</execute> */
	}

	@description = "This is a use case for LPS-73381."
	@priority = "4"
	test ViewHiddenSecurityCredential {
		property test.name.skip.portal.instance = "AuthenticationUsecase#ViewHiddenSecurityCredential";

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Control Panel",
			portlet = "System Settings"
		);

		SystemSettings.gotoCategory(category = "Foundation");

		SystemSettings.editConfiguration(configurationName = "LDAP Servers");

		SystemSettings.editSecurityCredential(securityCredential = "123456");
	}
}