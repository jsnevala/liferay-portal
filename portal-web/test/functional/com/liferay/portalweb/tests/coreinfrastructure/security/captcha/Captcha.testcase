@component-name = "portal-security"
definition {
	property captcha.max.challenges = "0";
	property portal.upstream = "true";
	property test.assert.warning.exceptions = "true";
	property testray.main.component.name = "Security";

	setUp {
		TestCase.setUpPortalInstance();
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			User.firstLoginPG();

			Page.tearDownPG();
		}
	}

	@priority = "4"
	test ViewCaptchaEnabled {
		SignInNavigator.gotoCreateAccount();

		User.viewCaptchaPG(captchaType = "captcha");
	}

	@ignore = "true"
	@priority = "4"
	test ViewRecaptchaEnabled {
		property test.name.skip.portal.instance = "Captcha#ViewRecaptchaEnabled";
		var recaptchaPrivateKey = PropsUtil.get("recaptcha.private.key");
		var recaptchaPublicKey = PropsUtil.get("recaptcha.public.key");

		User.firstLoginPG();

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Control Panel",
			portlet = "Server Administration"
		);

		Navigator.gotoNavItem(navItem = "CAPTCHA");

		ServerAdministration.enableRecaptcha(
			privateKey = "${recaptchaPrivateKey}",
			publicKey = "${recaptchaPublicKey}"
		);

		User.logoutPG();

		SignInNavigator.gotoCreateAccount();

		User.viewCaptchaPG(captchaType = "recaptcha");
	}
}