@component-name = "portal-permissions"
definition {
	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Permissions";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			User.firstLoginPG();

			User.tearDownCP();

			Role.tearDownCP();

			Organization.tearDownCP();

			Site.tearDownCP();

			BlogsEntry.tearDownCP();

			Page.tearDownPG();
		}
	}

	@priority = "5"
	test AddBlogsEntryNoGuestRole {
		property portal.acceptance = "true";

		Page.add(pageName = "Blogs Page");

		Portlet.addPG(pageName = "Blogs Page", portletName = "Blogs");

		User.logoutPG();

		Navigator.gotoPage(pageName = "Blogs Page");

		BlogsEntry.viewNoAddPermissions();
	}

	@priority = "5"
	test AddBlogsEntryOrgRole {
		Permissions.setUpOrgRoleLoginUserPG(
			orgName = "Organization Name",
			orgType = "Organization",
			page = "Public Pages",
			pageName = "Blogs Page",
			portletName = "Blogs",
			roleName = "Roles Orgrole Name",
			roleType = "Organization",
			siteName = "Organization Name",
			siteURL = "true",
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln",
			userScreenName = "usersn"
		);

		Navigator.gotoSitePage(pageName = "Blogs Page", siteName = "Organization Name");

		BlogsEntry.viewNoAddPermissions();

		Permissions.definePermissionLoginUserCP(
			permissionDefinitionKey = "SITE_ADMIN_CONTENT_BLOGS_RESOURCE_PERMISSIONS_BLOGS_ENTRIES_ADD_ENTRY_CHECKBOX",
			permissionDefinitionValue = "Add Entry",
			roleName = "Roles Orgrole Name",
			roleType = "Organization",
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln"
		);

		Navigator.gotoSitePage(pageName = "Blogs Page", siteName = "Organization Name");

		Blogs.addEntry(
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs Entry Title"
		);

		Permissions.removePermissionLoginUserCP(
			permissionDefinitionKey = "SITE_ADMIN_CONTENT_BLOGS_RESOURCE_PERMISSIONS_BLOGS_ENTRIES_ADD_ENTRY_CHECKBOX",
			permissionDefinitionValue = "Add Entry",
			roleName = "Roles Orgrole Name",
			roleType = "Organization",
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln"
		);

		Navigator.gotoSitePage(pageName = "Blogs Page", siteName = "Organization Name");

		BlogsEntry.viewNoAddPermissions();

		User.logoutAndLoginPG(
			userLoginEmailAddress = "test@liferay.com",
			userLoginFullName = "Test Test"
		);
	}

	@priority = "4"
	test AddBlogsEntryOrgRoleInline {
		Permissions.setUpOrgRoleLoginUserPG(
			orgName = "Organization Name",
			orgType = "Organization",
			page = "Public Pages",
			pageName = "Blogs Page",
			portletName = "Blogs",
			roleName = "Roles Orgrole Name",
			roleType = "Organization",
			siteName = "Organization Name",
			siteURL = "true",
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln",
			userScreenName = "usersn"
		);

		Navigator.gotoSitePage(pageName = "Blogs Page", siteName = "Organization Name");

		BlogsEntry.viewNoAddPermissions();

		User.logoutAndLoginPG(
			userLoginEmailAddress = "test@liferay.com",
			userLoginFullName = "Test Test"
		);

		Navigator.gotoSitePage(pageName = "Blogs Page", siteName = "Organization Name");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Blogs"
		);

		BlogsNavigator.gotoBlogsEntriesPermissionsCP();

		Role.definePermissionPG(
			permissionDefinitionKey = "INLINE_PERMISSIONS_ADD_ENTRY_CHECKBOX",
			roleName = "Roles Orgrole Name"
		);

		User.logoutAndLoginPG(
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln"
		);

		Navigator.gotoSitePage(pageName = "Blogs Page", siteName = "Organization Name");

		Blogs.addEntry(
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs Entry Title"
		);

		User.logoutAndLoginPG(
			userLoginEmailAddress = "test@liferay.com",
			userLoginFullName = "Test Test"
		);

		Navigator.gotoSitePage(pageName = "Blogs Page", siteName = "Organization Name");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Blogs"
		);

		BlogsNavigator.gotoBlogsEntriesPermissionsCP();

		Role.removePermissionPG(
			permissionDefinitionKey = "INLINE_PERMISSIONS_ADD_ENTRY_CHECKBOX",
			roleName = "Roles Orgrole Name"
		);

		User.logoutAndLoginPG(
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln"
		);

		Navigator.gotoSitePage(pageName = "Blogs Page", siteName = "Organization Name");

		BlogsEntry.viewNoAddPermissions();

		User.logoutAndLoginPG(
			userLoginEmailAddress = "test@liferay.com",
			userLoginFullName = "Test Test"
		);
	}

	@priority = "5"
	test AddBlogsEntryRegRole {
		property portal.acceptance = "true";

		Permissions.setUpRegRoleLoginUserPG(
			pageName = "Blogs Page",
			portletName = "Blogs",
			roleName = "Regrole Name",
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln",
			userScreenName = "usersn"
		);

		Navigator.gotoPage(pageName = "Blogs Page");

		BlogsEntry.viewNoAddPermissions();

		Permissions.definePermissionLoginUserCP(
			permissionDefinitionKey = "SITE_ADMIN_CONTENT_BLOGS_RESOURCE_PERMISSIONS_BLOGS_ENTRIES_ADD_ENTRY_CHECKBOX",
			permissionDefinitionValue = "Add Entry",
			roleName = "Regrole Name",
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln"
		);

		Navigator.gotoPage(pageName = "Blogs Page");

		Blogs.addEntry(
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs Entry Title"
		);

		Permissions.removePermissionLoginUserCP(
			permissionDefinitionKey = "SITE_ADMIN_CONTENT_BLOGS_RESOURCE_PERMISSIONS_BLOGS_ENTRIES_ADD_ENTRY_CHECKBOX",
			permissionDefinitionValue = "Add Entry",
			roleName = "Regrole Name",
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln"
		);

		Navigator.gotoPage(pageName = "Blogs Page");

		BlogsEntry.viewNoAddPermissions();

		User.logoutAndLoginPG(
			userLoginEmailAddress = "test@liferay.com",
			userLoginFullName = "Test Test"
		);
	}

	@priority = "4"
	test AddBlogsEntryRegRoleInline {
		Permissions.setUpRegRoleLoginUserPG(
			pageName = "Blogs Page",
			portletName = "Blogs",
			roleName = "Regrole Name",
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln",
			userScreenName = "usersn"
		);

		Navigator.gotoPage(pageName = "Blogs Page");

		BlogsEntry.viewNoAddPermissions();

		User.logoutAndLoginPG(
			userLoginEmailAddress = "test@liferay.com",
			userLoginFullName = "Test Test"
		);

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Blogs"
		);

		BlogsNavigator.gotoBlogsEntriesPermissionsCP();

		Role.definePermissionPG(
			permissionDefinitionKey = "INLINE_PERMISSIONS_ADD_ENTRY_CHECKBOX",
			roleName = "Regrole Name"
		);

		User.logoutAndLoginPG(
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln"
		);

		Navigator.gotoPage(pageName = "Blogs Page");

		Blogs.addEntry(
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs Entry Title"
		);

		User.logoutAndLoginPG(
			userLoginEmailAddress = "test@liferay.com",
			userLoginFullName = "Test Test"
		);

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Blogs"
		);

		BlogsNavigator.gotoBlogsEntriesPermissionsCP();

		Role.removePermissionPG(
			permissionDefinitionKey = "INLINE_PERMISSIONS_ADD_ENTRY_CHECKBOX",
			roleName = "Regrole Name"
		);

		User.logoutAndLoginPG(
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln"
		);

		Navigator.gotoPage(pageName = "Blogs Page");

		BlogsEntry.viewNoAddPermissions();

		User.logoutAndLoginPG(
			userLoginEmailAddress = "test@liferay.com",
			userLoginFullName = "Test Test"
		);
	}

	@priority = "5"
	test AddBlogsEntrySiteRole {
		Permissions.setUpSiteRoleLoginUserPG(
			page = "Public Pages",
			pageName = "Blogs Page",
			portletName = "Blogs",
			roleName = "Roles Siterole Name",
			roleType = "Site",
			siteName = "Site Name",
			siteURL = "true",
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln",
			userScreenName = "usersn"
		);

		Navigator.gotoSitePage(pageName = "Blogs Page", siteName = "Site Name");

		BlogsEntry.viewNoAddPermissions();

		Permissions.definePermissionLoginUserCP(
			permissionDefinitionKey = "SITE_ADMIN_CONTENT_BLOGS_RESOURCE_PERMISSIONS_BLOGS_ENTRIES_ADD_ENTRY_CHECKBOX",
			permissionDefinitionValue = "Add Entry",
			roleName = "Roles Siterole Name",
			roleType = "Site",
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln"
		);

		Navigator.gotoSitePage(pageName = "Blogs Page", siteName = "Site Name");

		Blogs.addEntry(
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs Entry Title"
		);

		Permissions.removePermissionLoginUserCP(
			permissionDefinitionKey = "SITE_ADMIN_CONTENT_BLOGS_RESOURCE_PERMISSIONS_BLOGS_ENTRIES_ADD_ENTRY_CHECKBOX",
			permissionDefinitionValue = "Add Entry",
			roleName = "Roles Siterole Name",
			roleType = "Site",
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln"
		);

		Navigator.gotoSitePage(pageName = "Blogs Page", siteName = "Site Name");

		BlogsEntry.viewNoAddPermissions();

		User.logoutAndLoginPG(
			userLoginEmailAddress = "test@liferay.com",
			userLoginFullName = "Test Test"
		);
	}

	@priority = "4"
	test AddBlogsEntrySiteRoleInline {
		Permissions.setUpSiteRoleLoginUserPG(
			page = "Public Pages",
			pageName = "Blogs Page",
			portletName = "Blogs",
			roleName = "Roles Siterole Name",
			roleType = "Site",
			siteName = "Site Name",
			siteURL = "true",
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln",
			userScreenName = "usersn"
		);

		Navigator.gotoSitePage(pageName = "Blogs Page", siteName = "Site Name");

		BlogsEntry.viewNoAddPermissions();

		User.logoutAndLoginPG(
			userLoginEmailAddress = "test@liferay.com",
			userLoginFullName = "Test Test"
		);

		ProductMenu.gotoSite(site = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Blogs"
		);

		BlogsNavigator.gotoBlogsEntriesPermissionsCP();

		Role.definePermissionPG(
			permissionDefinitionKey = "INLINE_PERMISSIONS_ADD_ENTRY_CHECKBOX",
			roleName = "Roles Siterole Name"
		);

		User.logoutAndLoginPG(
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln"
		);

		Navigator.gotoSitePage(pageName = "Blogs Page", siteName = "Site Name");

		Blogs.addEntry(
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs Entry Title"
		);

		User.logoutAndLoginPG(
			userLoginEmailAddress = "test@liferay.com",
			userLoginFullName = "Test Test"
		);

		ProductMenu.gotoSite(site = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Blogs"
		);

		BlogsNavigator.gotoBlogsEntriesPermissionsCP();

		Role.removePermissionPG(
			permissionDefinitionKey = "INLINE_PERMISSIONS_ADD_ENTRY_CHECKBOX",
			roleName = "Roles Siterole Name"
		);

		User.logoutAndLoginPG(
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln"
		);

		Navigator.gotoSitePage(pageName = "Blogs Page", siteName = "Site Name");

		BlogsEntry.viewNoAddPermissions();

		User.logoutAndLoginPG(
			userLoginEmailAddress = "test@liferay.com",
			userLoginFullName = "Test Test"
		);
	}

	@priority = "4"
	test AddBlogsEntrySiteTeamRoleInline {
		Permissions.setUpSiteTeamRoleLoginUserPG(
			page = "Public Pages",
			pageName = "Blogs Page",
			portletName = "Blogs",
			siteName = "Site Name",
			teamDescription = "Site Team Description",
			teamName = "Site Team Name",
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln",
			userScreenName = "usersn"
		);

		Navigator.gotoSitePage(pageName = "Blogs Page", siteName = "Site Name");

		BlogsEntry.viewNoAddPermissions();

		User.logoutAndLoginPG(
			userLoginEmailAddress = "test@liferay.com",
			userLoginFullName = "Test Test"
		);

		Navigator.gotoSitePage(pageName = "Blogs Page", siteName = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Blogs"
		);

		BlogsNavigator.gotoBlogsEntriesPermissionsCP();

		Team.definePermissionPG(
			permissionDefinitionKey = "_ACTION_ADD_ENTRY",
			teamName = "Site Team Name"
		);

		PortletEntry.save();

		Team.viewPermissionPG(
			permissionDefinitionKey = "_ACTION_ADD_ENTRY",
			teamName = "Site Team Name"
		);

		User.logoutAndLoginPG(
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln"
		);

		Navigator.gotoSitePage(pageName = "Blogs Page", siteName = "Site Name");

		Blogs.addEntry(
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs Entry Title"
		);

		User.logoutAndLoginPG(
			userLoginEmailAddress = "test@liferay.com",
			userLoginFullName = "Test Test"
		);

		Navigator.gotoSitePage(pageName = "Blogs Page", siteName = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Blogs"
		);

		BlogsNavigator.gotoBlogsEntriesPermissionsCP();

		Team.removePermissionPG(
			permissionDefinitionKey = "_ACTION_ADD_ENTRY",
			teamName = "Site Team Name"
		);

		User.logoutAndLoginPG(
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln"
		);

		Navigator.gotoSitePage(pageName = "Blogs Page", siteName = "Site Name");

		BlogsEntry.viewNoAddPermissions();

		User.logoutAndLoginPG(
			userLoginEmailAddress = "test@liferay.com",
			userLoginFullName = "Test Test"
		);
	}

	@priority = "4"
	test DeleteBlogsEntryNoGuestRole {
		Page.add(pageName = "Blogs Page");

		Portlet.addPG(pageName = "Blogs Page", portletName = "Blogs");

		Blogs.addEntry(
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs Entry Title"
		);

		User.logoutPG();

		Navigator.gotoPage(pageName = "Blogs Page");

		BlogsEntry.moveToRecycleBinNoPermissionPG(entryTitle = "Blogs Entry Title");
	}

	@priority = "5"
	test DeleteBlogsEntryOrgRoleDefaultPermission {
		property portal.acceptance = "false";

		Permissions.setUpOrgRoleLoginUserPG(
			orgName = "Organization Name",
			orgType = "Organization",
			page = "Public Pages",
			pageName = "Blogs Page",
			portletName = "Blogs",
			roleName = "Roles Orgrole Name",
			roleType = "Organization",
			siteName = "Organization Name",
			siteURL = "true",
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userLoginEmailAddress = "test@liferay.com",
			userLoginFullName = "Test Test",
			userScreenName = "usersn"
		);

		Permissions.addBlogsEntryLoginUserPG(
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs Entry Title",
			pageName = "Blogs Page",
			siteName = "Organization Name",
			siteURLTemp = "true",
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln"
		);

		Navigator.gotoSitePage(pageName = "Blogs Page", siteName = "Organization Name");

		BlogsEntry.moveToRecycleBinNoPermissionPG(entryTitle = "Blogs Entry Title");

		User.logoutAndLoginPG(
			userLoginEmailAddress = "test@liferay.com",
			userLoginFullName = "Test Test"
		);
	}

	@priority = "5"
	test DeleteBlogsEntryOrgRoleDefinePermission {
		property portal.acceptance = "false";

		Permissions.setUpOrgRoleLoginUserPG(
			orgName = "Organization Name",
			orgType = "Organization",
			page = "Public Pages",
			pageName = "Blogs Page",
			portletName = "Blogs",
			roleName = "Roles Orgrole Name",
			roleType = "Organization",
			siteName = "Organization Name",
			siteURL = "true",
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userLoginEmailAddress = "test@liferay.com",
			userLoginFullName = "Test Test",
			userScreenName = "usersn"
		);

		Permissions.addBlogsEntryLoginUserPG(
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs Entry Title",
			pageName = "Blogs Page",
			siteName = "Organization Name",
			siteURLTemp = "true",
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln"
		);

		Permissions.definePermissionViaJSONAPI(
			resourceAction = "DELETE",
			resourceName = "com.liferay.blogs.kernel.model.BlogsEntry",
			roleName = "Roles Orgrole Name"
		);

		Navigator.gotoSitePage(pageName = "Blogs Page", siteName = "Organization Name");

		BlogsEntry.moveToRecycleBinPG(
			assetType = "Blogs Entry",
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs Entry Title"
		);

		Permissions.removePermissionViaAPI(
			resourceAction = "DELETE",
			resourceName = "com.liferay.blogs.kernel.model.BlogsEntry",
			roleName = "Roles Orgrole Name"
		);

		Permissions.addBlogsEntryLoginUserPG(
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs Entry Title",
			pageName = "Blogs Page",
			siteName = "Organization Name",
			siteURLTemp = "true",
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln"
		);

		Navigator.gotoSitePage(pageName = "Blogs Page", siteName = "Organization Name");

		BlogsEntry.moveToRecycleBinNoPermissionPG(entryTitle = "Blogs Entry Title");

		User.logoutAndLoginPG(
			userLoginEmailAddress = "test@liferay.com",
			userLoginFullName = "Test Test"
		);
	}

	@priority = "4"
	test DeleteBlogsEntryOrgRoleInline {
		Permissions.setUpOrgRoleLoginUserPG(
			orgName = "Organization Name",
			orgType = "Organization",
			page = "Public Pages",
			pageName = "Blogs Page",
			portletName = "Blogs",
			roleName = "Roles Orgrole Name",
			roleType = "Organization",
			siteName = "Organization Name",
			siteURL = "true",
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userLoginEmailAddress = "test@liferay.com",
			userLoginFullName = "Test Test",
			userScreenName = "usersn"
		);

		Permissions.addBlogsEntryLoginUserPG(
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs Entry Title",
			pageName = "Blogs Page",
			siteName = "Organization Name",
			siteURLTemp = "true",
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln"
		);

		Navigator.gotoSitePage(pageName = "Blogs Page", siteName = "Organization Name");

		BlogsEntry.moveToRecycleBinNoPermissionPG(entryTitle = "Blogs Entry Title");

		User.logoutAndLoginPG(
			userLoginEmailAddress = "test@liferay.com",
			userLoginFullName = "Test Test"
		);

		Navigator.gotoSitePage(pageName = "Blogs Page", siteName = "Organization Name");

		BlogsNavigator.gotoBlogsEntryPermissionsPG();

		Role.definePermissionPG(
			permissionDefinitionKey = "CONTENT_PERMISSIONS_DELETE_CHECKBOX",
			roleName = "Roles Orgrole Name"
		);

		User.logoutAndLoginPG(
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln"
		);

		Navigator.gotoSitePage(pageName = "Blogs Page", siteName = "Organization Name");

		BlogsEntry.moveToRecycleBinPG(
			assetType = "Blogs Entry",
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs Entry Title"
		);

		Permissions.addBlogsEntryLoginUserPG(
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs Entry Title",
			pageName = "Blogs Page",
			siteName = "Organization Name",
			siteURLTemp = "true",
			userLoginEmailAddress = "test@liferay.com",
			userLoginFullName = "Test Test"
		);

		User.logoutAndLoginPG(
			userLoginEmailAddress = "test@liferay.com",
			userLoginFullName = "Test Test"
		);

		Navigator.gotoSitePage(pageName = "Blogs Page", siteName = "Organization Name");

		BlogsNavigator.gotoBlogsEntryPermissionsPG();

		Role.removePermissionPG(
			permissionDefinitionKey = "CONTENT_PERMISSIONS_DELETE_CHECKBOX",
			roleName = "Roles Orgrole Name"
		);

		User.logoutAndLoginPG(
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln"
		);

		Navigator.gotoSitePage(pageName = "Blogs Page", siteName = "Organization Name");

		BlogsEntry.moveToRecycleBinNoPermissionPG(entryTitle = "Blogs Entry Title");

		User.logoutAndLoginPG(
			userLoginEmailAddress = "test@liferay.com",
			userLoginFullName = "Test Test"
		);
	}

	@priority = "4"
	test DeleteBlogsEntryOwnerRoleInline {
		Permissions.setUpRegRoleLoginUserPG(
			pageName = "Blogs Page",
			portletName = "Blogs",
			roleName = "Regrole Name",
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userLoginEmailAddress = "test@liferay.com",
			userLoginFullName = "Test Test",
			userScreenName = "usersn"
		);

		Permissions.definePermissionLoginUserCP(
			permissionDefinitionKey = "SITE_ADMIN_CONTENT_BLOGS_RESOURCE_PERMISSIONS_BLOGS_ENTRIES_ADD_ENTRY_CHECKBOX",
			permissionDefinitionValue = "Add Entry",
			roleName = "Regrole Name",
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln"
		);

		Navigator.gotoPage(pageName = "Blogs Page");

		Blogs.addEntry(
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs Entry Title"
		);

		User.logoutAndLoginPG(
			userLoginEmailAddress = "test@liferay.com",
			userLoginFullName = "Test Test"
		);

		Navigator.gotoPage(pageName = "Blogs Page");

		BlogsNavigator.gotoBlogsEntryPermissionsPG();

		Role.removePermissionPG(
			permissionDefinitionKey = "CONTENT_PERMISSIONS_DELETE_CHECKBOX",
			roleName = "Owner"
		);

		User.logoutAndLoginPG(
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln"
		);

		Navigator.gotoPage(pageName = "Blogs Page");

		BlogsEntry.moveToRecycleBinNoPermissionPG(entryTitle = "Blogs Entry Title");

		User.logoutAndLoginPG(
			userLoginEmailAddress = "test@liferay.com",
			userLoginFullName = "Test Test"
		);

		Navigator.gotoPage(pageName = "Blogs Page");

		BlogsNavigator.gotoBlogsEntryPermissionsPG();

		Role.definePermissionPG(
			permissionDefinitionKey = "CONTENT_PERMISSIONS_DELETE_CHECKBOX",
			roleName = "Owner"
		);

		User.logoutAndLoginPG(
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln"
		);

		Navigator.gotoPage(pageName = "Blogs Page");

		BlogsEntry.moveToRecycleBinPG(
			assetType = "Blogs Entry",
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs Entry Title"
		);
	}

	@priority = "4"
	test DeleteBlogsEntryRegRole {
		Permissions.setUpRegRoleLoginUserPG(
			pageName = "Blogs Page",
			portletName = "Blogs",
			roleName = "Regrole Name",
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userLoginEmailAddress = "test@liferay.com",
			userLoginFullName = "Test Test",
			userScreenName = "usersn"
		);

		Permissions.addBlogsEntryLoginUserPG(
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs Entry Title",
			pageName = "Blogs Page",
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln"
		);

		Navigator.gotoPage(pageName = "Blogs Page");

		BlogsEntry.moveToRecycleBinNoPermissionPG(entryTitle = "Blogs Entry Title");

		Permissions.definePermissionLoginUserCP(
			permissionDefinitionKey = "SITE_ADMIN_CONTENT_BLOGS_RESOURCE_PERMISSIONS_BLOGS_ENTRY_DELETE_CHECKBOX",
			permissionDefinitionValue = "Delete",
			roleName = "Regrole Name",
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln"
		);

		Navigator.gotoPage(pageName = "Blogs Page");

		BlogsEntry.moveToRecycleBinPG(
			assetType = "Blogs Entry",
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs Entry Title"
		);

		Permissions.removePermissionLoginUserCP(
			permissionDefinitionKey = "SITE_ADMIN_CONTENT_BLOGS_RESOURCE_PERMISSIONS_BLOGS_ENTRY_DELETE_CHECKBOX",
			permissionDefinitionValue = "Delete",
			roleName = "Regrole Name",
			userLoginEmailAddress = "test@liferay.com",
			userLoginFullName = "Test Test"
		);

		Permissions.addBlogsEntryLoginUserPG(
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs Entry Title",
			pageName = "Blogs Page",
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln"
		);

		Navigator.gotoPage(pageName = "Blogs Page");

		BlogsEntry.moveToRecycleBinNoPermissionPG(entryTitle = "Blogs Entry Title");

		User.logoutAndLoginPG(
			userLoginEmailAddress = "test@liferay.com",
			userLoginFullName = "Test Test"
		);
	}

	@priority = "4"
	test DeleteBlogsEntryRegRoleInline {
		Permissions.setUpRegRoleLoginUserPG(
			pageName = "Blogs Page",
			portletName = "Blogs",
			roleName = "Regrole Name",
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userLoginEmailAddress = "test@liferay.com",
			userLoginFullName = "Test Test",
			userScreenName = "usersn"
		);

		Permissions.addBlogsEntryLoginUserPG(
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs Entry Title",
			pageName = "Blogs Page",
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln"
		);

		Navigator.gotoPage(pageName = "Blogs Page");

		BlogsEntry.moveToRecycleBinNoPermissionPG(entryTitle = "Blogs Entry Title");

		User.logoutAndLoginPG(
			userLoginEmailAddress = "test@liferay.com",
			userLoginFullName = "Test Test"
		);

		Navigator.gotoPage(pageName = "Blogs Page");

		BlogsNavigator.gotoBlogsEntryPermissionsPG();

		Role.definePermissionPG(
			permissionDefinitionKey = "CONTENT_PERMISSIONS_DELETE_CHECKBOX",
			roleName = "Regrole Name"
		);

		User.logoutAndLoginPG(
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln"
		);

		Navigator.gotoPage(pageName = "Blogs Page");

		BlogsEntry.moveToRecycleBinPG(
			assetType = "Blogs Entry",
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs Entry Title"
		);

		Permissions.addBlogsEntryLoginUserPG(
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs Entry Title",
			pageName = "Blogs Page",
			userLoginEmailAddress = "test@liferay.com",
			userLoginFullName = "Test Test"
		);

		Navigator.gotoPage(pageName = "Blogs Page");

		BlogsNavigator.gotoBlogsEntryPermissionsPG();

		Role.removePermissionPG(
			permissionDefinitionKey = "CONTENT_PERMISSIONS_DELETE_CHECKBOX",
			roleName = "Regrole Name"
		);

		User.logoutAndLoginPG(
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln"
		);

		Navigator.gotoPage(pageName = "Blogs Page");

		BlogsEntry.moveToRecycleBinNoPermissionPG(entryTitle = "Blogs Entry Title");

		User.logoutAndLoginPG(
			userLoginEmailAddress = "test@liferay.com",
			userLoginFullName = "Test Test"
		);
	}

	@priority = "4"
	test DeleteBlogsEntrySiteRole {
		Permissions.setUpSiteRoleLoginUserPG(
			page = "Public Pages",
			pageName = "Blogs Page",
			portletName = "Blogs",
			roleName = "Roles Siterole Name",
			roleType = "Site",
			siteName = "Site Name",
			siteURL = "true",
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userLoginEmailAddress = "test@liferay.com",
			userLoginFullName = "Test Test",
			userScreenName = "usersn"
		);

		Permissions.addBlogsEntryLoginUserPG(
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs Entry Title",
			pageName = "Blogs Page",
			siteName = "Site Name",
			siteURLTemp = "true",
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln"
		);

		Navigator.gotoSitePage(pageName = "Blogs Page", siteName = "Site Name");

		BlogsEntry.moveToRecycleBinNoPermissionPG(entryTitle = "Blogs Entry Title");

		Permissions.definePermissionLoginUserCP(
			permissionDefinitionKey = "SITE_ADMIN_CONTENT_BLOGS_RESOURCE_PERMISSIONS_BLOGS_ENTRY_DELETE_CHECKBOX",
			permissionDefinitionValue = "Delete",
			roleName = "Roles Siterole Name",
			roleType = "Site",
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln"
		);

		Navigator.gotoSitePage(pageName = "Blogs Page", siteName = "Site Name");

		BlogsEntry.moveToRecycleBinPG(
			assetType = "Blogs Entry",
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs Entry Title"
		);

		Permissions.removePermissionLoginUserCP(
			permissionDefinitionKey = "SITE_ADMIN_CONTENT_BLOGS_RESOURCE_PERMISSIONS_BLOGS_ENTRY_DELETE_CHECKBOX",
			permissionDefinitionValue = "Delete",
			roleName = "Roles Siterole Name",
			roleType = "Site",
			userLoginEmailAddress = "test@liferay.com",
			userLoginFullName = "Test Test"
		);

		Permissions.addBlogsEntryLoginUserPG(
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs Entry Title",
			pageName = "Blogs Page",
			siteName = "Site Name",
			siteURLTemp = "true",
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln"
		);

		Navigator.gotoSitePage(pageName = "Blogs Page", siteName = "Site Name");

		BlogsEntry.moveToRecycleBinNoPermissionPG(entryTitle = "Blogs Entry Title");

		User.logoutAndLoginPG(
			userLoginEmailAddress = "test@liferay.com",
			userLoginFullName = "Test Test"
		);
	}

	@priority = "4"
	test DeleteBlogsEntrySiteRoleInline {
		Permissions.setUpSiteRoleLoginUserPG(
			page = "Public Pages",
			pageName = "Blogs Page",
			portletName = "Blogs",
			roleName = "Roles Siterole Name",
			roleType = "Site",
			siteName = "Site Name",
			siteURL = "true",
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userLoginEmailAddress = "test@liferay.com",
			userLoginFullName = "Test Test",
			userScreenName = "usersn"
		);

		Permissions.addBlogsEntryLoginUserPG(
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs Entry Title",
			pageName = "Blogs Page",
			siteName = "Site Name",
			siteURLTemp = "true",
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln"
		);

		Navigator.gotoSitePage(pageName = "Blogs Page", siteName = "Site Name");

		BlogsEntry.moveToRecycleBinNoPermissionPG(entryTitle = "Blogs Entry Title");

		User.logoutAndLoginPG(
			userLoginEmailAddress = "test@liferay.com",
			userLoginFullName = "Test Test"
		);

		Navigator.gotoSitePage(pageName = "Blogs Page", siteName = "Site Name");

		BlogsNavigator.gotoBlogsEntryPermissionsPG();

		Role.definePermissionPG(
			permissionDefinitionKey = "CONTENT_PERMISSIONS_DELETE_CHECKBOX",
			roleName = "Roles Siterole Name"
		);

		User.logoutAndLoginPG(
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln"
		);

		Navigator.gotoSitePage(pageName = "Blogs Page", siteName = "Site Name");

		BlogsEntry.moveToRecycleBinPG(
			assetType = "Blogs Entry",
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs Entry Title"
		);

		Permissions.addBlogsEntryLoginUserPG(
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs Entry Title",
			pageName = "Blogs Page",
			siteName = "Site Name",
			siteURLTemp = "true",
			userLoginEmailAddress = "test@liferay.com",
			userLoginFullName = "Test Test"
		);

		Navigator.gotoSitePage(pageName = "Blogs Page", siteName = "Site Name");

		BlogsNavigator.gotoBlogsEntryPermissionsPG();

		Role.removePermissionPG(
			permissionDefinitionKey = "CONTENT_PERMISSIONS_DELETE_CHECKBOX",
			roleName = "Roles Siterole Name"
		);

		User.logoutAndLoginPG(
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln"
		);

		Navigator.gotoSitePage(pageName = "Blogs Page", siteName = "Site Name");

		BlogsEntry.moveToRecycleBinNoPermissionPG(entryTitle = "Blogs Entry Title");

		User.logoutAndLoginPG(
			userLoginEmailAddress = "test@liferay.com",
			userLoginFullName = "Test Test"
		);
	}

	@priority = "4"
	test DeleteBlogsEntrySiteTeamRoleInline {
		Permissions.setUpSiteTeamRoleLoginUserPG(
			page = "Public Pages",
			pageName = "Blogs Page",
			portletName = "Blogs",
			siteName = "Site Name",
			teamDescription = "Site Team Description",
			teamName = "Site Team Name",
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userLoginEmailAddress = "test@liferay.com",
			userLoginFullName = "Test Test",
			userScreenName = "usersn"
		);

		Permissions.addBlogsEntryLoginUserPG(
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs Entry Title",
			pageName = "Blogs Page",
			siteName = "Site Name",
			siteURLTemp = "true",
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln"
		);

		Navigator.gotoSitePage(pageName = "Blogs Page", siteName = "Site Name");

		BlogsEntry.moveToRecycleBinNoPermissionPG(entryTitle = "Blogs Entry Title");

		User.logoutAndLoginPG(
			userLoginEmailAddress = "test@liferay.com",
			userLoginFullName = "Test Test"
		);

		Navigator.gotoSitePage(pageName = "Blogs Page", siteName = "Site Name");

		BlogsNavigator.gotoBlogsEntryPermissionsPG();

		Team.definePermissionPG(
			permissionDefinitionKey = "_ACTION_DELETE",
			teamName = "Site Team Name"
		);

		PortletEntry.save();

		Team.viewPermissionPG(
			permissionDefinitionKey = "_ACTION_DELETE",
			teamName = "Site Team Name"
		);

		User.logoutAndLoginPG(
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln"
		);

		Navigator.gotoSitePage(pageName = "Blogs Page", siteName = "Site Name");

		BlogsEntry.moveToRecycleBinPG(
			assetType = "Blogs Entry",
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs Entry Title"
		);

		Permissions.addBlogsEntryLoginUserPG(
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs Entry Title",
			pageName = "Blogs Page",
			siteName = "Site Name",
			siteURLTemp = "true",
			userLoginEmailAddress = "test@liferay.com",
			userLoginFullName = "Test Test"
		);

		Navigator.gotoSitePage(pageName = "Blogs Page", siteName = "Site Name");

		BlogsNavigator.gotoBlogsEntryPermissionsPG();

		Team.removePermissionPG(
			permissionDefinitionKey = "_ACTION_DELETE",
			teamName = "Site Team Name"
		);

		User.logoutAndLoginPG(
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln"
		);

		Navigator.gotoSitePage(pageName = "Blogs Page", siteName = "Site Name");

		BlogsEntry.moveToRecycleBinNoPermissionPG(entryTitle = "Blogs Entry Title");

		User.logoutAndLoginPG(
			userLoginEmailAddress = "test@liferay.com",
			userLoginFullName = "Test Test"
		);
	}

	@priority = "4"
	test EditBlogsEntryOwnerRoleInline {
		Permissions.setUpRegRoleLoginUserPG(
			pageName = "Blogs Page",
			portletName = "Blogs",
			roleName = "Regrole Name",
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userLoginEmailAddress = "test@liferay.com",
			userLoginFullName = "Test Test",
			userScreenName = "usersn"
		);

		Permissions.definePermissionLoginUserCP(
			permissionDefinitionKey = "SITE_ADMIN_CONTENT_BLOGS_RESOURCE_PERMISSIONS_BLOGS_ENTRIES_ADD_ENTRY_CHECKBOX",
			permissionDefinitionValue = "Add Entry",
			roleName = "Regrole Name",
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln"
		);

		Navigator.gotoPage(pageName = "Blogs Page");

		Blogs.addEntry(
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs Entry Title"
		);

		User.logoutAndLoginPG(
			userLoginEmailAddress = "test@liferay.com",
			userLoginFullName = "Test Test"
		);

		Navigator.gotoPage(pageName = "Blogs Page");

		BlogsNavigator.gotoBlogsEntryPermissionsPG();

		Role.removePermissionPG(
			permissionDefinitionKey = "CONTENT_PERMISSIONS_UPDATE_CHECKBOX",
			roleName = "Owner"
		);

		User.logoutAndLoginPG(
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln"
		);

		Navigator.gotoPage(pageName = "Blogs Page");

		BlogsEntry.editNoPermissionPG(
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs Entry Title"
		);

		User.logoutAndLoginPG(
			userLoginEmailAddress = "test@liferay.com",
			userLoginFullName = "Test Test"
		);

		Navigator.gotoPage(pageName = "Blogs Page");

		BlogsNavigator.gotoBlogsEntryPermissionsPG();

		Role.definePermissionPG(
			permissionDefinitionKey = "CONTENT_PERMISSIONS_UPDATE_CHECKBOX",
			roleName = "Owner"
		);

		User.logoutAndLoginPG(
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln"
		);

		Navigator.gotoPage(pageName = "Blogs Page");

		BlogsNavigator.gotoEditPG(entryTitle = "Blogs Entry Title");

		BlogsEntry.editTitle(
			entryTitle = "Blogs Entry Title",
			entryTitleEdit = "Blogs Entry Title Edit"
		);

		BlogsEntry.editContent(
			entryContent = "Blogs Entry Content",
			entryContentEdit = "Blogs Entry Content Edit"
		);

		BlogsEntry.viewEntry(
			entryContent = "Blogs Entry Content Edit",
			entryTitle = "Blogs Entry Title Edit"
		);
	}

	@priority = "5"
	test SubscribeBlogsRegRole {
		property portal.acceptance = "false";

		Permissions.setUpRegRoleLoginUserPG(
			pageName = "Blogs Page",
			portletName = "Blogs",
			roleName = "Regrole Name",
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln",
			userScreenName = "usersn"
		);

		Navigator.gotoPage(pageName = "Blogs Page");

		BlogsConfiguration.viewNoPermissionPG();

		Permissions.definePermissionLoginUserCP(
			permissionDefinitionKey = "SITE_ADMIN_CONTENT_BLOGS_RESOURCE_PERMISSIONS_BLOGS_ENTRIES_SUBSCRIBE_CHECKBOX",
			permissionDefinitionValue = "Subscribe",
			roleName = "Regrole Name",
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln"
		);

		Navigator.gotoPage(pageName = "Blogs Page");

		BlogsEntry.subscribePG();

		Permissions.removePermissionLoginUserCP(
			permissionDefinitionKey = "SITE_ADMIN_CONTENT_BLOGS_RESOURCE_PERMISSIONS_BLOGS_ENTRIES_SUBSCRIBE_CHECKBOX",
			permissionDefinitionValue = "Subscribe",
			roleName = "Regrole Name",
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln"
		);

		Navigator.gotoPage(pageName = "Blogs Page");

		BlogsConfiguration.viewNoPermissionPG();

		User.logoutAndLoginPG(
			userLoginEmailAddress = "test@liferay.com",
			userLoginFullName = "Test Test"
		);
	}

	@priority = "4"
	test SubscribeBlogsRegRoleInline {
		Permissions.setUpRegRoleLoginUserPG(
			pageName = "Blogs Page",
			portletName = "Blogs",
			roleName = "Regrole Name",
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln",
			userScreenName = "usersn"
		);

		Navigator.gotoPage(pageName = "Blogs Page");

		BlogsConfiguration.viewNoPermissionPG();

		User.logoutAndLoginPG(
			userLoginEmailAddress = "test@liferay.com",
			userLoginFullName = "Test Test"
		);

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Blogs"
		);

		BlogsNavigator.gotoBlogsEntriesPermissionsCP();

		Role.definePermissionPG(
			permissionDefinitionKey = "INLINE_PERMISSIONS_SUBSCRIBE_CHECKBOX",
			roleName = "Regrole Name"
		);

		User.logoutAndLoginPG(
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln"
		);

		Navigator.gotoPage(pageName = "Blogs Page");

		BlogsEntry.subscribePG();

		User.logoutAndLoginPG(
			userLoginEmailAddress = "test@liferay.com",
			userLoginFullName = "Test Test"
		);

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Blogs"
		);

		BlogsNavigator.gotoBlogsEntriesPermissionsCP();

		Role.removePermissionPG(
			permissionDefinitionKey = "INLINE_PERMISSIONS_SUBSCRIBE_CHECKBOX",
			roleName = "Regrole Name"
		);

		User.logoutAndLoginPG(
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln"
		);

		Navigator.gotoPage(pageName = "Blogs Page");

		BlogsConfiguration.viewNoPermissionPG();

		User.logoutAndLoginPG(
			userLoginEmailAddress = "test@liferay.com",
			userLoginFullName = "Test Test"
		);
	}

	@priority = "4"
	test SubscribeBlogsSiteRoleInline {
		Permissions.setUpSiteMemberRoleLoginUserPG(
			page = "Public Pages",
			pageName = "Blogs Page",
			portletName = "Blogs",
			roleName = "Site Member",
			roleType = "Site",
			siteName = "Site Name",
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln",
			userScreenName = "usersn"
		);

		Navigator.gotoSitePage(pageName = "Blogs Page", siteName = "Site Name");

		BlogsConfiguration.viewSubscribePG();

		User.logoutAndLoginPG(
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln"
		);

		Navigator.gotoSitePage(pageName = "Blogs Page", siteName = "Site Name");

		BlogsEntry.subscribePG();

		User.logoutAndLoginPG(
			userLoginEmailAddress = "test@liferay.com",
			userLoginFullName = "Test Test"
		);

		Navigator.gotoSitePage(pageName = "Blogs Page", siteName = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Blogs"
		);

		BlogsNavigator.gotoBlogsEntriesPermissionsCP();

		Role.removePermissionPG(
			permissionDefinitionKey = "INLINE_PERMISSIONS_SUBSCRIBE_CHECKBOX",
			roleName = "Site Member"
		);

		User.logoutAndLoginPG(
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln"
		);

		Navigator.gotoSitePage(pageName = "Blogs Page", siteName = "Site Name");

		BlogsConfiguration.viewNoSubscribePG();

		User.logoutAndLoginPG(
			userLoginEmailAddress = "test@liferay.com",
			userLoginFullName = "Test Test"
		);
	}

	@priority = "5"
	test ViewBlogsEntryPermissionsOwnerRoleInline {
		Permissions.setUpRegRoleLoginUserPG(
			pageName = "Blogs Page",
			portletName = "Blogs",
			roleName = "Regrole Name",
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userLoginEmailAddress = "test@liferay.com",
			userLoginFullName = "Test Test",
			userScreenName = "usersn"
		);

		Permissions.definePermissionLoginUserCP(
			permissionDefinitionKey = "SITE_ADMIN_CONTENT_BLOGS_RESOURCE_PERMISSIONS_BLOGS_ENTRIES_ADD_ENTRY_CHECKBOX",
			permissionDefinitionValue = "Add Entry",
			roleName = "Regrole Name",
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln"
		);

		Navigator.gotoPage(pageName = "Blogs Page");

		Blogs.addEntry(
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs Entry Title"
		);

		User.logoutAndLoginPG(
			userLoginEmailAddress = "test@liferay.com",
			userLoginFullName = "Test Test"
		);

		Navigator.gotoPage(pageName = "Blogs Page");

		BlogsNavigator.gotoBlogsEntryPermissionsPG();

		Role.removePermissionPG(
			permissionDefinitionKey = "CONTENT_PERMISSIONS_PERMISSIONS_CHECKBOX",
			roleName = "Owner"
		);

		User.logoutAndLoginPG(
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln"
		);

		Navigator.gotoPage(pageName = "Blogs Page");

		BlogsEntry.viewPermissionsNoPermissionPG(entryTitle = "Blogs Entry Title");

		User.logoutAndLoginPG(
			userLoginEmailAddress = "test@liferay.com",
			userLoginFullName = "Test Test"
		);

		Navigator.gotoPage(pageName = "Blogs Page");

		BlogsNavigator.gotoBlogsEntryPermissionsPG();

		Role.definePermissionPG(
			permissionDefinitionKey = "CONTENT_PERMISSIONS_PERMISSIONS_CHECKBOX",
			roleName = "Owner"
		);

		User.logoutAndLoginPG(
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln"
		);

		Navigator.gotoPage(pageName = "Blogs Page");

		BlogsEntry.viewPermissionsPG(entryTitle = "Blogs Entry Title");
	}

	@priority = "5"
	test ViewBlogsPermissionsRegRole {
		property portal.acceptance = "false";

		Permissions.setUpRegRoleLoginUserPG(
			pageName = "Blogs Page",
			portletName = "Blogs",
			roleName = "Regrole Name",
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln",
			userScreenName = "usersn"
		);

		Navigator.gotoPage(pageName = "Blogs Page");

		BlogsConfiguration.viewNoPermissionPG();

		Permissions.definePermissionLoginUserCP(
			permissionDefinitionKey = "SITE_ADMIN_APPLICATIONS_BLOGS_APPLICATION_PERMISSIONS_CONFIGURATION_CHECKBOX",
			permissionDefinitionValue = "Configuration",
			roleName = "Regrole Name",
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln"
		);

		Permissions.definePermissionLoginUserCP(
			permissionDefinitionKey = "SITE_ADMIN_APPLICATIONS_BLOGS_APPLICATION_PERMISSIONS_PERMISSIONS_CHECKBOX",
			permissionDefinitionValue = "Permissions",
			roleName = "Regrole Name",
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln"
		);

		Navigator.gotoPage(pageName = "Blogs Page");

		BlogsConfiguration.viewPermissionsPG();

		Permissions.removePermissionLoginUserCP(
			permissionDefinitionKey = "SITE_ADMIN_APPLICATIONS_BLOGS_APPLICATION_PERMISSIONS_CONFIGURATION_CHECKBOX",
			permissionDefinitionValue = "Configuration",
			roleName = "Regrole Name",
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln"
		);

		Permissions.removePermissionLoginUserCP(
			permissionDefinitionKey = "SITE_ADMIN_APPLICATIONS_BLOGS_APPLICATION_PERMISSIONS_PERMISSIONS_CHECKBOX",
			permissionDefinitionValue = "Permissions",
			roleName = "Regrole Name",
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln"
		);

		Navigator.gotoPage(pageName = "Blogs Page");

		BlogsConfiguration.viewNoPermissionPG();

		User.logoutAndLoginPG(
			userLoginEmailAddress = "test@liferay.com",
			userLoginFullName = "Test Test"
		);
	}

	@priority = "4"
	test ViewBlogsPermissionsRegRoleInline {
		Permissions.setUpRegRoleLoginUserPG(
			pageName = "Blogs Page",
			portletName = "Blogs",
			roleName = "Regrole Name",
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln",
			userScreenName = "usersn"
		);

		Navigator.gotoPage(pageName = "Blogs Page");

		BlogsConfiguration.viewNoPermissionPG();

		User.logoutAndLoginPG(
			userLoginEmailAddress = "test@liferay.com",
			userLoginFullName = "Test Test"
		);

		Navigator.gotoPage(pageName = "Blogs Page");

		PermissionsInline.gotoConfigurationPG(portletName = "Blogs");

		Role.definePermissionPG(
			permissionDefinitionKey = "CONFIGURATION_PERMISSIONS_CONFIGURATION_CHECKBOX",
			roleName = "Regrole Name"
		);

		Navigator.gotoPage(pageName = "Blogs Page");

		PermissionsInline.gotoConfigurationPG(portletName = "Blogs");

		Role.definePermissionPG(
			permissionDefinitionKey = "CONFIGURATION_PERMISSIONS_PERMISSIONS_CHECKBOX",
			roleName = "Regrole Name"
		);

		User.logoutAndLoginPG(
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln"
		);

		Navigator.gotoPage(pageName = "Blogs Page");

		BlogsConfiguration.viewPermissionsPG();

		User.logoutAndLoginPG(
			userLoginEmailAddress = "test@liferay.com",
			userLoginFullName = "Test Test"
		);

		Navigator.gotoPage(pageName = "Blogs Page");

		PermissionsInline.gotoConfigurationPG(portletName = "Blogs");

		Role.removePermissionPG(
			permissionDefinitionKey = "CONFIGURATION_PERMISSIONS_PERMISSIONS_CHECKBOX",
			roleName = "Regrole Name"
		);

		User.logoutAndLoginPG(
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln"
		);

		Navigator.gotoPage(pageName = "Blogs Page");

		BlogsConfiguration.viewNoPermissionPG();

		User.logoutAndLoginPG(
			userLoginEmailAddress = "test@liferay.com",
			userLoginFullName = "Test Test"
		);

		Navigator.gotoPage(pageName = "Blogs Page");

		PermissionsInline.gotoConfigurationPG(portletName = "Blogs");

		Role.removePermissionPG(
			permissionDefinitionKey = "CONFIGURATION_PERMISSIONS_CONFIGURATION_CHECKBOX",
			roleName = "Regrole Name"
		);

		User.logoutAndLoginPG(
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln"
		);

		Navigator.gotoPage(pageName = "Blogs Page");

		BlogsConfiguration.viewNoPermissionPG();

		User.logoutAndLoginPG(
			userLoginEmailAddress = "test@liferay.com",
			userLoginFullName = "Test Test"
		);
	}

	@priority = "4"
	test ViewBlogsPermissionsSiteRole {
		Permissions.setUpSiteRoleLoginUserPG(
			page = "Public Pages",
			pageName = "Blogs Page",
			portletName = "Blogs",
			roleName = "Roles Siterole Name",
			roleType = "Site",
			siteName = "Site Name",
			siteURL = "true",
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln",
			userScreenName = "usersn"
		);

		Navigator.gotoSitePage(pageName = "Blogs Page", siteName = "Site Name");

		BlogsConfiguration.viewAsSiteMemberPG();

		Permissions.definePermissionLoginUserCP(
			permissionDefinitionKey = "SITE_ADMIN_APPLICATIONS_BLOGS_APPLICATION_PERMISSIONS_CONFIGURATION_CHECKBOX",
			permissionDefinitionValue = "Configuration",
			roleName = "Roles Siterole Name",
			roleType = "Site",
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln"
		);

		Permissions.definePermissionLoginUserCP(
			permissionDefinitionKey = "SITE_ADMIN_APPLICATIONS_BLOGS_APPLICATION_PERMISSIONS_PERMISSIONS_CHECKBOX",
			permissionDefinitionValue = "Permissions",
			roleName = "Roles Siterole Name",
			roleType = "Site",
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln"
		);

		Navigator.gotoSitePage(pageName = "Blogs Page", siteName = "Site Name");

		BlogsConfiguration.viewPermissionsPG();

		Permissions.removePermissionLoginUserCP(
			permissionDefinitionKey = "SITE_ADMIN_APPLICATIONS_BLOGS_APPLICATION_PERMISSIONS_PERMISSIONS_CHECKBOX",
			permissionDefinitionValue = "Permissions",
			roleName = "Roles Siterole Name",
			roleType = "Site",
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln"
		);

		Navigator.gotoSitePage(pageName = "Blogs Page", siteName = "Site Name");

		BlogsConfiguration.viewAsSiteMemberPG();

		Permissions.removePermissionLoginUserCP(
			permissionDefinitionKey = "SITE_ADMIN_APPLICATIONS_BLOGS_APPLICATION_PERMISSIONS_CONFIGURATION_CHECKBOX",
			permissionDefinitionValue = "Configuration",
			roleName = "Roles Siterole Name",
			roleType = "Site",
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln"
		);

		Navigator.gotoSitePage(pageName = "Blogs Page", siteName = "Site Name");

		BlogsConfiguration.viewAsSiteMemberPG();

		User.logoutAndLoginPG(
			userLoginEmailAddress = "test@liferay.com",
			userLoginFullName = "Test Test"
		);
	}

	@priority = "4"
	test ViewBlogsPermissionsSiteRoleInline {
		Permissions.setUpSiteRoleLoginUserPG(
			page = "Public Pages",
			pageName = "Blogs Page",
			portletName = "Blogs",
			roleName = "Roles Siterole Name",
			roleType = "Site",
			siteName = "Site Name",
			siteURL = "true",
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln",
			userScreenName = "usersn"
		);

		Navigator.gotoSitePage(pageName = "Blogs Page", siteName = "Site Name");

		BlogsConfiguration.viewAsSiteMemberPG();

		User.logoutAndLoginPG(
			userLoginEmailAddress = "test@liferay.com",
			userLoginFullName = "Test Test"
		);

		Navigator.gotoSitePage(pageName = "Blogs Page", siteName = "Site Name");

		PermissionsInline.gotoConfigurationPG(portletName = "Blogs");

		Role.definePermissionPG(
			permissionDefinitionKey = "CONFIGURATION_PERMISSIONS_CONFIGURATION_CHECKBOX",
			roleName = "Roles Siterole Name"
		);

		Navigator.gotoSitePage(pageName = "Blogs Page", siteName = "Site Name");

		PermissionsInline.gotoConfigurationPG(portletName = "Blogs");

		Role.definePermissionPG(
			permissionDefinitionKey = "CONFIGURATION_PERMISSIONS_PERMISSIONS_CHECKBOX",
			roleName = "Roles Siterole Name"
		);

		User.logoutAndLoginPG(
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln"
		);

		Navigator.gotoSitePage(pageName = "Blogs Page", siteName = "Site Name");

		BlogsConfiguration.viewPermissionsPG();

		User.logoutAndLoginPG(
			userLoginEmailAddress = "test@liferay.com",
			userLoginFullName = "Test Test"
		);

		Navigator.gotoSitePage(pageName = "Blogs Page", siteName = "Site Name");

		PermissionsInline.gotoConfigurationPG(portletName = "Blogs");

		Role.removePermissionPG(
			permissionDefinitionKey = "CONFIGURATION_PERMISSIONS_PERMISSIONS_CHECKBOX",
			roleName = "Roles Siterole Name"
		);

		User.logoutAndLoginPG(
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln"
		);

		Navigator.gotoSitePage(pageName = "Blogs Page", siteName = "Site Name");

		BlogsConfiguration.viewAsSiteMemberPG();

		User.logoutAndLoginPG(
			userLoginEmailAddress = "test@liferay.com",
			userLoginFullName = "Test Test"
		);

		Navigator.gotoSitePage(pageName = "Blogs Page", siteName = "Site Name");

		PermissionsInline.gotoConfigurationPG(portletName = "Blogs");

		Role.removePermissionPG(
			permissionDefinitionKey = "CONFIGURATION_PERMISSIONS_CONFIGURATION_CHECKBOX",
			roleName = "Roles Siterole Name"
		);

		User.logoutAndLoginPG(
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln"
		);

		Navigator.gotoSitePage(pageName = "Blogs Page", siteName = "Site Name");

		BlogsConfiguration.viewAsSiteMemberPG();

		User.logoutAndLoginPG(
			userLoginEmailAddress = "test@liferay.com",
			userLoginFullName = "Test Test"
		);
	}

	@priority = "4"
	test ViewBlogsPortletNoGuestRole {
		Page.add(pageName = "Blogs Page");

		Portlet.addPG(pageName = "Blogs Page", portletName = "Blogs");

		User.logoutPG();

		Navigator.gotoPage(pageName = "Blogs Page");

		BlogsConfiguration.viewNoPermissionPG();
	}
}