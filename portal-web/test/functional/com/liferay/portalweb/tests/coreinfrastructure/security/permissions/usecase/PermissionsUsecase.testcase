@component-name = "portal-security"
definition {
	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Permissions";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			PortalSettings.tearDownAuthenticationCP();

			Page.tearDownPG();
		}
	}

	@priority = "4"
	test ViewNoDisplayPortletConfigurationPermission {
		property custom.properties = "virtual.hosts.default.site.name=Guest";
		var portalURL = PropsUtil.get("portal.url");
		var url1 = "${portalURL}/testxxx/?p_p_id=com_liferay_portlet_configuration_web_portlet_PortletConfigurationPortlet&amp;p_p_lifecycle=0&amp;p_p_state=maximized&amp;_com_liferay_portlet_configuration_web_portlet_PortletConfigurationPortlet_mvcPath=%2Fedit_configuration.jsp&amp;_com_liferay_portlet_configuration_web_portlet_PortletConfigurationPortlet_portletResource=com_liferay_users_admin_web_portlet_UsersAdminPortlet";
		var url2 = "${portalURL}/testxxx/?p_p_id=com_liferay_users_admin_web_portlet_UsersAdminPortlet&amp;p_p_state=maximized";

		Page.add(pageName = "testxxx");

		User.logoutPG();

		Navigator.openSpecificURL(url = "${url1}");

		AssertTextEquals(
			locator1 = "Message#ERROR_2",
			value1 = "You do not have the required permissions."
		);

		// Ignore following step until LPS-73530 is fixed

		// <execute function="AssertConsoleTextNotPresent"  value1="must have com.liferay.portal.kernel.model.Portlet,com_liferay_users_admin_web_portlet_UsersAdminPortlet,CONFIGURATION permission for null" />

		Navigator.openSpecificURL(url = "${url2}");

		AssertTextEquals(
			locator1 = "Message#ERROR",
			value1 = "You do not have the roles required to access this portlet."
		);
	}
}