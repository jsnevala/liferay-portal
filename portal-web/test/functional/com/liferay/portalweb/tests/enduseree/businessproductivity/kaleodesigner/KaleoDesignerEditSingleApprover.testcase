@component-name = "portal-business-productivity-ee"
definition {
	property portal.release = "true";
	property portal.upstream = "true";
	property test.run.environment = "EE";
	property testray.main.component.name = "Kaleo Designer";
	var kfFieldSetName = "New Kaleo Field Set";
	var workflowAssetType = "Process";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Control Panel",
			portlet = "Kaleo Designer"
		);

		KaleoDesigner.editWorkflowDefinitionViaKDCP(
			workflowDefinitionTitle = "Single Approver"
		);
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
	}

	@priority = "5"
	test DeleteTaskNode {
		property test.name.skip.portal.instance = "KaleoDesignerEditSingleApprover#DeleteTaskNode";

		PortletEntry.inputTitle(title = "Edited Workflow Definition");

		KaleoDesigner.selectNode(nodeNodeLabel = "update");

		KaleoDesigner.deleteNode(nodeNodeLabel = "update");

		KaleoDesigner.publishWorkflowDefinitionViaKDCP();

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Control Panel",
			portlet = "Kaleo Designer"
		);

		KaleoDesigner.viewTableDefinitionPublishedViaKDCP(
			workflowDefinitionName = "Single Approver",
			workflowDefinitionTitle = "Edited Workflow Definition",
			workflowDefinitionVersionNumber = "2"
		);

		KaleoDesigner.editWorkflowDefinitionViaKDCP(
			workflowDefinitionTitle = "Edited Workflow Definition"
		);

		KaleoDesigner.viewNodeNotPresent(nodeNodeLabel = "update");
	}

	@priority = "4"
	test ViewInvalidSourceXMLNotRemainsAfterTabSwitch {
		property test.name.skip.portal.instance = "KaleoDesignerEditSingleApprover#ViewInvalidSourceXMLNotRemainsAfterTabSwitch";

		KaleoDesigner.editSourceXML(kdSourceXML = "INVALID", line = "6");

		KaleoDesigner.viewViewTab();

		KaleoDesigner.viewSourceXMLLine(
			invalid = "true",
			kdSourceXML = "INVALID",
			line = "6"
		);
	}

	@description = "This is a use case for LPS-46657."
	@priority = "4"
	test ViewNodeNotificationRecipientPersistsAfterSwitchingTabs {
		property test.name.skip.portal.instance = "KaleoDesignerEditSingleApprover#ViewNodeNotificationRecipientPersistsAfterSwitchingTabs";

		KaleoDesigner.selectNode(nodeNodeLabel = "review");

		KaleoDesigner.editNodeNotifications(
			nodeNotificationsDescription = "Review Notification Description",
			nodeNotificationsName = "Review Notification",
			nodeNotificationsRecipientType = "Role Type",
			roleName = "Administrator",
			roleType = "Regular"
		);

		KaleoDesigner.viewSourceXMLTab();

		KaleoDesigner.viewViewTab();

		KaleoDesigner.selectNode(nodeNodeLabel = "review");

		KaleoDesigner.viewNodeNotifications(
			nodeNotificationsName = "Review Notification",
			nodeNotificationsRecipientType = "Role Type",
			roleName = "Administrator",
			roleType = "Regular"
		);
	}

	@description = "This is a use case for LPS-46605."
	@priority = "3"
	test ViewUserNotificationOption {
		property test.name.skip.portal.instance = "KaleoDesignerEditSingleApprover#ViewUserNotificationOption";

		KaleoDesigner.selectNode(nodeNodeLabel = "review");

		KaleoDesigner.viewNodeNotifications(
			nodeNotificationsName = "Review Notification",
			nodeNotificationsType = "User Notification"
		);
	}
}