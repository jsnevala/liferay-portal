definition {
	macro _closeMessage {
		if ((IsElementPresent(locator1 = "Message#${messageType}")) && (IsVisible(locator1 = "Message#${messageType}")) && (IsVisible(locator1 = "Icon#CLOSE"))) {
			Click(locator1 = "Icon#CLOSE");
		}
	}

	macro closePortalLocalizationWarning {
		Alert._closeMessage(messageType = "PORTAL_LOCALIZATION");

		Pause(locator1 = "2000");
	}

	macro viewErrorMessage {
		AssertTextEquals(locator1 = "Message#ERROR", value1 = "${errorMessage}");

		Alert._closeMessage(messageType = "ERROR");
	}

	macro viewFailedSiteTemplateDeletionMessage {
		AssertTextEquals.assertPartialText(
			locator1 = "Message#ERROR_2",
			value1 = "You cannot delete site templates that are used by a site."
		);
	}

	macro viewRequestFailedToComplete {
		AssertTextEquals.assertPartialText(
			locator1 = "Message#ERROR_REQUEST_FAILED_TO_COMPLETE",
			value1 = "Your request failed to complete."
		);
	}

	macro viewRequiredField {
		AssertTextEquals.assertPartialText(
			locator1 = "TextInput#REQUIRED_ALERT",
			value1 = "This field is required."
		);
	}

	macro viewSuccessMessage {
		AssertVisible(locator1 = "Message#SUCCESS");

		Pause(locator1 = "5000");

		Alert._closeMessage(messageType = "SUCCESS");
	}

	macro viewSuccessMessageText {
		AssertVisible(locator1 = "Message#SUCCESS");

		AssertElementPresent(locator1 = "Message#SUCCESS");

		AssertTextEquals(locator1 = "Message#SUCCESS", value1 = "${successMessage}");
	}

	macro waitForSuccessMessageHide {
		AssertNotVisible(locator1 = "Message#SUCCESS");
	}
}