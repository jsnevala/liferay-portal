definition {
	macro addOrRemoveViewPermissionFromAllRoles {
		for (var roleName : list "${roleList}") {
			var roleName = "${roleName}";
			var key_roleName = StringUtil.replace("${roleName}", " ", "-");
			var key_roleName = StringUtil.lowerCase("${key_roleName}");

			if ("${addOrRemoveViewPermission}" == "Add") {
				Check(locator1 = "Permissions#CONFIGURATION_PERMISSIONS_VIEW_CHECKBOX");
			}
			else if ("${addOrRemoveViewPermission}" == "Remove") {
				Uncheck(locator1 = "Permissions#CONFIGURATION_PERMISSIONS_VIEW_CHECKBOX");
			}
		}

		Button.clickSave();

		AssertTextEquals.assertPartialText(
			locator1 = "Message#SUCCESS",
			value1 = "Your request completed successfully."
		);
	}

	macro assertDefaultPG {
		for (var roleName : list "${roleList}") {
			var roleName = "${roleName}";
			var key_roleName = StringUtil.replace("${roleName}", " ", "-");
			var key_roleName = StringUtil.lowerCase("${key_roleName}");

			if (("${roleName}" == "Guest") || ("${roleName}" == "Site Member")) {
				AssertNotChecked(
					locator1 = "Permissions#CONFIGURATION_PERMISSIONS_ADD_TO_PAGE_CHECKBOX"
				);
			}
			else {
				AssertChecked(
					locator1 = "Permissions#CONFIGURATION_PERMISSIONS_ADD_TO_PAGE_CHECKBOX"
				);
			}

			if (("${roleName}" == "Guest") || ("${roleName}" == "Power User") || ("${roleName}" == "Site Member") || ("${roleName}" == "User")) {
				AssertNotChecked(
					locator1 = "Permissions#CONFIGURATION_PERMISSIONS_CONFIGURATION_CHECKBOX"
				);

				AssertNotChecked(
					locator1 = "Permissions#CONFIGURATION_PERMISSIONS_PERMISSIONS_CHECKBOX"
				);
			}
			else {
				AssertChecked(
					locator1 = "Permissions#CONFIGURATION_PERMISSIONS_CONFIGURATION_CHECKBOX"
				);

				AssertChecked(
					locator1 = "Permissions#CONFIGURATION_PERMISSIONS_PERMISSIONS_CHECKBOX"
				);
			}

			if (("${roleName}" == "Power User") || ("${roleName}" == "User")) {
				AssertNotChecked(
					locator1 = "Permissions#CONFIGURATION_PERMISSIONS_VIEW_CHECKBOX"
				);
			}
			else {
				AssertChecked(locator1 = "Permissions#CONFIGURATION_PERMISSIONS_VIEW_CHECKBOX");
			}
		}
	}

	macro gotoConfigurationPG {
		if (isSet(portletOption)) {
			var optionName = "${portletOption}";
		}
		else {
			var optionName = "Permissions";
		}

		Portlet.gotoPortletOptions(
			portletName = "${portletName}",
			portletOption = "${optionName}"
		);

		IFrame.selectDialogFrame();
	}

	macro gotoDocumentsAndMediaDocumentPG {
		LexiconEntry.gotoEntryMenuItem(
			menuItem = "Permissions",
			rowEntry = "${dmDocumentTitle}"
		);

		IFrame.selectDialogFrame();
	}

	macro gotoDocumentsAndMediaHomeFolderPG {
		Navigator.gotoSitePage(pageName = "${pageName}", siteName = "${siteName}");

		DMDocument.enableActionsMenuOnPortlet();

		Navigator.gotoSitePage(pageName = "${pageName}", siteName = "${siteName}");

		Click(locator1 = "Button#INFO");

		LexiconEntry.gotoEllipsisMenuItem(menuItem = "Permissions");

		IFrame.selectDialogFrame();
	}

	macro gotoMessageBoardsCategoryPG {
		AssertClick(
			locator1 = "MessageBoards#CATEGORY_LIST_CATEGORY",
			value1 = "${categoryName}",
			key_categoryName = "${categoryName}"
		);

		AssertClick(locator1 = "Button#PERMISSIONS", value1 = "Permissions");

		IFrame.selectDialogFrame();
	}

	macro gotoMessageBoardsPG {
		Navigator.gotoPage(pageName = "${pageName}");

		AssertClick(locator1 = "Button#PERMISSIONS", value1 = "Permissions");

		IFrame.selectDialogFrame();
	}

	macro gotoMessageBoardsThreadReplyPG {
		Navigator.gotoSitePage(pageName = "${pageName}", siteName = "${siteName}");

		AssertClick(
			locator1 = "MessageBoards#THREAD_LIST_THREAD",
			value1 = "${threadSubject}",
			key_threadSubject = "${threadSubject}"
		);

		Click.waitForMenuToggleJSClick(
			locator1 = "MessageBoards#THREAD_REPLY_ACTIONS",
			key_threadReplyBody = "${threadReplyBody}"
		);

		MenuItem.click(menuItem = "Permissions");

		IFrame.selectDialogFrame();
	}

	macro gotoPagePG {
		SitePageNavigator.gotoEditPage(page = "${pageName}");

		LexiconEntry.gotoHeaderMenuItem(menuItem = "Permissions");

		IFrame.selectDialogFrame();
	}

	macro gotoPollPermissionsCP {
		LexiconEntry.gotoEntryMenuItem(
			menuItem = "Permissions",
			rowEntry = "${pollsQuestionTitle}"
		);

		IFrame.selectDialogFrame();
	}

	macro gotoRolesAdminFromPortletConfiguration {
		AssertClick(
			locator1 = "AssetPermissions#ROLE_LINK",
			value1 = "${roleName}",
			key_roleName = "${roleName}"
		);
	}

	macro gotoSitepageCP {
		var key_page = "${pageName}";

		Click.mouseOverClick(locator1 = "SitePages#SPECIFIC_PAGE_ELLIPSIS");

		Click(locator1 = "SitePages#EDIT_SPECIFIC_PAGE");

		LexiconEntry.gotoHeaderMenuItem(menuItem = "Permissions");

		IFrame.selectDialogFrame();
	}

	macro gotoSiteTeamsCP {
		ProductMenu.gotoSite(site = "${siteScopeName}");

		ProductMenu.gotoPortlet(
			category = "Members",
			panel = "Site Administration",
			portlet = "${portletName}"
		);

		LexiconEntry.gotoEntryMenuItem(
			menuItem = "Permissions",
			rowEntry = "${teamName}"
		);

		IFrame.selectDialogFrame();
	}

	macro gotoSiteTemplateCP {
		SitePageNavigator.gotoEditPage(
			page = "${page}",
			sitePagePrivacy = "${sitePagePrivacy}"
		);

		LexiconEntry.gotoHeaderMenuItem(menuItem = "Permissions");
	}

	macro gotoUserGroupSitePermissionsCP {
		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "User Groups"
		);

		LexiconEntry.openEntryMenu(rowEntry = "${userGroupName}");

		MenuItem.click(menuItem = "User Group Pages Permissions");
	}

	macro gotoWCArticle {
		LexiconEntry.gotoEntryMenuItem(
			menuItem = "Permissions",
			rowEntry = "${webContentTitle}"
		);

		IFrame.selectPermissionsFrame();
	}

	macro viewPermissionsChecked {
		var key_roleName = StringUtil.replace("${roleName}", " ", "-");
		var key_roleName = StringUtil.lowerCase("${key_roleName}");

		AssertChecked(locator1 = "Permissions#${permissionDefinitionKey}");
	}

	macro viewPermissionsRemoved {
		var key_roleName = StringUtil.replace("${roleName}", " ", "-");
		var key_roleName = StringUtil.lowerCase("${key_roleName}");

		AssertNotChecked(locator1 = "Permissions#${permissionDefinitionKey}");
	}
}