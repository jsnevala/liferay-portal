definition {
	macro _addCP {
		LexiconEntry.gotoAdd();

		PortletEntry.inputName(name = "${tagName}");
	}

	macro addAutoAssertionTagViaBlogsPG {
		BlogsNavigator.gotoAddEntry();

		BlogsEntry.addEntryContent(
			entryContent = "${entryContent}",
			entryTitle = "${entryTitle}"
		);

		Panel.expandPanel(panelHeading = "Categorization");

		var key_tagName = "${tagName}";

		Type(locator1 = "AssetCategorization#TAGS_FIELD", value1 = "tag ");

		AssertTextEquals(
			locator1 = "AssetCategorization#TAG_AUTO_COMPLETE_SPECIFIC",
			value1 = "${tagName}"
		);

		AssertClick(
			locator1 = "AssetCategorization#TAG_AUTO_COMPLETE_SPECIFIC",
			value1 = "${tagName}"
		);

		PortletEntry.publish();
	}

	macro addCP {
		Tag._addCP(tagName = "${tagName}");

		PortletEntry.save();
	}

	macro addInvalidCP {
		Tag._addCP(tagName = "${tagName}");

		Button.clickSave();

		Alert.viewRequestFailedToComplete();
	}

	macro addViaSiteCP {
		Panel.expandPanel(panelHeading = "Categorization");

		AssetCategorization.addTag(tagName = "${tagName}");

		PortletEntry.save();
	}

	macro addWithNullTitleCP {
		Tag._addCP(tagName = "${tagName}");

		Button.clickSave();

		AssertElementPresent(locator1 = "Icon#ASTERISK");

		Alert.viewRequiredField();
	}

	macro deleteCP {
		var key_tagName = "${tagName}";

		if ("${deleteMethod}" == "From List") {
			LexiconEntry.gotoEntryMenuItemNoError(
				menuItem = "Delete",
				rowEntry = "${tagName}"
			);
		}
		else if ("${deleteMethod}" == "From Toolbar") {
			Check(locator1 = "Tags#TAG_ENTRY_TABLE_CHECKBOX");

			ClickNoError(locator1 = "Icon#DELETE");
		}
		else {
			Check.checkAll(locator1 = "Tags#ALL_TAGS_CHECKBOX");

			Click(locator1 = "Tags#TOOLBAR_ACTIONS");

			MenuItem.clickNoError(menuItem = "Delete");
		}

		Confirm(
			value1 = "Are you sure you want to delete this? It will be deleted immediately."
		);

		Alert.viewSuccessMessage();

		AssertTextEquals(
			locator1 = "Message#EMPTY_INFO",
			value1 = "There are no tags. You can add a tag by clicking the plus button on the bottom right corner."
		);

		AssertTextNotPresent(value1 = "${tagName}");
	}

	macro editCancelCP {
		LexiconEntry.gotoEntryMenuItem(menuItem = "Edit", rowEntry = "${tagName}");

		SiteAdmin.viewPortletTitle(portletTitle = "${tagName}");

		Button.clickCancel();

		AssertTextEquals(
			locator1 = "Tags#TAG_ENTRY_TABLE_NAME",
			value1 = "${tagName}",
			key_tagName = "${tagName}"
		);
	}

	macro editCP {
		LexiconEntry.gotoEntryMenuItem(menuItem = "Edit", rowEntry = "${tagName}");

		SiteAdmin.viewPortletTitle(portletTitle = "${tagName}");

		PortletEntry.inputName(name = "${tagNameEdit}");

		PortletEntry.save();
	}

	macro mergeSingleTagWarning {
		var key_tagName = "${tagName}";

		Check(locator1 = "Tags#TAG_ENTRY_TABLE_CHECKBOX");

		ClickNoError(locator1 = "Icon#MERGE");

		AssertClickNoError(locator1 = "Button#SAVE", value1 = "Save");

		Confirm(value1 = "Please choose at least 2 tags.");
	}

	macro mergeTags {
		if (isSet(tagNameList)) {
			for (var tagName : list "${tagNameList}") {
				Check(locator1 = "Tags#TAG_ENTRY_TABLE_CHECKBOX", key_tagName = "${tagName}");
			}
		}
		else {
			Check.checkAll(locator1 = "Tags#ALL_TAGS_CHECKBOX");
		}

		Click(locator1 = "Icon#MERGE");

		if (isSet(selectTagName)) {
			Click(locator1 = "Button#SELECT");

			IFrame.selectDialogFrame();

			Check(
				locator1 = "Tags#TAG_ENTRY_TABLE_CHECKBOX",
				key_tagName = "${selectTagName}"
			);

			SelectFrameTop();

			Button.clickDone();
		}

		Select(
			locator1 = "Tags#MERGE_TAGS_INTO_THIS_TAG_SELECT",
			value1 = "${selectTagToMergeTo}"
		);

		AssertClickNoError(locator1 = "Button#SAVE", value1 = "Save");

		Confirm.assertPartialConfirmation(value1 = "${mergeConfirmation}");

		Alert.viewSuccessMessage();
	}

	macro searchTagCP {
		Type(locator1 = "TextInput#SEARCH", value1 = "3");

		Click(locator1 = "Icon#BASIC_SEARCH");

		var key_tagName = "${tagName3}";

		AssertTextEquals(locator1 = "Tags#TAG_ENTRY_TABLE_NAME", value1 = "${tagName3}");

		Type(locator1 = "TextInput#SEARCH", value1 = "tag");

		Click(locator1 = "Icon#BASIC_SEARCH");

		var key_tagName = "${tagName1}";

		AssertTextEquals(locator1 = "Tags#TAG_ENTRY_TABLE_NAME", value1 = "${tagName1}");

		var key_tagName = "${tagName2}";

		AssertTextEquals(locator1 = "Tags#TAG_ENTRY_TABLE_NAME", value1 = "${tagName2}");

		var key_tagName = "${tagName3}";

		AssertTextEquals(locator1 = "Tags#TAG_ENTRY_TABLE_NAME", value1 = "${tagName3}");
	}

	macro tearDownCP {
		if ("${stagingSite}" == "true") {
			ProductMenu.gotoStagingSite();
		}
		else {
			Navigator.openURL();
		}

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Tags"
		);

		if (IsElementNotPresent(locator1 = "Message#EMPTY_INFO")) {
			Check.checkAll(locator1 = "Checkbox#SELECT_ALL");

			ClickNoError(locator1 = "Icon#DELETE");

			Confirm(
				value1 = "Are you sure you want to delete this? It will be deleted immediately."
			);
		}

		AssertTextEquals.assertPartialText(
			locator1 = "Message#EMPTY_INFO",
			value1 = "There are no tags."
		);
	}

	macro viewCP {
		var key_tagName = "${tagName}";

		AssertTextEquals(locator1 = "Tags#TAG_ENTRY_TABLE_NAME", value1 = "${tagName}");
	}

	macro viewMergedTagsCP {
		AssertTextNotPresent(
			locator1 = "Tags#TAG_ENTRY_TABLE_NAME",
			value1 = "${tagName}",
			key_tagName = "${tagName}"
		);
	}

	macro viewTagMenuNotEditableOnLive {
		LexiconEntry.openEntryMenu(rowEntry = "${rowEntry}");

		MenuItem.viewNotPresent(menuItem = "${menuItem}");
	}

	macro viewTagsCP {
		var key_tagName = "${tagName1}";

		AssertTextEquals(locator1 = "Tags#TAG_ENTRY_TABLE_NAME", value1 = "${tagName1}");

		var key_tagName = "${tagName2}";

		AssertTextEquals(locator1 = "Tags#TAG_ENTRY_TABLE_NAME", value1 = "${tagName2}");

		var key_tagName = "${tagName3}";

		AssertTextEquals(locator1 = "Tags#TAG_ENTRY_TABLE_NAME", value1 = "${tagName3}");
	}
}