definition {
	var entryAuthorFullName = "Test Test";

	macro addContentWithInlineImage {
		AlloyEditor.addContent(content = "${entryContent}");

		ItemSelector.gotoItemSelectorViaAlloyEditor();

		ItemSelector.uploadFile(
			navTab = "${navTab}",
			uploadFileName = "${uploadFileName}"
		);
	}

	macro addCustomAbstract {
		Click(locator1 = "Radio#CUSTOM_ABSTRACT");

		PortletEntry.inputDescriptionTextInput(
			description = "${entryAbstractDescription}"
		);
	}

	macro addCustomURL {
		Click(locator1 = "Radio#CUSTOM_URL");

		Type(locator1 = "TextInput#BLOGS_ENTRY_URL", value1 = "${customURL}");
	}

	macro addEntryContent {
		AlloyEditor.addTitle(title = "${entryTitle}");

		if (isSet(entrySubtitle)) {
			BlogsEntry.addSubtitle(entrySubtitle = "${entrySubtitle}");
		}

		AlloyEditor.addContent(content = "${entryContent}");
	}

	macro addEntryExternalLinkViaBrowseButton {
		if (isSet(entryContent)) {
			DoubleClick(
				locator1 = "BlogsEntry#CONTENT_LINK",
				key_entryContent = "${entryContent}"
			);
		}
		else {
			SelectFieldText(locator1 = "AlloyEditor#CONTENT_FIELD", key_editor = "content");
		}

		Click(locator1 = "AlloyEditor#TEXT_FORMATTING_LINK");

		Click(locator1 = "AlloyEditor#TEXT_FORMATTING_LINK_BROWSE_BUTTON");

		ItemSelector.selectDMImage(
			imageFileName = "${imageFileName}",
			navTab = "${navTab}"
		);

		PortletEntry.publish();
	}

	macro addRelatedAsset {
		AssertClick(
			locator1 = "AssetRelatedAssets#RELATED_ASSETS_SELECT",
			value1 = "Select"
		);

		var key_assetType = "${assetType}";

		AssertClick(
			locator1 = "AssetRelatedAssets#RELATED_ASSETS_SELECT_MENULIST_ASSET",
			value1 = "${assetType}"
		);

		var key_assetTitle = "${assetTitle}";

		SelectFrame(locator1 = "AssetRelatedAssets#SELECT_ASSET_IFRAME");

		AssertClick(
			locator1 = "AssetRelatedAssets#ASSET_TABLE_CHOOSE",
			value1 = "${assetTitle}"
		);

		SelectFrame(value1 = "relative=top");
	}

	macro addSmallImage {
		Click(locator1 = "Button#SELECT_FILE_SMALL_IMAGE");

		ItemSelector.uploadFile(
			navTab = "${navTab}",
			uploadFileName = "${uploadFileName}"
		);
	}

	macro addSubtitle {
		Type.typeEditor(
			locator1 = "AlloyEditor#SUBTITLE_FIELD",
			value1 = "${entrySubtitle}"
		);
	}

	macro addTag {
		var key_tagName = "${tagName}";

		Type(locator1 = "AssetCategorization#TAGS_FIELD", value1 = "${tagName}");

		AssertClick(locator1 = "Button#ADD_TAGS", value1 = "Add");

		AssertTextEquals(locator1 = "AssetCategorization#TAG", value1 = "${tagName}");
	}

	macro addTagList {
		for (var tagName : list "${tagNameList}") {
			Type.clickAtType(
				locator1 = "AssetCategorization#CATEGORIES_SEARCH_FIELD",
				value1 = "${tagName}"
			);

			AssertClick(locator1 = "Button#ADD_TAGS", value1 = "Add");
		}
	}

	macro addWithTrackbackURLPG {
		BlogsNavigator.gotoEntryPG(
			entryContent = "${entryContent}",
			entryTitle = "${entryTitle}"
		);

		var key_entryContent = "${entryContent}";
		var key_entryTitle = "${entryTitle}";

		BlogsEntry.viewPG(
			entryContent = "${entryContent}",
			entryTitle = "${entryTitle}"
		);

		Pause(locator1 = "3000");

		Copy(locator1 = "BlogsEntry#COMMENTS_TRACKBACK_URL");

		if ("${virtualHosts}" == "true") {
			Navigator.gotoSpecificURLPage(
				pageName = "Blogs Page",
				url = "${virtualHostsURL}"
			);
		}
		else {
			Navigator.gotoPage(pageName = "Blogs Page");
		}

		BlogsNavigator.gotoAddEntry();

		BlogsEntry.addEntryContent(
			entryContent = "${entryContent2}",
			entryTitle = "${entryTitle2}"
		);

		Panel.expandPanel(panelHeading = "Configuration");

		Paste(locator1 = "AlloyEditor#TRACKBACKS_TO_SEND");

		AssertClick(locator1 = "Button#PUBLISH", value1 = "Publish");

		Alert.viewSuccessMessage();
	}

	macro addWithWorkflowPG {
		BlogsNavigator.gotoAddEntry();

		BlogsEntry.addEntryContent(
			entryContent = "${entryContent}",
			entryTitle = "${entryTitle}"
		);

		AssertClick(
			locator1 = "Button#SUBMIT_FOR_PUBLICATION",
			value1 = "Submit for Publication"
		);

		Alert.viewSuccessMessage();
	}

	macro autoSaveDraft {
		Pause(locator1 = "30000");

		AssertElementPresent(locator1 = "Message#DRAFT_AUTO_SAVE");
	}

	macro editContent {
		AssertTextEquals(
			locator1 = "AlloyEditor#CONTENT_FIELD",
			value1 = "${entryContent}"
		);

		AlloyEditor.addContent(content = "${entryContentEdit}");
	}

	macro editDisplayDate {
		var displayDateDay = DateUtil.getCurrentDate();
		var displayDateMonth = DateUtil.getCurrentMonth();
		var displayDateYear = DateUtil.getCurrentYear();
		var displayDate = "${displayDateMonth}/${displayDateDay}/${displayDateYear}";

		Type(locator1 = "TextInput#DISPLAY_DATE", value1 = "${displayDate}");

		var displayTimeHour = DateUtil.getCurrentHour();
		var displayTimeMinute = "${displayTimeMinute}";
		var displayTime = "${displayTimeHour}:${displayTimeMinute}";

		Type(locator1 = "TextInput#DISPLAY_DATE_TIME", value1 = "${displayTime}");
	}

	macro editDisplayDateYear {
		var displayDateDay = selenium.getElementValue("TextInput#DISPLAY_DATE_DAY");
		var displayDateMonth = selenium.getElementValue("TextInput#DISPLAY_DATE_MONTH");
		var displayDateYear = DateUtil.getCurrentYear();
		var displayDateYear = MathUtil.sum("${displayDateYear}", "1");
		var displayDate = "${displayDateMonth}/${displayDateDay}/${displayDateYear}";

		Type(locator1 = "TextInput#DISPLAY_DATE", value1 = "${displayDate}");
	}

	macro editEntryContent {
		BlogsEntry.editTitle(
			entryTitle = "${entryTitle}",
			entryTitleEdit = "${entryTitleEdit}"
		);

		if (isSet(entrySubtitleEdit)) {
			BlogsEntry.editSubtitle(
				entrySubtitle = "${entrySubtitle}",
				entrySubtitleEdit = "${entrySubtitleEdit}"
			);
		}

		BlogsEntry.editContent(
			entryContent = "${entryContent}",
			entryContentEdit = "${entryContentEdit}"
		);
	}

	macro editNoPermissionPG {
		var key_entryTitle = "${entryTitle}";

		AssertTextEquals(locator1 = "BlogsEntry#TITLE", value1 = "${entryTitle}");

		var key_entryContent = "${entryContent}";

		AssertTextEquals(locator1 = "BlogsEntry#CONTENT", value1 = "${entryContent}");

		Click(locator1 = "Icon#BODY_VERTICAL_ELLIPSIS");

		MenuItem.viewNotPresent(menuItem = "Edit");
	}

	macro editSubtitle {
		AssertTextEquals(
			locator1 = "AlloyEditor#SUBTITLE_FIELD",
			value1 = "${entrySubtitle}"
		);

		Type.typeEditor(
			locator1 = "AlloyEditor#SUBTITLE_FIELD",
			value1 = "${entrySubtitleEdit}"
		);
	}

	macro editTitle {
		AssertTextEquals(locator1 = "AlloyEditor#TITLE_FIELD", value1 = "${entryTitle}");

		AlloyEditor.addTitle(title = "${entryTitleEdit}");
	}

	macro entryAddPermissions {
		if (isSet(viewableBy)) {
			Select(
				locator1 = "AssetPermissions#VIEWABLE_AS_SELECT",
				value1 = "${viewableBy}"
			);
		}

		if (isSet(permissionDefinitionKey)) {
			if (IsNotVisible(locator1 = "AssetPermissions#HIDE_OPTIONS_LINK")) {
				AssertClick.assertPartialTextClickAt(
					locator1 = "AssetPermissions#MORE_OPTIONS_LINK",
					value1 = "More Options"
				);
			}

			var key_permissionDefinitionKey = "${permissionDefinitionKey}";
			var key_roleName = "${roleName}";

			Check(locator1 = "AssetPermissions#PERMISSIONS_CHECKBOX");
		}
	}

	macro flagPG {
		var key_entryTitle = "${entryTitle}";

		Click(locator1 = "BlogsEntry#FLAG_LINK");

		AssertElementPresent.assertVisible(locator1 = "BlogsEntry#FLAG_MODAL");

		AssertTextEquals(
			locator1 = "ReportContent#WARNING",
			value1 = "You are about to report a violation of our Terms of Use. All reports are strictly confidential."
		);

		AssertTextEquals(
			locator1 = "ReportContent#WARNING_TERMS_OF_USE_LINK",
			value1 = "Terms of Use"
		);

		Select(locator1 = "ReportContent#REASON_SELECT", value1 = "${flagReason}");

		Button.clickSave();

		AssertTextEquals.assertPartialText(
			locator1 = "ReportContent#SUCCESS_MESSAGE",
			value1 = "Although we cannot disclose our final decision, we do review every report and appreciate your effort to make sure ${siteName} is a safe environment for everyone."
		);

		Click(locator1 = "Icon#CLOSE");
	}

	macro moveToRecycleBinCP {
		var key_entryTitle = "${entryTitle}";

		AssertTextEquals(
			locator1 = "Blogs#DESCRIPTIVE_VIEW_ENTRY_TITLE",
			value1 = "${entryTitle}"
		);

		Click(locator1 = "Blogs#DESCRIPTIVE_VIEW_ENTRY_OPTIONS_DROPDOWN");

		PortletEntry.clickMoveToRecycleBin();

		AssertElementPresent(locator1 = "Message#SUCCESS");
	}

	macro moveToRecycleBinDraftCP {
		var key_entryTitle = "${entryTitle}";

		AssertTextEquals(
			locator1 = "Blogs#DESCRIPTIVE_VIEW_ENTRY_TITLE",
			value1 = "${entryTitle}"
		);

		AssertTextEquals(
			locator1 = "Blogs#DESCRIPTIVE_VIEW_ENTRY_STATUS",
			value1 = "Draft"
		);

		Click(locator1 = "Blogs#DESCRIPTIVE_VIEW_ENTRY_OPTIONS_DROPDOWN");

		PortletEntry.clickMoveToRecycleBin();

		AssertElementPresent(locator1 = "Message#SUCCESS");
	}

	macro moveToRecycleBinNoPermissionPG {
		AssertElementNotPresent(locator1 = "Link#MOVE_TO_THE_RECYCLE_BIN");
	}

	macro moveToRecycleBinPG {
		var key_entryContent = "${entryContent}";
		var key_entryTitle = "${entryTitle}";

		AssertTextEquals(locator1 = "BlogsEntry#TITLE", value1 = "${entryTitle}");

		AssertTextEquals(locator1 = "BlogsEntry#CONTENT", value1 = "${entryContent}");

		var key_assetHeader = "${entryTitle}";

		Click(locator1 = "Icon#DESCRIPTIVE_HEADER_VERTICAL_ELLIPSIS");

		PortletEntry.clickMoveToRecycleBin();

		AssertElementPresent(locator1 = "Message#SUCCESS");

		AssertElementNotPresent(locator1 = "BlogsEntry#TITLE");

		AssertElementNotPresent(locator1 = "BlogsEntry#CONTENT");
	}

	macro publishWithInvalidContent {
		AssertClick(locator1 = "Button#PUBLISH", value1 = "Publish");

		AssertTextEquals.assertPartialText(
			locator1 = "BlogsEntry#CONTENT_FIELD_HELPER",
			value1 = "This field is required."
		);

		AssertElementNotPresent(locator1 = "Message#SUCCESS");
	}

	macro publishWithInvalidTitle {
		AssertClick(locator1 = "Button#PUBLISH", value1 = "Publish");

		AssertTextEquals.assertPartialText(
			locator1 = "BlogsEntry#TITLE_FIELD_HELPER",
			value1 = "This field is required to publish the entry."
		);

		AssertElementNotPresent(locator1 = "Message#SUCCESS");
	}

	macro publishWithInvalidTitleLength {
		AssertClick(locator1 = "Button#PUBLISH", value1 = "Publish");

		Alert.viewRequestFailedToComplete();

		AssertTextEquals.assertPartialText(
			locator1 = "Message#ERROR_ENTER_A_VALID_TITLE",
			value1 = "Please enter a valid title."
		);
	}

	macro publishWithWorkflow {
		var key_entryTitle = "${entryTitle}";

		AssertClick(
			locator1 = "Button#SUBMIT_FOR_PUBLICATION",
			value1 = "Submit for Publication"
		);

		Alert.viewSuccessMessage();
	}

	macro rateThumbsDown {
		var key_entryTitle = "${entryTitle}";

		AssertTextEquals(locator1 = "BlogsEntry#TITLE", value1 = "${entryTitle}");

		Click(locator1 = "Ratings#THUMBS_DOWN");
	}

	macro rateThumbsUp {
		var key_entryTitle = "${entryTitle}";

		AssertTextEquals(locator1 = "BlogsEntry#TITLE", value1 = "${entryTitle}");

		Click(locator1 = "Ratings#THUMBS_UP");
	}

	macro removeSmallImage {
		Click(locator1 = "Button#REMOVE_IMAGE");

		AssertElementNotPresent(
			locator1 = "BlogsEntry#SMALL_IMAGE",
			key_smallImage = "${uploadFileName}"
		);

		AssertElementPresent(locator1 = "Button#SELECT_FILE_SMALL_IMAGE");
	}

	macro removeViewPermissionsPG {
		var key_assetHeader = "${entryTitle}";
		var key_roleName = StringUtil.replace("${roleName}", " ", "-");
		var key_roleName = StringUtil.lowerCase("${key_roleName}");

		Click(locator1 = "Icon#DESCRIPTIVE_HEADER_VERTICAL_ELLIPSIS");

		MenuItem.click(menuItem = "Permissions");

		IFrame.selectPermissionsFrame();

		Uncheck(
			locator1 = "Permissions#CONTENT_PERMISSIONS_VIEW_CHECKBOX",
			value1 = "${roleName}"
		);

		Button.clickSave();

		SelectFrame(value1 = "relative=top");
	}

	macro saveAsDraft {
		AssertClick(locator1 = "Button#SAVE_AS_DRAFT", value1 = "Save as Draft");

		Alert.viewSuccessMessage();
	}

	macro scheduleBlogEntry {
		var displayDateDay = selenium.getElementValue("TextInput#DISPLAY_DATE_DAY");
		var displayDateMonth = selenium.getElementValue("TextInput#DISPLAY_DATE_MONTH");
		var displayDateMonth = MathUtil.sum("${displayDateMonth}", "1");
		var displayDateYear = selenium.getElementValue("TextInput#DISPLAY_DATE_YEAR");
		var displayDate = "${displayDateMonth}/${displayDateDay}/${displayDateYear}";

		Type(locator1 = "TextInput#DISPLAY_DATE", value1 = "${displayDate}");

		var displayDateHour = selenium.getElementValue("TextInput#DISPLAY_DATE_HOUR");
		var displayDateHourLength = StringUtil.length("${displayDateHour}");

		if ("${displayDateHourLength}" == "1") {
			var displayDateHour = "0${displayDateHour}";
		}

		var displayDateMinute = selenium.getElementValue("TextInput#DISPLAY_DATE_MINUTE");
		var displayDateMinuteFuture = MathUtil.sum("${displayDateMinute}", "3");
		var displayDateMinuteFutureLength = StringUtil.length("${displayDateMinuteFuture}");

		if ("${displayDateMinuteFutureLength}" == "1") {
			var displayDateMinuteFuture = "0${displayDateMinuteFuture}";
		}

		var displayDateMeridian = selenium.getElementValue("TextInput#DISPLAY_DATE_MERIDIAN");
		var displayDateMeridian = StringUtil.replace("${displayDateMeridian}", "0", "AM");
		var displayDateMeridian = StringUtil.replace("${displayDateMeridian}", "1", "PM");
		var displayTime = "${displayDateHour}:${displayDateMinuteFuture} ${displayDateMeridian}";

		Type(locator1 = "TextInput#DISPLAY_DATE_TIME", value1 = "${displayTime}");
	}

	macro searchCP {
		var key_entryContent = "${entryContent}";
		var key_entryTitle = "${entryTitle}";

		Type(locator1 = "NavBar#BASIC_SEARCH_FIELD", value1 = "${entrySearchTerm}");

		KeyPress(locator1 = "NavBar#BASIC_SEARCH_FIELD", value1 = "\RETURN");

		AssertTextEquals(
			locator1 = "Blogs#DESCRIPTIVE_VIEW_ENTRY_TITLE",
			value1 = "${entryTitle}"
		);
	}

	macro searchNoCP {
		var key_entryContent = "${entryContent}";
		var key_entryTitle = "${entryTitle}";

		Type(locator1 = "NavBar#BASIC_SEARCH_FIELD", value1 = "${entrySearchTerm}");

		KeyPress(locator1 = "NavBar#BASIC_SEARCH_FIELD", value1 = "\RETURN");

		AssertTextEquals(
			locator1 = "Message#EMPTY_INFO",
			value1 = "No entries were found."
		);

		AssertElementNotPresent(locator1 = "Blogs#DESCRIPTIVE_VIEW_ENTRY_TITLE");
	}

	macro selectFormattingStyle {
		SelectFieldText(locator1 = "AlloyEditor#CONTENT_FIELD");

		Click(locator1 = "AlloyEditor#TEXT_FORMATTING_STYLE");

		Click(
			locator1 = "AlloyEditor#TEXT_FORMATTING_STYLE_DROPDOWN",
			key_styleFormat = "${styleFormat}"
		);
	}

	macro subscribePG {
		AssertClick(locator1 = "Link#SUBSCRIBE", value1 = "Subscribe");

		Alert.viewSuccessMessage();
	}

	macro tearDownCP {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Blogs"
		);

		if (IsElementPresent(locator1 = "Message#EMPTY_INFO", value1 = "No entries were found.")) {
			Blogs.viewNoEntryCP();
		}
		else {
			Check.checkAll(locator1 = "Checkbox#SELECT_ALL");

			Click(locator1 = "Icon#MOVE_TO_RECYCLE_BIN");

			AssertElementPresent(locator1 = "Message#SUCCESS");
		}

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Recycle Bin"
		);

		RecycleBin.emptyCP();
	}

	macro viewAbstractDisplay {
		var key_entryAbstractDescription = "${entryAbstractDescription}";
		var key_entryTitle = "${entryTitle}";

		AssertTextEquals(locator1 = "BlogsEntry#TITLE", value1 = "${entryTitle}");

		AssertTextEquals.assertPartialText(
			locator1 = "BlogsEntry#CONTENT_ABSTRACT",
			value1 = "${entryAbstractDescription}"
		);

		AssertTextNotEquals(
			locator1 = "BlogsEntry#CONTENT_GENERIC",
			value1 = "${entryContent}"
		);
	}

	macro viewAsRelatedAssetPG {
		var key_assetTitle = "${assetTitle}";
		var key_entryContent = "${entryContent}";
		var key_entryTitle = "${entryTitle}";

		AssertTextEquals(locator1 = "BlogsEntry#TITLE", value1 = "${entryTitle}");

		AssertTextEquals(locator1 = "BlogsEntry#CONTENT", value1 = "${entryContent}");

		AssertTextEquals(
			locator1 = "AssetRelatedAssets#HEADER",
			value1 = "Related Assets:"
		);

		AssertTextEquals(
			locator1 = "AssetRelatedAssets#ASSET_TITLE",
			value1 = "${assetTitle}"
		);
	}

	macro viewDefaultCP {
		AssertTextEquals(
			locator1 = "Message#EMPTY_INFO",
			value1 = "No entries were found."
		);

		AssertElementNotPresent(locator1 = "Blogs#ENTRY_TABLE_TITLE");
	}

	macro viewDisabledSocialBookmarkSites {
		AssertElementNotPresent(locator1 = "Icon#SHARE");
	}

	macro viewEnabledSocialBookmarkSites {
		Click(locator1 = "Icon#SHARE");

		for (var socialBookmarkSite : list "${socialBookmarkSites}") {
			var key_socialBookmarkSite = "${socialBookmarkSite}";

			AssertElementPresent(locator1 = "SocialBookmarks#SOCIAL_BOOKMARKS_SITE_LINK");
		}
	}

	macro viewEntry {
		var key_entryContent = "${entryContent}";
		var key_entrySubtitle = "${entrySubtitle}";
		var key_entryTitle = "${entryTitle}";
		var key_uploadFileName = "${uploadFileName}";

		Pause(locator1 = "3000");

		AssertTextEquals(locator1 = "BlogsEntry#TITLE", value1 = "${entryTitle}");

		if (isSet(entrySubtitle)) {
			AssertTextEquals(locator1 = "BlogsEntry#SUBTITLE", value1 = "${entrySubtitle}");
		}

		if (isSet(uploadFileName)) {
			AssertElementPresent(locator1 = "BlogsEntry#ENTRY_COVER_IMAGE");
		}

		if (isSet(entryContent)) {
			AssertTextEquals(locator1 = "BlogsEntry#CONTENT", value1 = "${entryContent}");
		}

		if (isSet(entryContentBold)) {
			AssertTextEquals.assertPartialText(
				locator1 = "BlogsEntry#CONTENT_HTML_BOLD",
				value1 = "${entryContentBold}"
			);
		}

		if (isSet(entryContentItalics)) {
			AssertTextEquals.assertPartialText(
				locator1 = "BlogsEntry#CONTENT_HTML_ITALICS",
				value1 = "${entryContentItalics}"
			);
		}
	}

	macro viewEntryAsWorkflowAsset {
		SiteAdmin.viewPortletTitle(portletTitle = "${entryTitle}");

		var key_entryContent = "${entryContent}";

		AssertTextEquals(locator1 = "BlogsEntry#CONTENT", value1 = "${entryContent}");
	}

	macro viewEntryAuthorCP {
		var entryAuthorFullName = "${entryAuthorFullName}";
		var key_entryTitle = "${entryTitle}";

		AssertTextEquals(
			locator1 = "Blogs#ENTRY_TABLE_AUTHOR",
			value1 = "${entryAuthorFullName}"
		);
	}

	macro viewEntryExternalURL {
		BlogsNavigator.gotoEditCP(entryTitle = "${entryTitle}");

		DoubleClick(
			locator1 = "BlogsEntry#CONTENT_LINK",
			key_entryContent = "${entryContent}"
		);

		Click(locator1 = "AlloyEditor#TEXT_FORMATTING_LINK");

		AssertTextEquals(
			locator1 = "AlloyEditor#TEXT_FORMATTING_LINK_INPUT",
			value1 = "${entryExternalURL}"
		);
	}

	macro viewEntryTable {
		var key_entryTitle = "${entryTitle}";

		Portlet.changeDisplayStyle(displayStyle = "List");

		AssertElementPresent(locator1 = "Blogs#ENTRY_TABLE_CHECKBOX");

		AssertTextEquals(locator1 = "Blogs#ENTRY_TABLE_TITLE", value1 = "${entryTitle}");

		AssertElementPresent(locator1 = "Blogs#ENTRY_TABLE_CREATE_DATE");

		AssertTextEquals(locator1 = "Blogs#ENTRY_TABLE_STATUS", value1 = "Approved");
	}

	macro viewEntryViaAPPG {
		var key_assetContent = "${entryContent}";
		var key_assetTitle = "${assetTitle}";

		AssertClick(locator1 = "AP#ASSET_ABSTRACT_TITLE", value1 = "${entryTitle}");

		AssertTextEquals(
			locator1 = "APAsset#ASSET_TITLE_HEADER",
			value1 = "${entryTitle}"
		);

		AssertTextEquals.assertPartialText(
			locator1 = "APAsset#ASSET_CONTENT",
			value1 = "${entryContent}"
		);
	}

	macro viewInlineImage {
		var key_uploadFileName = "${uploadFileName}";

		AssertVisible(
			locator1 = "BlogsEntry#CONTENT_INLINE_IMAGE",
			value1 = "${uploadFileName}"
		);
	}

	macro viewNoAddPermissions {
		AssertElementNotPresent(locator1 = "Blogs#ADD_BLOGS_ENTRY");
	}

	macro viewNoCP {
		var key_entryTitle = "${entryTitle}";

		AssertElementNotPresent(locator1 = "Blogs#ENTRY_TABLE_TITLE");
	}

	macro viewNoEntryAsGuestPG {
		var key_entryTitle = "${entryTitle}";

		AssertElementNotPresent(locator1 = "BlogsEntry#TITLE");
	}

	macro viewNoEntryViaAPPG {
		var key_assetTitle = "${assetTitle}";

		AssertTextNotPresent(
			locator1 = "AP#ASSET_ABSTRACT_TITLE",
			value1 = "${entryTitle}"
		);

		AssertTextNotPresent(
			locator1 = "AP#ASSET_ABSTRACT_DESCRIPTION",
			value1 = "${entryContent}"
		);
	}

	macro viewNoEntryViaBlogsAggregatorPG {
		AssertElementPresent(locator1 = "BlogsAggregator#NO_ENTRY_MESSAGE");
	}

	macro viewNoPG {
		var key_entryTitle = "${entryTitle}";

		AssertElementNotPresent(locator1 = "BlogsEntry#TITLE");
	}

	macro viewNoTag {
		var key_entryTitle = "${entryTitle}";

		if (isSet(tagNameList)) {
			for (var tagName : list "${tagNameList}") {
				var tagName = StringUtil.lowerCase("${tagName}");
				var key_tagName = "${tagName}";

				AssertElementNotPresent(locator1 = "BlogsEntry#TAG");
			}
		}
		else {
			var tagName = StringUtil.lowerCase("${tagName}");
			var key_tagName = "${tagName}";

			AssertElementNotPresent(locator1 = "BlogsEntry#TAG");
		}
	}

	macro viewPermissionsNoPermission {
		AssertElementNotPresent(locator1 = "Link#PERMISSIONS");
	}

	macro viewPermissionsNoPermissionPG {
		var key_entryTitle = "${entryTitle}";

		MenuItem.viewNotPresent(menuItem = "Permissions");
	}

	macro viewPermissionsPG {
		LexiconEntry.gotoEllipsisMenuItem(menuItem = "Permissions");

		IFrame.selectPermissionsFrame();

		SelectFrame(value1 = "relative=top");
	}

	macro viewPG {
		var key_entryContent = "${entryContent}";
		var key_entryTitle = "${entryTitle}";

		AssertTextEquals(locator1 = "BlogsEntry#TITLE", value1 = "${entryTitle}");

		if (isSet(entrySubtitle)) {
			AssertTextEquals(locator1 = "BlogsEntry#SUBTITLE", value1 = "${entrySubtitle}");
		}

		var key_entryContent = "${entryContent}";

		AssertTextEquals(locator1 = "BlogsEntry#CONTENT", value1 = "${entryContent}");
	}

	macro viewPGViaAP {
		var key_assetContent = "${entryContent}";
		var key_assetTitle = "${entryTitle}";

		AssertTextEquals(locator1 = "AP#ASSET_ABSTRACT_TITLE", value1 = "${entryTitle}");

		AssertTextEquals.assertPartialText(
			locator1 = "AP#ASSET_ABSTRACT_DESCRIPTION",
			value1 = "${entryContent}"
		);

		AssertClick(locator1 = "AP#ASSET_ABSTRACT_TITLE", value1 = "${entryTitle}");

		AssertVisible(locator1 = "Icon#SHARE");

		AssertTextEquals(
			locator1 = "APAsset#ASSET_TITLE_HEADER",
			value1 = "${entryTitle}"
		);

		AssertTextEquals.assertPartialText(
			locator1 = "APAsset#ASSET_CONTENT",
			value1 = "${entryContent}"
		);
	}

	macro viewRelatedAssetPG {
		var key_assetTitle = "${assetTitle}";
		var key_assetType = "${assetType}";
		var key_entryTitle = "${entryTitle}";

		AssertTextEquals(locator1 = "BlogsEntry#TITLE", value1 = "${entryTitle}");

		AssertTextEquals(
			locator1 = "AssetRelatedAssets#HEADER",
			value1 = "Related Assets:"
		);

		AssertTextEquals(
			locator1 = "BlogsEntry#RELATED_ASSETS_TITLE",
			value1 = "${assetTitle}"
		);
	}

	macro viewRSS {
		AssertClick(locator1 = "Link#RSS", value1 = "RSS");

		Pause(locator1 = "3000");

		SelectWindow(locator1 = "title=${siteName}");

		AssertTextEquals(locator1 = "RSS#FEED_TITLE", value1 = "${siteName}");

		AssertTextEquals(locator1 = "RSS#FEED_SUBTITLE", value1 = "${siteName}");

		AssertTextEquals(locator1 = "Blogs#RSS_ENTRY_TITLE", value1 = "${entryTitle}");

		AssertTextEquals(
			locator1 = "Blogs#RSS_ENTRY_CONTENT",
			value1 = "${entryContent}"
		);
	}

	macro viewStatus {
		AssertTextEquals(
			locator1 = "AssetWorkflow#WORKFLOW_STATUS",
			value1 = "${entryStatus}"
		);
	}

	macro viewTag {
		var key_entryTitle = "${entryTitle}";

		if (isSet(tagNameList)) {
			for (var tagName : list "${tagNameList}") {
				var tagName = StringUtil.lowerCase("${tagName}");
				var key_tagName = "tagName";

				AssertTextEquals(locator1 = "BlogsEntry#TAG", value1 = "${tagName}");

				AssertClick(locator1 = "BlogsEntry#TAG", value1 = "${tagName}");

				AssertTextEquals.assertPartialText(
					locator1 = "AssetCategorization#TAG_FILTER_TITLE",
					value1 = "Entries with tag ${tagName}"
				);

				AssertTextEquals(locator1 = "BlogsEntry#TITLE", value1 = "${entryTitle}");
			}
		}
		else {
			var tagName = StringUtil.lowerCase("${tagName}");
			var key_tagName = "tagName";

			AssertTextEquals(locator1 = "BlogsEntry#TAG", value1 = "${tagName}");

			AssertClick(locator1 = "BlogsEntry#TAG", value1 = "${tagName}");

			AssertTextEquals.assertPartialText(
				locator1 = "AssetCategorization#TAG_FILTER_TITLE",
				value1 = "Entries with tag ${tagName}"
			);

			AssertTextEquals(locator1 = "BlogsEntry#TITLE", value1 = "${entryTitle}");
		}
	}

	macro viewTagPG {
		var key_entryTitle = "${entryTitle}";

		if (isSet(tagNameList)) {
			for (var tagName : list "${tagNameList}") {
				var tagName = StringUtil.lowerCase("${tagName}");
				var key_tagName = "${tagName}";

				AssertClick(locator1 = "BlogsEntry#TAG", value1 = "${tagName}");

				AssertTextEquals.assertPartialText(
					locator1 = "AssetCategorization#TAG_FILTER_TITLE",
					value1 = "Entries with tag ${tagName}"
				);

				AssertTextEquals(locator1 = "BlogsEntry#TITLE", value1 = "${entryTitle}");
			}
		}
		else {
			var tagName = StringUtil.lowerCase("${tagName}");
			var key_tagName = "${tagName}";

			AssertClick(locator1 = "BlogsEntry#TAG", value1 = "${tagName}");

			AssertTextEquals.assertPartialText(
				locator1 = "AssetCategorization#TAG_FILTER_TITLE",
				value1 = "Entries with tag ${tagName}"
			);

			AssertTextEquals(locator1 = "BlogsEntry#TITLE", value1 = "${entryTitle}");
		}
	}

	macro viewThumbsDown {
		var key_entryTitle = "${entryTitle}";

		AssertTextEquals(locator1 = "BlogsEntry#TITLE", value1 = "${entryTitle}");

		AssertTextEquals(locator1 = "Ratings#THUMBS_DOWN", value1 = "${voteCount}");
	}

	macro viewThumbsUp {
		var key_entryTitle = "${entryTitle}";

		AssertTextEquals(locator1 = "BlogsEntry#TITLE", value1 = "${entryTitle}");

		AssertTextEquals(locator1 = "Ratings#THUMBS_UP", value1 = "${voteCount}");
	}

	macro viewTitle {
		var key_entryTitle = "${entryTitle}";

		AssertTextEquals(locator1 = "BlogsEntry#TITLE", value1 = "${entryTitle}");
	}

	macro viewViewCountPG {
		Navigator.gotoPage(pageName = "${pageName}");

		var key_entryTitle = "${entryTitle}";

		AssertClick(locator1 = "BlogsEntry#TITLE_LINK", value1 = "${entryTitle}");

		AssertElementPresent.pauseAssertVisible(
			locator1 = "Comments#SUBSCRIBE_TO_COMMENTS_LINK"
		);

		Navigator.gotoPage(pageName = "${pageName}");

		AssertClick(locator1 = "BlogsEntry#TITLE_LINK", value1 = "${entryTitle}");

		AssertElementPresent.pauseAssertVisible(
			locator1 = "Comments#SUBSCRIBE_TO_COMMENTS_LINK"
		);

		var entryViewCount = selenium.getText("BlogsEntry#ENTRY_VIEW_COUNT");
		var entryViewCount = StringUtil.extractLast("${entryViewCount}", ",");
		var entryViewCount = StringUtil.extractDigits("${entryViewCount}");

		if ("${entryViewCount}" == "1") {
			AssertTextEquals.assertPartialText(
				locator1 = "BlogsEntry#ENTRY_VIEW_COUNT",
				value1 = "${entryViewCount} View"
			);
		}
		else {
			AssertTextEquals.assertPartialText(
				locator1 = "BlogsEntry#ENTRY_VIEW_COUNT",
				value1 = "${entryViewCount} Views"
			);
		}

		Navigator.gotoPage(pageName = "${pageName}");

		AssertClick(locator1 = "BlogsEntry#TITLE_LINK", value1 = "${entryTitle}");

		var entryViewCount = MathUtil.sum("${entryViewCount}", "1");

		AssertTextEquals.assertPartialText(
			locator1 = "BlogsEntry#ENTRY_VIEW_COUNT",
			value1 = "${entryViewCount} Views"
		);
	}

	macro viewWithAbstractDisplayTemplatePG {
		var key_entryAbstractDescription = "${entryAbstractDescription}";
		var key_entryTitle = "${entryTitle}";

		AssertTextEquals(locator1 = "BlogsEntry#TITLE", value1 = "${entryTitle}");

		AssertTextEquals.assertPartialText(
			locator1 = "BlogsEntry#CONTENT_ABSTRACT",
			value1 = "${entryAbstractDescription}"
		);
	}

	macro viewWithTitleDisplayTemplatePG {
		var key_entryTitle = "${entryTitle}";

		AssertTextEquals(locator1 = "BlogsEntry#TITLE", value1 = "${entryTitle}");

		AssertTextNotPresent(
			locator1 = "BlogsEntry#CONTENT",
			value1 = "${entryContent}"
		);
	}

	macro viewWithTrackbackURLPG {
		BlogsEntry.viewPG(
			entryContent = "${entryContent}",
			entryTitle = "${entryTitle}"
		);

		var key_entryContent = "${entryContent}";
		var key_entryTitle = "${entryTitle}";

		if (IsTextEqual(locator1 = "Blogs#ENTRY_COMMENTS_COUNT", value1 = "2")) {
			AssertTextEquals(locator1 = "Blogs#ENTRY_COMMENTS_COUNT", value1 = "2");
		}
		else {
			AssertTextEquals(locator1 = "Blogs#ENTRY_COMMENTS_COUNT", value1 = "1");
		}

		AssertClick(locator1 = "BlogsEntry#TITLE_LINK", value1 = "${entryTitle}");

		AssertTextEquals(locator1 = "BlogsEntry#TITLE", value1 = "${entryTitle}");

		AssertTextEquals(locator1 = "BlogsEntry#CONTENT", value1 = "${entryContent}");

		AssertTextEquals(locator1 = "Comments#ENTRY_COUNT_PANEL", value1 = "1 Comments");

		AssertTextEquals(
			locator1 = "Comments#COMMENT_BODY",
			value1 = "[...] ${entryContent2} [...] Read More"
		);

		AssertClick(locator1 = "Link#READ_MORE", value1 = "Read More");

		var key_entryContent = "${entryContent2}";
		var key_entryTitle = "${entryTitle2}";

		AssertTextEquals(locator1 = "BlogsEntry#TITLE", value1 = "${entryTitle2}");

		AssertTextEquals(locator1 = "BlogsEntry#CONTENT", value1 = "${entryContent2}");
	}

	macro viewWithWorkflowCP {
		var key_entryTitle = "${entryTitle}";

		Portlet.changeDisplayStyle(displayStyle = "List");

		AssertTextEquals(locator1 = "Blogs#ENTRY_TABLE_TITLE", value1 = "${entryTitle}");

		AssertTextEquals(locator1 = "Blogs#ENTRY_TABLE_STATUS", value1 = "Pending");
	}

	macro viewWithWorkflowPGViaAP {
		var key_assetTitle = "${entryTitle}";

		AssertElementNotPresent(locator1 = "AP#ASSET_ABSTRACT_TITLE");
	}
}