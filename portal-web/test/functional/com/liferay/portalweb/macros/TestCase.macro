definition {
	macro getFileContent {
		var baseDir = PropsUtil.get("test.base.dir.name");
		var dependenciesDir = PropsUtil.get("test.dependencies.dir.name");
		var fileContent = FileUtil.read("${baseDir}${dependenciesDir}/${fileName}");

		return "${fileContent}";
	}

	macro getSiteName {
		var testNameSkipPortalInstance = PropsUtil.get("test.name.skip.portal.instance");
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if (("${siteName}" == "Liferay") || (!(isSet(siteName)))) {
			if (("${testPortalInstance}" == "true") && (!(IsTestName(locator1 = "", value1 = "${testNameSkipPortalInstance}")))) {
				var portalURL = PropsUtil.get("portal.url");
				var portalURL = StringUtil.replace("${portalURL}", "http://", "");
				var portalURL = StringUtil.replace("${portalURL}", ":8080", "");

				return "${portalURL}";
			}
			else {
				var testRunEnvironment = PropsUtil.get("test.run.environment");

				if ("${testRunEnvironment}" == "EE") {
					return "Liferay DXP";
				}
				else {
					return "Liferay";
				}
			}
		}
		else {
			return "${siteName}";
		}
	}

	macro setUpPortalInstance {
		var testNameSkipPortalInstance = PropsUtil.get("test.name.skip.portal.instance");
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if (("${testPortalInstance}" == "true") && (!(IsTestName(locator1 = "", value1 = "${testNameSkipPortalInstance}")))) {
			SignIn.signInPortalInstanceSetUp();
		}
	}
}