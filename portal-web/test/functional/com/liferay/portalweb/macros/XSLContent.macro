definition {
	macro configureConfigurationAdminXSL {
		SystemSettings.gotoCategory(category = "Web Experience");

		var key_configurationAdminName = "XSL Content Options";

		while (IsElementNotPresent(locator1 = "ConfigurationAdmin#CONFIGURATION_ADMIN_NAME_LINK")) {
			Click(locator1 = "Icon#CARET_RIGHT");

			Pause(value1 = "1000");
		}

		Click(locator1 = "ConfigurationAdmin#CONFIGURATION_ADMIN_NAME_LINK");

		Type(locator1 = "TextArea#URL", value1 = "@portlet_context_url@,@portal_url@");

		Check(
			locator1 = "ConfigurationAdmin#XSL_CONTENT_CONFIGURATION_XML_DOCTYPE_DECLARATION_CHECKBOX"
		);

		Click(locator1 = "Button#SAVE");

		Alert.viewSuccessMessage();
	}

	macro gotoDocumentURL {
		var key_dmDocumentTitle = "${dmDocumentTitle}";

		AssertClick(
			locator1 = "DocumentsAndMedia#ICON_DOCUMENT_TITLE_LINK",
			value1 = "${dmDocumentTitle}"
		);

		AssertTextEquals(
			locator1 = "DocumentsAndMediaDocument#DOCUMENT_INFO_UPLOADED_BY",
			value1 = "Test Test"
		);

		Click(locator1 = "Icon#INFO");

		ClickNoError(locator1 = "Link#URL");

		Pause(locator1 = "5000");
	}

	macro viewConfigurationXSLContent {
		IFrame.selectDialogFrame();

		AssertTextEquals(
			locator1 = "TextInput#SETUP_XML_URL",
			value1 = "@portlet_context_url@/example.xml"
		);

		AssertTextEquals(
			locator1 = "TextInput#SETUP_XSL_URL",
			value1 = "@portlet_context_url@/example.xsl"
		);

		SelectFrameTop(value1 = "relative=top");
	}

	macro viewConsoleError {
		AssertConsoleTextPresent(value1 = "${consoleTextError}");
	}

	macro viewErrorMessage {
		AssertTextEquals(
			locator1 = "Message#ERROR",
			value1 = "An error occurred while processing your XML and XSL."
		);
	}

	macro viewXSLPortletHymnDisplay {
		AssertTextEquals(
			locator1 = "XSLContentPortlet#TITLE",
			value1 = "My Hymn Collection"
		);

		AssertTextEquals(
			locator1 = "XSLContentPortlet#TABLE_TITLE_HEADER",
			value1 = "Title"
		);

		AssertTextEquals(
			locator1 = "XSLContentPortlet#TABLE_ARTIST_HEADER",
			value1 = "Artist"
		);

		AssertTextEquals(
			locator1 = "XSLContentPortlet#TABLE_COUNTRY_HEADER",
			value1 = "Country"
		);

		AssertTextEquals(
			locator1 = "XSLContentPortlet#TABLE_YEAR_HEADER",
			value1 = "Year"
		);

		var key_titleEntry = "${tableTitleEntry}";

		AssertTextEquals(
			locator1 = "XSLContentPortlet#TABLE_TITLE_ENTRY",
			value1 = "${tableTitleEntry}"
		);

		AssertTextEquals(
			locator1 = "XSLContentPortlet#TABLE_ARTIST_ENTRY",
			value1 = "${tableArtistEntry}"
		);

		AssertTextEquals(
			locator1 = "XSLContentPortlet#TABLE_COUNTRY_ENTRY",
			value1 = "${tableCountryEntry}"
		);

		AssertTextEquals(
			locator1 = "XSLContentPortlet#TABLE_YEAR_ENTRY",
			value1 = "${tableYearEntry}"
		);
	}
}