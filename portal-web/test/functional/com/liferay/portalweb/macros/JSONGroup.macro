definition {

	macro _addGroup {

		if (isSet(groupDescription)) {
			var groupDescriptionEncoded = URLUtil.encode("${groupDescription}", "UTF-8");

			var groupDescriptionMap = '''{"en_US":"${groupDescriptionEncoded}"}''';
		}
		else {
			var groupDescriptionMap = "{}";
		}

		if (isSet(groupName)) {
			var groupNameEncoded = URLUtil.encode("${groupName}", "UTF-8");

			var groupNameMap = '''{"en_US":"${groupNameEncoded}"}''';
		}
		else {
			fail("Please set 'groupName'.");
		}

		var portalURL = JSONCompany.getPortalURL();

		var curl = '''
			${portalURL}/api/jsonws/group/add-group \
				-u test@liferay.com:test \
				-d parentGroupId=0 \
				-d liveGroupId=0 \
				-d nameMap=${groupNameMap} \
				-d descriptionMap=${groupDescriptionMap} \
				-d type=1 \
				-d manualMembership=true \
				-d membershipRestriction=0 \
				-d friendlyURL= \
				-d site=true \
				-d inheritContent=false \
				-d active=true
		''';

		echo("## Adding a 'Group' with the following info using JSONWS:");

		if (isSet(groupDescription)) {
			echo("## * Group Description: ${groupDescription}");
		}

		echo("## * Group Name: ${groupName}");

		var groupId = JSONCurlUtil.post("${curl}", "$['groupId']");
	}

	macro _assignGroupRoleToUser {
		if (!(isSet(groupId))) {
			fail("Please set 'groupId'.");
		}

		if (!(isSet(roleId))) {
			fail("Please set 'roleId'.");
		}

		if (!(isSet(userId))) {
			fail("Please set 'userId'.");
		}

		var portalURL = JSONCompany.getPortalURL();

		var curl = '''
			${portalURL}/api/jsonws/usergrouprole/add-user-group-roles \
				-u test@liferay.com:test \
				-d roleId=${roleId} \
				-d groupId=${groupId} \
				-d userIds=${userId}
		''';

		var groupName = JSONGroup.getGroupName(groupId = "${groupId}");

		var roleName = JSONRole.getRoleName(roleId = "${roleId}");

		var userEmailAddress = JSONUser.getUserEmailAddress(userId = "${userId}");

		echo("## Assign a 'Group Role' to a 'User' with the following info using JSONWS:");

		echo("## * Group Name: ${groupName}");

		echo("## * Role Name: ${roleName}");

		echo("## * User Email Address: ${userEmailAddress}");

		var temp = JSONCurlUtil.post("${curl}", "$");
	}

	macro _assignUserToGroup {
		if (!(isSet(groupId))) {
			fail("Please set 'groupId'.");
		}

		if (!(isSet(userId))) {
			fail("Please set 'userId'.");
		}

		var portalURL = JSONCompany.getPortalURL();

		var curl = '''
			${portalURL}/api/jsonws/user/add-group-users \
				-u test@liferay.com:test \
				-d groupId=${groupId} \
				-d userIds=${userId}
		''';

		var groupName = JSONGroup.getGroupName(groupId = "${groupId}");

		var userEmailAddress = JSONUser.getUserEmailAddress(userId = "${userId}");

		echo("## Assigning a 'User' to an 'Group' with the following info using JSONWS:");

		echo("## * Group Name: ${groupName}");

		echo("## * User Email Address: ${userEmailAddress}");

		var temp = JSONCurlUtil.post("${curl}", "$");
	}

	macro _deleteGroup {
		if (!(isSet(groupId))) {
			fail("Please set 'groupId'.");
		}

		var groupName = JSONGroup.getGroupName(groupId = "${groupId}");

		echo("## Deleting a 'Group' with the following info using JSONWS:");

		echo("## * Group Name: ${groupName}");

		var portalURL = JSONCompany.getPortalURL();

		var curl = '''
			${portalURL}/api/jsonws/group/delete-group \
				-u test@liferay.com:test \
				-d groupId=${groupId}
		''';
		var temp = JSONCurlUtil.post("${curl}", "$");
	}

	macro addGroup {
		if (!(isSet(groupName))) {
			fail("Please set 'groupName'.");
		}

		JSONGroup._addGroup(
			groupDescription = "${groupDescription}",
			groupName = "${groupName}"
		);
	}

	macro assignGroupRoleToUser {
		if (!(isSet(groupName))) {
			fail("Please set 'groupName'.");
		}

		if (!(isSet(roleName))) {
			fail("Please set 'roleName'.");
		}

		if (!(isSet(userEmailAddress))) {
			fail("Please set 'userEmailAddress'.");
		}

		var groupId = JSONGroup.getGroupIdByName(groupName = "${groupName}");

		var roleId = JSONRole.getRoleIdByName(roleName = "${roleName}");

		var userId = JSONUser.getUserIdByEmailAddress(userEmailAddress = "${userEmailAddress}");

		JSONGroup._assignGroupRoleToUser(
			groupId = "${groupId}",
			roleId = "${roleId}",
			userId = "${userId}"
		);
	}

	macro assignUserToGroup {
		if (!(isSet(groupName))) {
			fail("Please set 'groupName'.");
		}

		if (!(isSet(userEmailAddress))) {
			fail("Please set 'userEmailAddress'.");
		}

		var groupId = JSONGroup.getGroupIdByName(groupName = "${groupName}");

		var userId = JSONUser.getUserIdByEmailAddress(userEmailAddress = "${userEmailAddress}");

		JSONGroup._assignUserToGroup(groupId = "${groupId}", userId = "${userId}");
	}

	macro deleteGroupByName {
		if (!(isSet(groupName))) {
			fail("Please set 'groupName'.");
		}

		var groupId = JSONGroup.getGroupIdByName(groupName = "${groupName}");

		JSONGroup._deleteGroup(groupId = "${groupId}");
	}

	macro getGroupIdByName {
		if (!(isSet(groupName))) {
			fail("Please set 'groupName'.");
		}

		var companyId = JSONCompany.getCompanyId();

		var portalURL = JSONCompany.getPortalURL();

		var curl = '''
			${portalURL}/api/jsonws/group/get-groups/company-id/${companyId}/parent-group-id/0/site/true \
				-u test@liferay.com:test
		''';
		var groupId = JSONCurlUtil.get("${curl}", "$.[?(@['nameCurrentValue'] == '${groupName}')]['groupId']");
		var groupId = StringUtil.replace("${groupId}", "[&quot;", "");
		var groupId = StringUtil.replace("${groupId}", "&quot;]", "");

		return "${groupId}";
	}

	macro getGroupName {
		if (!(isSet(groupId))) {
			fail("Please set 'groupId'.");
		}

		var companyId = JSONCompany.getCompanyId();

		var portalURL = JSONCompany.getPortalURL();

		var curl = '''
			${portalURL}/api/jsonws/group/get-group/group-id/${groupId} \
				-u test@liferay.com:test
		''';
		var groupName = JSONCurlUtil.get("${curl}", "$['nameCurrentValue']");

		return "${groupName}";
	}
}