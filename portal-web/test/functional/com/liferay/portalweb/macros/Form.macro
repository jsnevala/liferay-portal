definition {
	var columnSize = "12";
	var formDescription = "Created Form Description";
	var formName = "Created Form Name";
	var rowNumber = "1";

	macro addColumn {
		var key_columnLineNumber = "${columnLineNumber}";
		var key_rowNumber = "${rowNumber}";

		MouseOver.mouseOverNotVisible(locator1 = "Form#ADD_COLUMN_RIGHT");

		DragAndDrop.dragAndDropToObjectNotVisible(
			locator1 = "Form#ADD_COLUMN_RIGHT",
			locator2 = "Form#ADD_COLUMN_LINE",
			value1 = ""
		);
	}

	macro addPage {
		Click(locator1 = "Form#PAGE_CONTROLS_ELLIPSIS_ICON");

		AssertClick(
			locator1 = "Form#PAGE_CONTROLS_ADD_NEW_PAGE",
			value1 = "Add New Page"
		);
	}

	macro clickPublishSwitcher {
		Click(locator1 = "Form#PUBLISH_FORM_SWITCHER");
	}

	macro configureEmailNotifications {
		AssertClick(
			locator1 = "Form#SETTINGS_TAB_EMAIL_NOTIFICATIONS",
			value1 = "Email Notifications"
		);

		FormFields.enableSwitcher(fieldName = "sendEmailNotification");

		FormFields.editText(fieldName = "emailFromName", fieldValue = "${fromName}");

		FormFields.editText(
			fieldName = "emailFromAddress",
			fieldValue = "${fromAddress}"
		);

		FormFields.editText(fieldName = "emailToAddress", fieldValue = "${toAddress}");

		FormFields.editText(fieldName = "emailSubject", fieldValue = "${subject}");

		Button.clickDone();
	}

	macro configureRequireCaptcha {
		FormFields.enableSwitcher(fieldName = "requireCaptcha");

		Button.clickDone();
	}

	macro configureWorkflow {
		Select(
			locator1 = "AssetWorkflow#ALL_STRUCTURES_WORKFLOW_SELECT",
			value1 = "${workflowDefinition}"
		);

		Button.clickDone();
	}

	macro editDescription {
		Click(locator1 = "Form#DESCRIPTION_FIELD");

		Type.typeAceEditor(
			locator1 = "Form#DESCRIPTION_FIELD",
			value1 = "${formDescription}"
		);
	}

	macro editFieldDataProvider {
		FormFields.selectRadioOption(
			fieldName = "dataSourceType",
			radioOption = "From Data Provider"
		);

		FormFields.selectSelectOption(
			fieldName = "ddmDataProviderInstanceId",
			selectOption = "${dataProvider}"
		);
	}

	macro editFieldLabel {
		FormFields.editText(fieldName = "label", fieldValue = "${fieldValue}");

		var fieldName = StringUtil.replace("${fieldValue}", " ", "");

		FormFields.viewFieldName(fieldName = "${fieldName}");
	}

	macro editName {
		var key_columnSize = "${columnSize}";

		AssertVisible(locator1 = "Form#ADD_FIELD");

		AssertVisible(locator1 = "Form#NAME_FIELD");

		AssertVisible(locator1 = "Form#DESCRIPTION_FIELD");

		Pause(locator1 = "5000");

		Click(locator1 = "Form#NAME_FIELD");

		Type.typeEditor(locator1 = "AlloyEditor#NAME_FIELD", value1 = "${formName}");
	}

	macro editPageTitle {
		Type(locator1 = "Form#PAGE_TITLE_FIELD", value1 = "${formPageName}");
	}

	macro gotoAddField {
		var key_columnSize = "${columnSize}";

		Click.makeVisibleClickAt(locator1 = "Form#ADD_FIELD");

		var key_fieldType = "${fieldType}";

		AssertClick(locator1 = "Form#ADD_FIELD_TYPE", value1 = "${fieldType}");
	}

	macro previewForm {
		Navigator.selectSpecificWindow(windowTitle = "Form - Forms");

		var key_formName = "${formName}";

		AssertTextEquals(
			locator1 = "Form#PUBLISH_FORM_NAME_FIELD",
			value1 = "${formName}"
		);

		FormFields.viewTextLabel(
			fieldLabel = "${fieldLabel}",
			fieldName = "${fieldName}"
		);

		FormFields.editText(fieldName = "${fieldName}", fieldValue = "${fieldValue}");

		FormFields.viewTextValue(
			fieldName = "${fieldName}",
			fieldValue = "${fieldValue}"
		);

		AssertElementNotPresent(locator1 = "Button#SUBMIT_1");
	}

	macro save {
		AssertClick(locator1 = "Form#SAVE_BUTTON", value1 = "Save");

		Alert.viewSuccessMessage();
	}

	macro submitFormPublish {
		Form.viewFormPublish(fieldLabel = "${fieldLabel}", fieldName = "${fieldName}");

		FormFields.editText(
			fieldLabel = "${fieldLabel}",
			fieldName = "${fieldName}",
			fieldValue = "${fieldValue}"
		);

		AssertClick(locator1 = "Button#SUBMIT_1", value1 = "Submit");

		Alert.viewSuccessMessage();
	}

	macro viewFormName {
		AssertTextEquals(locator1 = "Form#NAME_FIELD", value1 = "${formName}");
	}

	macro viewFormNotPublished {
		FormsAdminNavigator.openPublishURL();

		AssertTextEquals(
			locator1 = "Message#ERROR_3_ALT",
			value1 = "This form is not available or it was not published."
		);
	}

	macro viewFormPublish {
		FormsAdminNavigator.openPublishURL();

		var key_formName = "${formName}";

		AssertTextEquals(
			locator1 = "Form#PUBLISH_FORM_NAME_FIELD",
			value1 = "${formName}"
		);

		FormFields.viewTextLabel(
			fieldLabel = "${fieldLabel}",
			fieldName = "${fieldName}"
		);
	}
}