definition {
	@description = "The Solr Admin Dashboard is accessible only if the Solr server is successfully running."
	macro viewAdminDashboard {
		Navigator.openSpecificURL(url = "http://localhost:8983/solr");

		AssertElementPresent.assertVisible(locator1 = "SolrAdminDashboard#LOGO");

		AssertTextEquals(
			locator1 = "SolrAdminDashboard#VERSIONS_SOLR_SPEC",
			value1 = "${solrVersion}"
		);

		AssertTextEquals.assertPartialText(
			locator1 = "SolrAdminDashboard#VERSIONS_SOLR_IMPL",
			value1 = "${solrVersion}"
		);
	}

	macro viewLiferayCloudDashboard {
		Navigator.openSpecificURL(url = "http://localhost:8983/solr/#/~cloud");

		AssertVisible(locator1 = "SolrAdminDashboard#MENU_CLOUD");

		var key_cloudCollectionName = "${cloudCollectionName}";

		AssertVisible(locator1 = "SolrAdminDashboard#CLOUD_COLLECTION");
	}

	macro viewLiferayCoreAdminDashboard {
		Navigator.openSpecificURL(url = "http://localhost:8983/solr/#/~cores/liferay");

		var key_coreName = "${coreName}";

		AssertTextEquals(
			locator1 = "SolrAdminDashboard#CORE_ADMIN_CORE_NAVIGATION",
			value1 = "liferay"
		);

		AssertTextEquals.assertPartialText(
			locator1 = "SolrAdminDashboard#CORE_ADMIN_CONTENT_INSTANCE_DIR",
			value1 = "solr-${solrVersion}"
		);

		AssertTextEquals.assertPartialText(
			locator1 = "SolrAdminDashboard#CORE_ADMIN_CONTENT_INSTANCE_DIR",
			value1 = "liferay"
		);

		AssertTextEquals.assertPartialText(
			locator1 = "SolrAdminDashboard#CORE_ADMIN_CONTENT_DATA_DIR",
			value1 = "solr-${solrVersion}"
		);

		AssertTextEquals.assertPartialText(
			locator1 = "SolrAdminDashboard#CORE_ADMIN_CONTENT_DATA_DIR",
			value1 = "liferay"
		);

		AssertTextEquals.assertPartialText(
			locator1 = "SolrAdminDashboard#CORE_ADMIN_CONTENT_DATA_DIR",
			value1 = "data"
		);
	}

	macro viewLoggerNameInSolrAdminLogging {
		for (var loggerName : list "LogUpdateProcessorFactory,SolrCore,DirectUpdateHandler2") {
			var key_loggerName = "${loggerName}";

			AssertTextEquals(
				locator1 = "SolrAdminDashboard#LOGGING_TABLE_LOGGER_NAME",
				value1 = "${loggerName}"
			);
		}
	}

	macro viewSolrwithSolrCloudEnabledInConsole {
		AssertConsoleTextPresent(value1 = "Using default ZkCredentialsProvider");

		AssertConsoleTextPresent(value1 = "Using default ZkACLProvider");

		AssertConsoleTextPresent(value1 = "Waiting for client to connect to ZooKeeper");

		AssertConsoleTextPresent(
			value1 = "Watcher org.apache.solr.common.cloud.ConnectionManager"
		);

		AssertConsoleTextPresent(value1 = "ZooKeeperConnection Watcher:localhost:9983");

		AssertConsoleTextPresent(value1 = "Client is connected to ZooKeeper");

		AssertConsoleTextPresent(value1 = "Updating cluster state from ZooKeeper");
	}
}