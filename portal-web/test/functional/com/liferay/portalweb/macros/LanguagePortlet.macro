definition {
	macro configureViewCurrentLanguages {
		IFrame.selectConfigurationFrame();

		Panel.expandPanel(panelHeading = "Languages");

		for (var currentLanguage : list "${currentLanguages}") {
			AssertTextEquals.assertPartialText(
				locator1 = "LanguageConfiguration#LANGUAGES_CURRENT",
				value1 = "${currentLanguage}"
			);
		}

		SelectFrame(value1 = "relative=top");
	}

	macro moveLanguagesToAvailable {
		IFrame.selectConfigurationFrame();

		Panel.expandPanel(panelHeading = "Languages");

		while (IsElementPresent(locator1 = "LanguageConfiguration#LANGUAGES_CURRENT_SELECT")) {
			Click(locator1 = "LanguageConfiguration#LANGUAGES_CURRENT_SELECT");

			Click(locator1 = "Button#MOVE_CURRENT_TO_AVAILABLE");
		}
	}

	macro moveLanguagesToCurrent {
		for (var currentLanguage : list "${currentLanguages}") {
			var key_currentLanguage = "${currentLanguage}";

			Select(
				locator1 = "LanguageConfiguration#LANGUAGES_AVAILABLE",
				value1 = "${currentLanguage}"
			);

			Click(locator1 = "Button#MOVE_AVAILABLE_TO_CURRENT");

			AssertTextEquals.assertPartialText(
				locator1 = "LanguageConfiguration#LANGUAGES_CURRENT",
				value1 = "${currentLanguage}"
			);
		}

		PortletEntry.save();

		SelectFrame(value1 = "relative=top");
	}

	macro selectLanguagePG {
		if ("${language}" == "Arabic (Saudi Arabia)") {
			Click(locator1 = "Language#LANGUAGE_MENU_ARABIC");
		}
		else if ("${language}" == "Chinese (China)") {
			Click(locator1 = "Language#LANGUAGE_MENU_CHINESE");
		}
		else if ("${language}" == "English (United States)") {
			Click(locator1 = "Language#LANGUAGE_MENU_ENGLISH");
		}
		else if ("${language}" == "French (France)") {
			Click(locator1 = "Language#LANGUAGE_MENU_FRENCH");
		}
		else if ("${language}" == "Finnish (Finland)") {
			Click(locator1 = "Language#LANGUAGE_MENU_FINNISH");
		}
		else if ("${language}" == "German (Germany)") {
			Click(locator1 = "Language#LANGUAGE_MENU_GERMAN");
		}
		else if ("${language}" == "Hebrew (Israel)") {
			Click(locator1 = "Language#LANGUAGE_MENU_HEBREW");
		}
		else if ("${language}" == "Hungarian (Hungary)") {
			Click(locator1 = "Language#LANGUAGE_MENU_HUNGARIAN");
		}
		else if ("${language}" == "Japanese (Japan)") {
			Click(locator1 = "Language#LANGUAGE_MENU_JAPANESE");
		}
		else if ("${language}" == "Portuguese (Brazil)") {
			Click(locator1 = "Language#LANGUAGE_MENU_PORTUGUESE");
		}
		else if ("${language}" == "Spanish (Spain)") {
			Click(locator1 = "Language#LANGUAGE_MENU_SPANISH");
		}
		else {
			fail("Invalid var language. Must be (Chinese|English|French|German|Hungarian|Japanese|Portuguese|Spanish).");
		}
	}

	macro tearDownLanguagePG {
		Click(locator1 = "Language#LANGUAGE_MENU_ENGLISH");
	}

	macro toggleDisplayTemplate {
		IFrame.selectConfigurationFrame();

		Panel.expandPanel(panelHeading = "Languages");

		Select(
			locator1 = "Configuration#SETUP_DISPLAY_SETTINGS_DISPLAY_TEMPLATE_SELECT",
			value1 = "${displayStyle}"
		);

		Button.clickSave();

		SelectFrame(value1 = "relative=top");
	}

	macro viewDisplayTemplateIconMenu {
		var key_language = "${language}";

		Click(locator1 = "Language#ICON_MENU_DROPDOWN");

		AssertTextEquals(
			locator1 = "Language#ICON_MENU_LANGUAGE",
			value1 = "${language}"
		);
	}

	macro viewDisplayTemplateLongText {
		var key_language = "${language}";

		AssertTextEquals.assertPartialText(
			locator1 = "Language#LONG_TEXT_LINK",
			value1 = "${language}"
		);
	}

	macro viewDisplayTemplateSelectBox {
		AssertTextEquals.assertPartialText(
			locator1 = "Language#LANGUAGE_MENU_SELECT",
			value1 = "${language}"
		);
	}

	macro viewDisplayTemplateShortText {
		var key_languageKey = "${languageKey}";

		AssertTextEquals.assertPartialText(
			locator1 = "Language#SHORT_TEXT_LINK",
			value1 = "${languageKey}"
		);
	}

	macro viewLanguagesAbsent {
		for (var missingLanguage : list "${missingLanguages}") {
			var missingLanguage = "${missingLanguage}";

			AssertElementNotPresent(locator1 = "Language#LANGUAGE_MENU_${missingLanguage}");
		}
	}

	macro viewLanguagesPresent {
		for (var currentLanguage : list "${currentLanguages}") {
			var currentLanguage = "${currentLanguage}";

			AssertElementPresent(locator1 = "Language#LANGUAGE_MENU_${currentLanguage}");
		}
	}
}