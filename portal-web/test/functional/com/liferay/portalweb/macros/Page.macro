definition {
	macro _addPageTypeEmbedded {
		Type(
			locator1 = "SitePagesEditPage#PAGE_TYPE_EMBEDDED_URL_FIELD",
			value1 = "${pageTypeURL}"
		);

		AssertTextEquals.assertPartialText(
			locator1 = "SitePagesEditPage#PAGE_TYPE_DESCRIPTION_FIELD",
			value1 = "Show content from another website."
		);
	}

	macro _addPageTypeFullPageApplication {
		Select(
			locator1 = "SitePagesEditPage#PAGE_TYPE_FULL_PAGE_APPLICATION_SELECT",
			value1 = "${portlet}"
		);
	}

	macro _addPageTypeLinkToURL {
		Type(
			locator1 = "SitePagesEditPage#PAGE_TYPE_LINK_TO_URL_URL_FIELD",
			value1 = "${pageTypeURL}"
		);

		AssertTextEquals.assertPartialText(
			locator1 = "SitePagesEditPage#PAGE_TYPE_DESCRIPTION_FIELD",
			value1 = "Link to another website."
		);
	}

	macro _addPageTypePanel {
		var key_componentOrPortletName = "${componentName}";

		Click(locator1 = "SitePagesEditPage#PAGE_TYPE_PANEL_CHECKBOX");

		AssertChecked.assertCheckedNotVisible(
			locator1 = "SitePagesEditPage#PAGE_TYPE_PANEL_CHECKBOX_INPUT"
		);
	}

	macro _selectPageTypeRadio {
		if ("${sitePageType}" == "Embedded") {
			Select(locator1 = "SitePagesEditPage#PAGE_TYPE_SELECT", value1 = "Embedded");

			Page._addPageTypeEmbedded(
				pageTypeDescription = "${pageTypeDescription}",
				pageTypeURL = "${pageTypeURL}"
			);
		}
		else if ("${sitePageType}" == "Link to URL") {
			Select(locator1 = "SitePagesEditPage#PAGE_TYPE_SELECT", value1 = "Link to URL");

			Page._addPageTypeLinkToURL(
				pageTypeDescription = "${pageTypeDescription}",
				pageTypeURL = "${pageTypeURL}"
			);
		}
		else if ("${sitePageType}" == "Panel") {
			Select(locator1 = "SitePagesEditPage#PAGE_TYPE_SELECT", value1 = "Panel");

			Page._addPageTypePanel(componentName = "${componentName}");
		}
		else if ("${sitePageType}" == "Full Page Application") {
			Select(
				locator1 = "SitePagesEditPage#PAGE_TYPE_SELECT",
				value1 = "Full Page Application"
			);

			Page._addPageTypeFullPageApplication(portlet = "${portlet}");
		}
		else if ("${sitePageType}" == "Empty Page") {
			var key_columnName = "${columnName}";

			Click(locator1 = "SitePagesEditPage#LAYOUT_CARD");
		}
		else if ("${sitePageType}" == "Page Set") {
			Select(locator1 = "SitePagesEditPage#PAGE_TYPE_SELECT", value1 = "Page Set");
		}
		else if ("${sitePageType}" == "Link to a Page of This Site") {
			Select(
				locator1 = "SitePagesEditPage#PAGE_TYPE_SELECT",
				value1 = "Link to a Page of This Site"
			);

			Select(
				locator1 = "SitePagesEditPage#PAGE_TYPE_LINK_TO_PAGE_PAGE_SELECT",
				value1 = "regexp:.*${linkToPage}.*"
			);
		}
	}

	@summary = "Add a page named '${pageName}'"
	macro add {
		if (isSet(siteName)) {
			ProductMenu.gotoSite(site = "${siteName}");
		}

		if (isSet(pageStaging)) {
			Navigator.gotoStagedView();
		}

		SitePageNavigator.gotoAddPage(sitePagePrivacy = "${sitePagePrivacy}");

		Type.typeClickAt(locator1 = "TextInput#NAME", value1 = "${pageName}");

		if (isSet(pageTemplateName)) {
			Select(
				locator1 = "SitePagesEditPage#PAGE_TYPE_SELECT",
				value1 = "${pageTemplateName}"
			);

			if (isSet(inheritChanges)) {
				Page.togglePageTemplateInheritChanges(toggleValue = "${inheritChanges}");
			}
			else {
				Page.togglePageTemplateInheritChanges(toggleValue = "enable");
			}
		}

		if (isSet(sitePageType)) {
			Page._selectPageTypeRadio(
				columnName = "${columnName}",
				componentName = "${componentName}",
				linkToPage = "${linkToPage}",
				pageTypeDescription = "${pageTypeDescription}",
				pageTypeURL = "${pageTypeURL}",
				portlet = "${portlet}",
				sitePageType = "${sitePageType}"
			);
		}

		AssertClick(locator1 = "Button#ADD_PAGE_BTN", value1 = "Add Page");

		if (!("${sitePageType}" == "Page Set")) {
			if (contains("${pageName}", "'")) {
				AssertVisible(locator1 = "Home#PAGE_WITH_QUOTES", key_pageName = "${pageName}");
			}
			else {
				AssertVisible(locator1 = "Home#PAGE", key_pageName = "${pageName}");
			}
		}

		Alert.viewSuccessMessage();
	}

	macro addChild {
		var siteName = TestCase.getSiteName(siteName = "${siteName}");

		var key_siteName = "${siteName}";

		if (!(isSet(siteScopeSelected))) {
			Type(locator1 = "NavBar#BASIC_SEARCH_FIELD", value1 = "${siteName}");

			Click(locator1 = "Icon#BASIC_SEARCH");

			LexiconEntry.gotoEntry(rowEntry = "${siteName}");
		}

		SitePageNavigator.gotoPages(page = "${page}");

		var key_page = "${pageName}";

		Click.mouseOverClick(locator1 = "SitePages#SPECIFIC_PAGE_ELLIPSIS");

		Click(locator1 = "SitePages#ADD_CHILD_PAGE");

		PortletEntry.inputName(name = "${siteChildPageName}");

		if (isSet(sitePageType)) {
			Page._selectPageTypeRadio(
				columnName = "${columnName}",
				componentName = "${componentName}",
				pageTypeDescription = "${pageTypeDescription}",
				pageTypeURL = "${pageTypeURL}",
				portlet = "${portlet}",
				sitePageType = "${sitePageType}"
			);
		}

		AssertClick(locator1 = "Button#ADD_PAGE_BTN", value1 = "Add Page");

		Alert.viewSuccessMessage();
	}

	macro addFriendlyURLLocalizedPG {
		var key_friendlyUrlLocalized = "${friendlyUrlLocalized}";

		Click(locator1 = "SitePagesEditPage#FRIENDLY_URL_LOCALIZED");

		Type(locator1 = "TextInput#FRIENDLY_URL", value1 = "${localizedFriendlyURL}");
	}

	macro addJavaScript {
		SitePageNavigator.gotoEditPage(page = "${pageName}");

		Navigator.gotoNavTab(navTab = "Advanced");

		Panel.expandPanel(panelHeading = "JavaScript");

		AssertTextEquals(
			locator1 = "SitePages#JAVASCRIPT_LABEL",
			value1 = "Paste JavaScript code that is executed at the bottom of the page."
		);

		Type(locator1 = "SitePages#JAVASCRIPT_TEXTAREA", value1 = "${javaScript}");

		AssertClickNoError(locator1 = "Button#SAVE", value1 = "Save");
	}

	macro addPageTranslations {
		SitePageNavigator.gotoEditPage(page = "${page}");

		var key_pageTranslation = "${pageTranslation}";

		Click(locator1 = "SitePages#DETAILS_LANGUAGE_TRANSLATIONS");

		PortletEntry.inputName(name = "${pageTranslationName}");

		PortletEntry.save();
	}

	macro assertCannotDeleteOnlyPage {
		var key_page = "${pageName}";

		SitePageNavigator.gotoEditPage(
			page = "${pageName}",
			sitePagePrivacy = "${sitePagePrivacy}"
		);

		LexiconEntry.gotoHeaderMenuItemNoError(menuItem = "Delete");

		Confirm(value1 = "Are you sure you want to delete the selected page?");

		Alert.viewRequestFailedToComplete();

		AssertTextPresent(
			locator1 = "Message#ERROR_2",
			value1 = "You must have at least one page."
		);
	}

	macro assertNodePortPG {
		var key_nodePort = "${nodePort}";

		AssertTextEquals.assertPartialText(
			locator1 = "Home#NODE_NAME",
			value1 = "${nodePort}"
		);
	}

	macro changeCurrentTheme {
		Click(locator1 = "SitePagesEditPage#CHANGE_CURRENT_THEME_BUTTON");

		SelectFrame(locator1 = "IFrame#DIALOG");

		var key_cardText = "${themeName}";

		AssertTextPresent(
			locator1 = "Card#SPECIFIC_LARGE_TEXT",
			value1 = "${key_cardText}"
		);

		Click(locator1 = "Card#SPECIFIC_LARGE_TEXT");

		SelectFrameTop(value1 = "relative=top");

		PortletEntry.save();
	}

	macro changeLogoViaPageCP {
		SitePageNavigator.gotoEditPage(page = "${page}");

		if (IsElementPresent(locator1 = "SitePagesEditPage#PAGE_TYPE_LAYOUT")) {
			AssertClick(
				locator1 = "SitePages#DETAILS_NAVIGATION_ADVANCED",
				value1 = "Advanced"
			);
		}
		else {
			Panel.expandPanel(panelHeading = "Logo");
		}

		Page.uploadFileForLogo(logoFile = "${logoFile}");
	}

	macro copyApplicationsFromPageToPage {
		LexiconEntry.gotoHeaderMenuItem(menuItem = "Copy Applications");

		AssertTextEquals(
			locator1 = "SitePagesEditPage#COPY_APPLICATIONS_MESSAGE_INFO",
			value1 = "The applications in page ${pageName} will be replaced with the ones in the page you select below."
		);

		AssertTextEquals(
			locator1 = "SitePagesEditPage#COPY_APPLICATIONS_COPY_FROM_PAGE_LABEL",
			value1 = "Copy from Page"
		);

		Click(locator1 = "SitePagesEditPage#COPY_APPLICATIONS_COPY_FROM_PAGE_SELECT");

		AssertClick(
			locator1 = "SitePagesEditPage#COPY_APPLICATIONS_COPY_BUTTON",
			value1 = "Copy"
		);
	}

	macro deleteFriendlyURLPG {
		var key_friendlyUrlLocalized = "${friendlyUrlLocalized}";

		Click.pauseClickAt(locator1 = "SitePagesEditPage#FRIENDLY_URL_LOCALIZED");

		Type(locator1 = "TextInput#FRIENDLY_URL", value1 = " ");

		AssertClick.pauseAssertTextClickAt(locator1 = "Button#SAVE", value1 = "Save");

		Alert.viewSuccessMessage();
	}

	macro deleteLogoPG {
		SitePageNavigator.gotoEditPage(page = "${page}");

		if (IsElementPresent(locator1 = "SitePagesEditPage#PAGE_TYPE_LAYOUT")) {
			AssertClick(
				locator1 = "SitePages#DETAILS_NAVIGATION_ADVANCED",
				value1 = "Advanced"
			);
		}
		else {
			Panel.expandPanel(panelHeading = "Logo");
		}

		AssertClick(locator1 = "Button#DELETE", value1 = "Delete");

		PortletEntry.save();
	}

	macro deletePG {
		SitePageNavigator.gotoPages(page = "${pageName}");

		var key_page = "${pageName}";

		Click.mouseOverClick(locator1 = "SitePages#SPECIFIC_PAGE_ELLIPSIS");

		ClickNoError(locator1 = "SitePages#DELETE_SPECIFIC_PAGE");

		Confirm.waitForConfirmation(
			value1 = "Are you sure you want to delete the selected page?"
		);

		Alert.viewSuccessMessage();
	}

	macro deleteViaX {
		var key_page = "${pageName}";

		MouseOver(locator1 = "SitePages#NAVIGATION_SPECIFIC_PAGE");

		ClickNoError(locator1 = "SitePages#NAVIGATION_SPECIFIC_PAGE_X_DELETE");

		Confirm.waitForConfirmation(
			value1 = "Are you sure you want to delete this page?"
		);
	}

	macro disableMobileDeviceRulesAreInheritedFromPublicPages {
		Uncheck.uncheckHiddenToggleSwitch(
			locator1 = "ToggleSwitch#INHERIT_MOBILE_DEVICE_RULES_FROM_PAGE"
		);
	}

	macro editName {
		PortletEntry.inputName(name = "${pageNameEdit}");

		AssertClick.pauseAssertTextClickAt(locator1 = "Button#SAVE", value1 = "Save");

		Alert.viewSuccessMessage();
	}

	macro editPageLayoutColumn {
		var key_columnName = "${columnName}";

		Click(locator1 = "SitePagesEditPage#LAYOUT_CARD");

		AssertClick.pauseAssertTextClickAt(locator1 = "Button#SAVE", value1 = "Save");

		Alert.viewSuccessMessage();
	}

	macro editPageMetadata {
		Type.typeClickAt(locator1 = "TextInput#SEO_HTML_TITLE", value1 = "${HTMLTitle}");

		Type.typeClickAt(
			locator1 = "TextArea#SEO_META_TAGS_DESCRIPTION",
			value1 = "${metaTagsDescription}"
		);

		Type.typeClickAt(
			locator1 = "TextArea#SEO_META_TAGS_KEYWORDS",
			value1 = "${metaTagsKeywords}"
		);

		AssertClick.pauseAssertTextClickAt(locator1 = "Button#SAVE", value1 = "Save");

		Alert.viewSuccessMessage();
	}

	macro editPageTypeLayout {
		var key_columnName = "${columnName}";

		Click(locator1 = "SitePagesEditPage#LAYOUT_CARD");

		PortletEntry.save();
	}

	macro editSelectPageType {
		SitePageNavigator.gotoEditPage(page = "${page}");

		var key_pageType = "${pageType}";

		Select(locator1 = "SitePagesEditPage#PAGE_TYPE_LAYOUT", value1 = "${pageType}");

		if ("${pageType}" == "Link to a Page of This Site") {
			var key_indexNumber = "${indexNumber}";

			Select(
				locator1 = "SitePagesEditPage#PAGE_TYPE_LINK_TO_PAGE_PAGE_SELECT",
				value1 = "index=${indexNumber}"
			);
		}
		else if ("${pageType}" == "Embedded") {
			Type(
				locator1 = "SitePagesEditPage#PAGE_TYPE_EMBEDDED_URL_FIELD",
				value1 = "http://www.liferay.com"
			);
		}

		PortletEntry.save();
	}

	macro firstPageCanNotBeOfTypeLinkToURL {
		SitePageNavigator.gotoEditPage(page = "${pageName}");

		LexiconEntry.gotoHeaderMenuItemNoError(menuItem = "Delete");

		Confirm(value1 = "Are you sure you want to delete the selected page?");

		Alert.viewRequestFailedToComplete();

		AssertTextEquals.assertPartialText(
			locator1 = "Message#ERROR_2",
			value1 = "The first page cannot be of type Link to URL."
		);

		ProductMenuHelper.openProductMenu();

		var key_page = "${pageName}";

		AssertTextEquals(
			locator1 = "SitePages#PAGE_TREE_PAGE_LINK",
			value1 = "${pageName}"
		);
	}

	macro getGroupIdFromHtmlSource {
		var portalURL = PropsUtil.get("portal.url");
		var pageURL = selenium.getAttribute("//li[@class='control-menu-nav-item']/a[contains(@data-qa-id,'editLayout')]@href");
		var partialPageURL = StringUtil.stripBetween("${pageURL}", "${portalURL}", "GroupPagesPortlet_groupId=");
		var groupId = StringUtil.extractFirst("${partialPageURL}", "&");

		echo("## * Group ID: ${groupId}");

		return "${groupId}";
	}

	macro gotoChildPagePG {
		var key_pageName = "${pageName}";

		MouseOver(locator1 = "Home#PAGE");

		var key_childPageName = "${childPageName}";

		AssertVisible(locator1 = "Home#PAGE_CHILD_PAGE");

		Click(locator1 = "Home#PAGE_CHILD_PAGE");
	}

	@description = "Navigate to My Account > ${portletName}."
	macro gotoMyAccount {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "My Account",
			panel = "User",
			portlet = "${portletName}"
		);
	}

	macro gotoPagePanelPortlet {
		var key_portletName = "${portletName}";

		AssertClick(locator1 = "Panel#MENU_ITEM", value1 = "${portletName}");
	}

	macro gotoSALocalizedCP {
		Navigator.gotoPage(pageName = "Social Activity Page");

		var key_portletCategoryName = "${portletCategoryName}";

		ProductMenuHelper.expandCategory(category = "${portletCategoryName}");

		var key_portletName = "${portletName}";

		ProductMenuHelper.gotoPortlet(portlet = "${portletName}");
	}

	macro hideFromNavigationMenu {
		Check.checkToggleSwitch(locator1 = "Checkbox#HIDE_FROM_NAVIGATION_MENU");

		AssertClick(locator1 = "Button#SAVE", value1 = "Save");
	}

	macro localizedPG {
		var key_pageLocale = "${pageLocale}";

		Click(locator1 = "Link#PAGE_LOCALE", value1 = "${pageLocale}");
	}

	macro manageDeviceFamilyActions {
		LexiconEntry.gotoEllipsisMenuItem(menuItem = "Manage Actions");

		IFrame.selectDialogFrame();

		Click(locator1 = "Button#ADD_ACTION");

		PortletEntry.inputName(name = "${actionName}");

		var key_actionType = "${actionType}";

		Click(locator1 = "MobileDevice#ADD_ACTION_TYPE_OPTION");

		if ("${actionType}" == "Redirect to URL") {
			Type(locator1 = "TextInput#URL", value1 = "${actionURL}");
		}
		else if ("${actionType}" == "Redirect to Site") {
			var key_siteName = "${siteName}";

			Click(locator1 = "MobileDevice#ADD_ACTION_SITE_OPTION");

			var key_pageName = "${pageName}";

			Click(locator1 = "MobileDevice#ADD_ACTION_PAGE_OPTION");
		}

		PortletEntry.save();

		SelectFrame(value1 = "relative=top");

		var key_modalTitle = "Actions";

		Click(locator1 = "Button#CLOSE_MODAL");
	}

	macro openURLLocale {
		Navigator.openSpecificURL(url = "${localizationPageURL}");

		AssertLocation(value1 = "${localizationPageURL}");
	}

	macro saveAddPage {
		AssertClick(locator1 = "Button#ADD_PAGE_BTN", value1 = "Add Page");

		Alert.viewSuccessMessage();
	}

	macro selectMobileDeviceFamily {
		AssertClick(locator1 = "Button#SELECT_MOBILE_DEVICE_RULES", value1 = "Select");

		IFrame.selectDialogFrame();

		var key_deviceFamilyName = "${deviceFamilyName}";

		AssertClick(
			locator1 = "MobileDevice#DEVICE_FAMILY_TABLE_NAME_LINK",
			value1 = "${deviceFamilyName}"
		);

		SelectFrame(value1 = "relative=top");
	}

	macro selectSitePagesVariationName {
		Click(locator1 = "SitePages#STAGING_SITE_PAGES_VARIATION_BUTTON");

		var key_sitePagesVariationName = "${sitePagesVariationName}";

		MenuItem.click(menuItem = "${sitePagesVariationName}");
	}

	@summary = "Delete all pages except the Welcome Page"
	macro tearDownPG {
		var siteName = TestCase.getSiteName(siteName = "${siteName}");

		ProductMenu.gotoSite(site = "${siteName}");

		while (IsElementPresent(locator1 = "SitePages#PAGE_ELLIPSIS_2")) {
			ProductMenuHelper.expandPanel(panel = "Site Administration");

			ProductMenuHelper.expandCategory(category = "Navigation");

			MouseOver.mouseOverNotVisible(locator1 = "SitePages#PAGE_ELLIPSIS_2");

			Click(locator1 = "SitePages#PAGE_ELLIPSIS_2");

			MenuItem.clickNoError(menuItem = "Delete");

			Confirm(value1 = "Are you sure you want to delete the selected page?");
		}

		AssertElementNotPresent(locator1 = "SitePages#PAGE_ELLIPSIS_2");
	}

	macro togglePageTemplateInheritChanges {
		if ("${toggleValue}" == "enable") {
			Check.checkToggleSwitch(
				locator1 = "ToggleSwitch#ANY_TOGGLE_SWITCH",
				key_toggleSwitchLabel = "Inherit Changes"
			);
		}
		else if ("${toggleValue}" == "disable") {
			Uncheck.uncheckToggleSwitch(
				locator1 = "ToggleSwitch#ANY_TOGGLE_SWITCH",
				key_toggleSwitchLabel = "Inherit Changes"
			);
		}
	}

	macro uploadFileForLogo {
		AssertClick(locator1 = "Button#CHANGE_LOGO", value1 = "Change");

		SelectFrame(locator1 = "SitePages#LOGO_UPLOAD_IMAGE_IFRAME");

		AssertElementPresent(locator1 = "SitePages#LOGO_UPLOAD_IMAGE_BUTTON");

		UploadCommonFile.uploadCommonFileHiddenNoMouseOver(
			locator1 = "TextInput#FILE",
			value1 = "${logoFile}"
		);

		Pause(locator1 = "5000");

		Button.clickDone();

		Pause(locator1 = "5000");

		SelectFrameTop();

		PortletEntry.save();
	}

	macro view {
		ProductMenuHelper.expandPanel(panel = "Site Administration");

		ProductMenuHelper.expandCategory(category = "Navigation");

		AssertTextEquals(
			locator1 = "SitePages#PAGE_TREE_PAGE_LINK",
			value1 = "${pageName}",
			key_page = "${pageName}"
		);
	}

	macro viewChildPage {
		ProductMenuHelper.openProductMenu();

		ProductMenuHelper.expandPanel(panel = "Site Administration");

		ProductMenuHelper.expandCategory(category = "Navigation");

		var key_page = "${pageName}";

		ProductMenuHelper.expandPageTree();

		AssertTextEquals(locator1 = "ProductMenu#PAGES", value1 = "${pageName}");
	}

	macro viewChildPageDropdown {
		ClickNoError.clickNoMouseOver(locator1 = "Home#${viewChildPageDropdown}");

		if (isSet(javaScriptPage)) {
			Confirm.waitForConfirmation(value1 = "${javaScriptPage}");
		}

		MouseOver.mouseOverClickNavigation(locator1 = "Home#PAGE_2");

		var key_childPageName = "${childPageName}";

		AssertTextEquals(locator1 = "Home#PAGE_CHILD_PAGE", value1 = "${childPageName}");
	}

	macro viewCurrentTheme {
		var key_page = "${page}";
		var key_themeName = "${themeName}";

		ProductMenuHelper.expandCategory(category = "Navigation");

		Click.mouseOverClick(locator1 = "SitePages#SPECIFIC_PAGE_ELLIPSIS");

		AssertClick.assertPartialTextClickAt(
			locator1 = "MenuItem#ANY_MENU_ITEM",
			value1 = "Configure Page",
			key_menuItem = "Configure Page"
		);

		Navigator.gotoNavTab(navTab = "${navTab}");

		AssertTextPresent(
			locator1 = "SitePagesEditPage#VIEW_THEME",
			value1 = "${themeName}"
		);
	}

	macro viewCustomLogoPG {
		AssertElementPresent(locator1 = "Home#CUSTOM_LOGO");

		AssertElementNotPresent(locator1 = "Home#DEFAULT_LOGO");
	}

	macro viewDefaultLogoPG {
		AssertElementPresent(locator1 = "Home#DEFAULT_LOGO");

		AssertElementNotPresent(locator1 = "Home#CUSTOM_LOGO");
	}

	macro viewDefaultSiteTemplatePagesPG {
		Click(locator1 = "Home#PAGE_NAVIGATION_BAR");

		var key_pageName = "${pageName}";

		if ("${siteTemplate}" == "Community") {
			AssertTextEquals(locator1 = "Home#PAGE_TEMPLATE_1", value1 = "${pageName}");

			AssertTextEquals(locator1 = "Home#PAGE_TEMPLATE_2", value1 = "Wiki");
		}
		else if ("${siteTemplate}" == "Intranet") {
			AssertTextEquals(locator1 = "Home#PAGE_TEMPLATE_1", value1 = "${pageName}");

			AssertTextEquals(
				locator1 = "Home#PAGE_TEMPLATE_2",
				value1 = "Documents and Media"
			);
		}
		else if ("${siteTemplate}" == "Zoe Healthcare Theme") {
			AssertElementPresent(locator1 = "Home#SITE_NAME_LOGO");

			AssertElementPresent(locator1 = "Home#PAGE_TEMPLATE_1");

			AssertElementPresent(locator1 = "Home#PAGE_TEMPLATE_2");

			AssertElementPresent(locator1 = "Home#PAGE_TEMPLATE_3");

			AssertElementPresent(locator1 = "Home#PAGE_TEMPLATE_4");

			AssertElementPresent(locator1 = "Home#PAGE_TEMPLATE_5");

			AssertElementPresent(locator1 = "Home#PAGE_TEMPLATE_6");

			AssertElementPresent(locator1 = "Home#PAGE_TEMPLATE_7");
		}
	}

	macro viewDeletedPage {
		var key_page = "${pageName}";

		AssertElementNotPresent(locator1 = "Home#PAGE");

		AssertElementNotPresent(
			locator1 = "SitePages#PAGE_TREE_PAGE_LINK",
			key_page = "${pageName}"
		);
	}

	macro viewEmbeddedPagePG {
		AssertTextPresent(
			locator1 = "Home#EMBEDDED_SITE_LIFERAY_BANNER_LOGO",
			value1 = "Liferay"
		);
	}

	macro viewFriendlyURL {
		SitePageNavigator.gotoEditPage(page = "${pageName}");

		AssertTextEquals(
			locator1 = "SitePages#DETAILS_FRIENDLY_BASE_URL",
			value1 = "http://localhost:8080/web${siteFriendlyURL}"
		);
	}

	macro viewFriendlyURLLanguageOptionsPG {
		for (var languageKey : list "${currentLanguageList}") {
			AssertElementPresent(locator1 = "SitePagesEditPage#${languageKey}");
		}

		if ("${assertUnavailableLanguages}" == "true") {
			for (var languageKey : list "${unavailableLanguageList}") {
				AssertElementNotPresent(locator1 = "SitePagesEditPage#${languageKey}");
			}
		}
	}

	macro viewLayoutLogoPG {
		if ("${assertLayoutLogoPresent}" == "true") {
			AssertElementPresent(locator1 = "Home#LAYOUT_LOGO");
		}
		else {
			AssertElementNotPresent(locator1 = "Home#LAYOUT_LOGO");
		}
	}

	macro viewLoadMoreResultsPages {
		ProductMenuHelper.expandPageTree();

		if ("${siteChildPages}" == "false") {
			AssertClick(
				locator1 = "SitePages#PAGE_TREE_LOAD_MORE_RESULTS_LINK",
				value1 = "Load more results"
			);

			AssertTextEquals(
				locator1 = "SitePages#PAGE_TREE_PAGE_LINK_4",
				value1 = "Page3 Name"
			);

			AssertTextEquals(
				locator1 = "SitePages#PAGE_TREE_PAGE_LINK_5",
				value1 = "Page4 Name"
			);
		}
		else if ("${siteChildPages}" == "true") {
			AssertClick(
				locator1 = "SitePages#PAGE_TREE_LOAD_MORE_RESULTS_LINK",
				value1 = "Load more results"
			);

			AssertTextEquals(
				locator1 = "SitePages#PAGE_TREE_PAGE_LINK_5",
				value1 = "Child Page4 Name"
			);

			AssertTextEquals(
				locator1 = "SitePages#PAGE_TREE_PAGE_LINK_6",
				value1 = "Child Page5 Name"
			);
		}
	}

	macro viewNoDeletePagesAssociatedWithSiteTemplate {
		ProductMenuHelper.expandCategory(category = "Navigation");

		ProductMenuHelper.expandPageTree();

		var key_page = "${page}";

		Click.mouseOverClick(locator1 = "SitePages#SPECIFIC_PAGE_ELLIPSIS");

		AssertNotVisible(locator1 = "SitePages#DELETE_SPECIFIC_PAGE", value1 = "Delete");

		Click(locator1 = "SitePages#EDIT_SPECIFIC_PAGE");

		if ((IsElementPresent(locator1 = "Message#ERROR_3")) && (IsVisible(locator1 = "Message#ERROR_3"))) {
			AssertTextEquals(
				locator1 = "Message#ERROR_3",
				value1 = "This page cannot be deleted and cannot have child pages because it is associated to a site template."
			);
		}
	}

	macro viewNoPG {
		var key_pageName = "${pageName}";

		AssertElementNotPresent(locator1 = "Home#PAGE");
	}

	macro viewNoSelectCategory {
		SitePageNavigator.gotoAddPage(sitePagePrivacy = "${sitePagePrivacy}");

		Type.typeClickAt(locator1 = "TextInput#NAME", value1 = "${pageName}");

		Panel.expandPanel(panelHeading = "Categorization");

		AssertElementNotPresent(
			locator1 = "AssetCategorization#CATEGORY_SELECT",
			key_vocabularyName = "${vocabularyName}"
		);
	}

	macro viewPageFriendlyURLPG {
		if (isSet(friendlyUrlLocalized)) {
			var key_friendlyUrlLocalized = "${friendlyUrlLocalized}";

			Click(locator1 = "SitePagesEditPage#FRIENDLY_URL_LOCALIZED");
		}

		AssertTextEquals(locator1 = "TextInput#FRIENDLY_URL", value1 = "/${pageName}");
	}

	macro viewPageLayout {
		if ("${pageLayout}" == "1 Column") {
			AssertVisible(locator1 = "Home#PAGE_COLUMN_1_LAYOUT_1_COLUMN");

			AssertElementNotPresent(locator1 = "Home#PAGE_COLUMN_2");
		}
		else if ("${pageLayout}" == "2 Column (30/70)") {
			AssertVisible(locator1 = "Home#PAGE_COLUMN_1_LAYOUT_2_COLUMNS_30_SPLIT");

			AssertVisible(locator1 = "Home#PAGE_COLUMN_2_LAYOUT_2_COLUMNS_70_SPLIT");
		}
	}

	macro viewPageLayoutColumn {
		AssertElementPresent(
			locator1 = "SitePagesEditPage#LAYOUT_CARD",
			key_columnName = "${columnName}"
		);
	}

	macro viewPageLocalization {
		if (IsElementPresent(locator1 = "Home#PORTAL_LOCALIZATION_CONFIRMATION_MESSAGE")) {
			Click(locator1 = "Home#PORTAL_LOCALIZATION_CONFIRMATION_MESSAGE");
		}

		ProductMenu.gotoLocalizedEditPage(category = "${category}", page = "${page}");

		var key_defaultSiteLanguageKey = "${defaultSiteLanguageKey}";

		Navigator.gotoSEOPanel();

		AssertElementPresent(locator1 = "TextInput#SEO_HTML_TITLE");

		AssertElementPresent(locator1 = "SitePagesEditPage#SEO_HTML_TITLE_META_TAGS");
	}

	macro viewPageLockCheck {
		Click(locator1 = "ControlMenu#INFO");

		AssertTextEquals.assertPartialText(
			locator1 = "Message#CUSTOMIZED_PAGE_INFO",
			value1 = "This page is linked to a site template which does not allow modifications to it."
		);
	}

	macro viewPageMetadata {
		AssertTextEquals(locator1 = "TextInput#SEO_HTML_TITLE", value1 = "${HTMLTitle}");

		AssertTextEquals(
			locator1 = "TextArea#SEO_META_TAGS_DESCRIPTION",
			value1 = "${metaTagsDescription}"
		);

		AssertTextEquals(
			locator1 = "TextArea#SEO_META_TAGS_KEYWORDS",
			value1 = "${metaTagsKeywords}"
		);
	}

	macro viewPageOrderStagingLivePG {
		AssertTextEquals(locator1 = "Home#PAGE_1_STAGING_LIVE", value1 = "${pageName1}");

		AssertTextEquals(locator1 = "Home#PAGE_2_STAGING_LIVE", value1 = "${pageName2}");

		AssertTextEquals(locator1 = "Home#PAGE_3_STAGING_LIVE", value1 = "${pageName3}");
	}

	macro viewPagesOrder {
		ProductMenuHelper.expandCategory(category = "Navigation");

		var key_page = "${pageName1}";

		AssertTextEquals(
			locator1 = "SitePages#PAGE_TREE_PAGE_LINK",
			value1 = "${pageName1}"
		);

		AssertTextEquals(
			locator1 = "SitePages#PAGE_TREE_PAGE_LINK_2",
			value1 = "${pageName2}"
		);

		AssertTextEquals(
			locator1 = "SitePages#PAGE_TREE_PAGE_LINK_3",
			value1 = "${pageName3}"
		);
	}

	macro viewPageTemplate {
		Navigator.openSiteURL(siteName = "Site Name");

		Click(locator1 = "ControlMenu#INFO");

		AssertTextEquals.assertPartialText(
			locator1 = "Message#CUSTOMIZED_PAGE_INFO",
			value1 = "This page is linked to a page template. Disable the automatic propagation of changes to this page to be able to make modifications."
		);

		ProductMenuHelper.expandPanel(panel = "Site Administration");

		ProductMenuHelper.expandCategory(category = "Navigation");

		SitePageNavigator.gotoEditPage(page = "${page}");

		AssertTextEquals(
			locator1 = "Message#ERROR_3",
			value1 = "Some page settings are unavailable because Inherit Changes is enabled. To change these settings, disable Inherit Changes under the General section."
		);

		AssertChecked.assertCheckedNotVisible(
			locator1 = "SitePagesEditPage#PAGE_TYPE_TEMPLATE_AUTOMATICALLY_APPLY_CHANGES_CHECKBOX_GENERIC"
		);
	}

	macro viewPageTemplateTypeNotPresent {
		var key_pageName = "${pageTemplateName}";

		Click(locator1 = "SitePagesEditPage#PAGE_TYPE_SELECT");

		AssertTextNotPresent(
			locator1 = "SitePagesEditPage#PAGE_TYPE_SELECT",
			value1 = "${pageTemplateName}"
		);
	}

	macro viewPageTemplateTypePresent {
		var key_pageName = "${pageTemplateName}";

		AssertElementPresent(locator1 = "SitePagesEditPage#PAGE_TYPE_SELECT");
	}

	macro viewPanelPortletListCP {
		ProductMenuHelper.openProductMenu();

		SitePageNavigator.gotoEditPage(page = "${pageName}");

		var key_componentName = "${componentName}";

		if (IsElementPresent(locator1 = "SitePages#DETAILS_PAGE_TYPE_PANEL_COMPONENT_TREE_ARROW")) {
			Click(locator1 = "SitePages#DETAILS_PAGE_TYPE_PANEL_COMPONENT_TREE_ARROW");
		}

		var key_componentOrPortletName = "${componentName}";

		AssertChecked.assertCheckedNotVisible(
			locator1 = "SitePages#DETAILS_PAGE_TYPE_PANEL_CHECKBOX_INPUT"
		);

		for (var portletName : list "${portletNameList}") {
			var key_componentOrPortletName = "${portletName}";

			AssertChecked.assertCheckedNotVisible(
				locator1 = "SitePages#DETAILS_PAGE_TYPE_PANEL_CHECKBOX_INPUT"
			);
		}
	}

	macro viewPanelPortletListPG {
		var key_componentName = "${componentName}";

		AssertTextEquals(locator1 = "Panel#PANEL_TITLE", value1 = "${componentName}");

		var key_pageName = "${pageName}";

		AssertTextEquals(locator1 = "Panel#PANEL_PAGE_TITLE", value1 = "${pageName}");

		AssertTextEquals(
			locator1 = "Message#INFO",
			value1 = "Please select a tool from the left menu."
		);

		for (var portletName : list "${portletNameList}") {
			var key_portletName = "${portletName}";

			AssertTextEquals(locator1 = "Panel#MENU_ITEM", value1 = "${portletName}");
		}
	}

	macro viewRTLLayout {
		AssertCssValue(
			locator1 = "Home#SITE_NAME",
			locator2 = "direction",
			value1 = "rtl"
		);

		AssertCssValue(
			locator1 = "ProductMenu#TOGGLE",
			locator2 = "text-align",
			value1 = "right"
		);

		AssertCssValue(
			locator1 = "ProductMenu#PRODUCT_MENU_OPENED",
			locator2 = "right",
			value1 = "0px"
		);
	}

	macro viewSelectedLayoutColumn {
		AssertElementPresent(
			locator1 = "SitePagesEditPage#LAYOUT_CARD_SELECTED",
			key_columnName = "${columnName}"
		);
	}

	macro viewSiteNameTranslationsPG {
		Click(locator1 = "Language#SELECT_LANGUAGE", key_language = "${language}");

		AssertTextEquals(locator1 = "Home#SITE_NAME", value1 = "${siteName}");
	}

	macro viewSpecificPG {
		for (var pageName : list "${pageNameList}") {
			var key_pageName = "${pageName}";

			AssertTextEquals(locator1 = "Home#PAGE", value1 = "${pageName}");
		}
	}

	macro viewTranslationsPG {
		Navigator.openSpecificURL(url = "${sitePageURL}");

		AssertLocation(value1 = "${sitePageURL}");

		AssertTextEquals.assertPartialText(
			locator1 = "Home#PORTAL_LOCALIZATION_MESSAGE_INFO",
			value1 = "${pageLocalizationMessage}"
		);

		AssertTextEquals(
			locator1 = "Home#PORTAL_LOCALIZATION_PREFERRED_MESSAGE",
			value1 = "${pageLocalizationPreferredLanguage}"
		);
	}

	macro viewURLLocale {
		if (isSet(localizationOption)) {
			AssertClick(locator1 = "Message#INFO_4", value1 = "${localizationOption}");
		}

		AssertLocation(value1 = "${localizationPageURL}");
	}

	macro viewWithWorkflowPG {
		Pause(locator1 = "5000");

		if ("${workflowStatus}" == "Ready for Publication") {
			AssertElementPresent(locator1 = "Staging#STAGING_MENU_READY_FOR_PUBLICATION");
		}
		else {
			AssertTextEquals(
				locator1 = "Message#WORKFLOW_STATUS",
				value1 = "${workflowStatus}"
			);
		}

		AssertClick.assertPartialTextClickAt(
			locator1 = "Staging#LIVE_BUTTON",
			value1 = "Live"
		);

		var key_pageName = "${pageName}";

		AssertElementNotPresent(locator1 = "Home#PAGE");
	}
}