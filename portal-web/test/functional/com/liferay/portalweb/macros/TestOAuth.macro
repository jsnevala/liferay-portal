definition {
	macro addApplication {
		AssertClick(locator1 = "TestOAuth#OAUTH_ADMIN_ADD", value1 = "Add");

		Type(
			locator1 = "TestOAuth#OAUTH_ADMIN_APPLICATION_NAME",
			value1 = "${applicationName}"
		);

		Type(locator1 = "TestOAuth#OAUTH_ADMIN_WEBSITE_URL", value1 = "${websiteURL}");

		Type(locator1 = "TestOAuth#OAUTH_ADMIN_CALLBACK_URI", value1 = "${callbackURI}");

		AssertClick(locator1 = "Button#SAVE", value1 = "Save");

		Alert.viewSuccessMessage();
	}

	macro getApplicationCredentials {
		var key_applicationName = "${applicationName}";

		AssertClick(
			locator1 = "TestOAuth#OAUTH_ADMIN_TABLE_NAME",
			value1 = "${applicationName}"
		);

		AssertElementPresent(locator1 = "Icon#ANGLE_LEFT_BACK");

		var applicationCredentials = selenium.getText("TestOAuth#OAUTH_ADMIN_APPLICATION_CREDENTIALS");

		return "${applicationCredentials}";
	}

	macro getConsumerKey {
		var strippedResult = StringUtil.stripBetween("${applicationCredentials}", "Application", "Key: ");
		var consumerKey = StringUtil.stripBetween("${strippedResult}", " Consumer", "${consumerSecret}");

		return "${consumerKey}";
	}

	macro getConsumerSecret {
		var consumerSecret = StringUtil.stripBetween("${applicationCredentials}", "Application", "Secret: ");

		return "${consumerSecret}";
	}

	macro testConsumerKeyAndSecret {
		Type(locator1 = "TestOAuth#TEST_PORTLET_KEY", value1 = "${consumerKey}");

		Type(locator1 = "TestOAuth#TEST_PORTLET_SECRET", value1 = "${consumerSecret}");

		AssertClick(locator1 = "Button#SAVE", value1 = "Save");

		Alert.viewSuccessMessage();

		AssertClick(
			locator1 = "TestOAuth#TEST_PORTLET_AUTHORIZE_ACCESS",
			value1 = "Authorize Access"
		);

		AssertClick(
			locator1 = "TestOAuth#TEST_PORTLET_GRANT_ACCESS",
			value1 = "Grant Access"
		);

		Alert.viewSuccessMessage();

		Type(locator1 = "TestOAuth#TEST_PORTLET_WEB_ID", value1 = "${webID}");

		AssertClick(locator1 = "TestOAuth#TEST_PORTLET_TEST", value1 = "Test");
	}

	macro viewJSON {
		AssertVisible(locator1 = "TestOAuth#TEST_PORTLET_JSON");

		AssertTextPresent(
			locator1 = "TestOAuth#TEST_PORTLET_JSON",
			value1 = "&quot;mx&quot;:&quot;${domainName}&quot;"
		);

		AssertTextPresent(
			locator1 = "TestOAuth#TEST_PORTLET_JSON",
			value1 = "&quot;webId&quot;:&quot;${domainName}&quot;"
		);
	}
}