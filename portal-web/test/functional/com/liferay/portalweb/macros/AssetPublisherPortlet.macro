definition {
	macro addAsset {
		Click.clickNoWaitForVisible(
			locator1 = "Portlet#ICON_PLUS_SIGN",
			key_portletName = "Asset Publisher"
		);

		MenuItem.click(menuItem = "${assetType}");

		SelectFrame(locator1 = "IFrame#DIALOG");
	}

	macro assertSiteScopeSearch {
		AssetPublisherPortlet.gotoConfigurationPG();

		Panel.expandPanel(panelHeading = "Source");

		AssertClick(locator1 = "Configuration#SOURCE_SCOPE_SELECT", value1 = "Select");

		MenuItem.click(menuItem = "Other Site...");

		SelectFrame(value1 = "relative=top");

		SelectFrame(locator1 = "IFrame#SELECT_SITES");

		SiteSelector.viewSite(site = "${siteName}");
	}

	macro configureAddSiteScopes {
		AssetPublisherPortlet.gotoConfigurationPG();

		Panel.expandPanel(panelHeading = "Source");

		if (isSet(globalSite)) {
			Click(locator1 = "Configuration#SOURCE_SCOPE_SELECT");

			MenuItem.click(menuItem = "Global");
		}

		if (isSet(otherSite)) {
			Click(locator1 = "Configuration#SOURCE_SCOPE_SELECT");

			MenuItem.click(menuItem = "Other Site...");

			SelectFrame(value1 = "relative=top");

			SelectFrame(locator1 = "IFrame#SELECT_SITES");

			SiteSelector.selectSite(site = "${otherSite}");
		}

		if (isSet(defaultSite)) {
			Click(locator1 = "Configuration#SOURCE_SCOPE_SELECT");

			MenuItem.click(menuItem = "Current Site");
		}

		SelectFrameTop();

		IFrame.selectDialogFrame();

		Alert.viewSuccessMessage();
	}

	macro configureAPSelectMoreThanOnePG {
		Portlet.gotoPortletOptions(
			portletName = "Asset Publisher",
			portletOption = "Configuration"
		);

		IFrame.selectDialogFrame();

		Panel.expandPanel(panelHeading = "Source");

		Select(
			locator1 = "APConfiguration#SOURCE_SCOPE_ASSET_TYPE_SELECT",
			value1 = "Select More Than One..."
		);

		for (var contentName : list "${selectContent}") {
			var key_contentName = "${contentName}";

			Click(locator1 = "APConfiguration#SELECT_MORE_THAN_ONE_ASSET_TYPE_CONTENT");

			if ("${moveSelected}" == "true") {
				Click(
					locator1 = "APConfiguration#SELECT_MORE_THAN_ONE_ASSET_TYPE_MOVE_SELECTED"
				);
			}
			else {
				Click(
					locator1 = "APConfiguration#SELECT_MORE_THAN_ONE_ASSET_TYPE_MOVE_AVAILABLE"
				);
			}
		}

		PortletEntry.save();
	}

	macro configureAssetDisplayOrderPG {
		AssetPublisherPortlet.gotoConfigurationPG();

		Panel.expandPanel(panelHeading = "Ordering and Grouping");

		Select(
			locator1 = "APConfiguration#ORDERING_AND_GROUPING_ORDER_BY_SELECT",
			value1 = "${fieldNameOrder}"
		);

		Select(
			locator1 = "APConfiguration#ORDERING_AND_GROUPING_ORDER_DIRECTION_SELECT",
			value1 = "${sortOrder}"
		);

		PortletEntry.save();
	}

	macro configureAssetLinkBehaviorPG {
		AssetPublisherPortlet.gotoConfigurationPG();

		Navigator.gotoNavTab(navTab = "Display Settings");

		if (isSet(disableConfiguration)) {
			Uncheck.uncheckToggleSwitch(
				locator1 = "ToggleSwitch#ANY_TOGGLE_SWITCH",
				key_toggleSwitchLabel = "${disableConfiguration}"
			);
		}

		Select(
			locator1 = "APConfigurationDisplaysettings#ASSET_LINK_BEHAVIOR_SELECT",
			value1 = "${assetLinkBehavior}"
		);

		PortletEntry.save();
	}

	macro configureAssetTypePG {
		AssetPublisherPortlet.gotoConfigurationPG(
			order = "${order}",
			portletName = "${portletName}"
		);

		Panel.expandPanel(panelHeading = "Source");

		Select(
			locator1 = "APConfiguration#SOURCE_SCOPE_ASSET_TYPE_SELECT",
			value1 = "${selectedAsset}"
		);

		if ("${selectMoreThanOneSubtype}" == "true") {
			Select(
				locator1 = "APConfiguration#SOURCE_SCOPE_ASSET_SUBTYPE_SELECT",
				value1 = "Select More Than One..."
			);

			for (var contentName : list "${selectContent}") {
				Click(
					locator1 = "APConfiguration#SELECT_MORE_THAN_ONE_ASSET_TYPE_CONTENT",
					key_contentName = "${contentName}"
				);

				if ("${moveSelected}" == "true") {
					Click(
						locator1 = "APConfiguration#SELECT_MORE_THAN_ONE_ASSET_SUBTYPE_MOVE_SELECTED"
					);
				}
				else {
					Click(
						locator1 = "APConfiguration#SELECT_MORE_THAN_ONE_ASSET_SUBTYPE_MOVE_AVAILABLE"
					);
				}
			}
		}
		else {
			Select(
				locator1 = "APConfiguration#SOURCE_SCOPE_ASSET_SUBTYPE_SELECT",
				value1 = "${assetSubtype}"
			);
		}

		PortletEntry.save();
	}

	macro configureCategoriesFilterPG {
		AssetPublisherPortlet.gotoConfigurationPG();

		Panel.expandPanel(panelHeading = "Filter");

		Select(
			locator1 = "APConfiguration#FILTER_CATEGORIZATION_SELECT",
			value1 = "Categories"
		);

		if (isSet(queryAndOperator)) {
			Select(
				locator1 = "APConfiguration#FILTER_QUERY_AND_OPERATOR",
				value1 = "${queryAndOperator}"
			);
		}

		AssetCategorization.addCategory(
			categoryName = "${categoryName}",
			vocabularyName = "${vocabularyName}"
		);

		PortletEntry.save();

		IFrame.selectTopFrame();
	}

	macro configureDisplayConversionsPG {
		AssetPublisherPortlet.gotoConfigurationPG();

		Navigator.gotoNavTab(navTab = "Display Settings");

		for (var documentType : list "${documentTypes}") {
			var documentTypeUppercase = StringUtil.upperCase("${documentType}");

			if ("${check}" == "true") {
				Check.checkToggleSwitch(
					locator1 = "APConfigurationDisplaysettings#ENABLE_CONVERSION_${documentTypeUppercase}_CHECKBOX"
				);
			}
			else if ("${uncheck}" == "true") {
				Uncheck.uncheckToggleSwitch(
					locator1 = "APConfigurationDisplaysettings#ENABLE_CONVERSION_${documentTypeUppercase}_CHECKBOX"
				);
			}
		}

		PortletEntry.save();
	}

	macro configureDisplayTemplatePG {
		IFrame.selectDialogFrame();

		Navigator.gotoNavTab(navTab = "Display Settings");

		Select(
			locator1 = "Configuration#SETUP_DISPLAY_SETTINGS_DISPLAY_TEMPLATE_SELECT",
			value1 = "${displayTemplate}"
		);

		PortletEntry.save();

		SelectFrame(value1 = "relative=top");
	}

	macro configureFilterByFieldPG {
		AssetPublisherPortlet.gotoConfigurationPG();

		Panel.expandPanel(panelHeading = "Source");

		Select(
			locator1 = "APConfiguration#SOURCE_SCOPE_ASSET_TYPE_SELECT",
			value1 = "${selectedAsset}"
		);

		Select(
			locator1 = "APConfiguration#SOURCE_SCOPE_ASSET_SUBTYPE_SELECT",
			value1 = "${assetSubtype}"
		);

		Check.checkToggleSwitch(
			locator1 = "APConfiguration#SOURCE_SCOPE_FILTER_BY_FIELD_CHECKBOX"
		);

		AssertClick(
			locator1 = "APConfiguration#SOURCE_SCOPE_FILTER_BY_FIELD_SELECT_BUTTON",
			value1 = "Select"
		);

		SelectFrame();

		SelectFrame(locator1 = "IFrame#SELECT_STRUCTURE_FIELD");

		var key_fieldName = "${fieldFilter}";

		if (isSet(fieldFilter)) {
			Check(locator1 = "APConfigurationFilterbyfield#FIELD_FILTER_RADIO_BUTTON");
		}

		if (isSet(fieldValue)) {
			Type(locator1 = "TextInput#FIELD_FILTER_INPUT", value1 = "${fieldValue}");
		}

		AssertClick(locator1 = "Button#FIELD_FILTER_APPLY", value1 = "Apply");

		SelectFrame(value1 = "relative=top");

		IFrame.selectDialogFrame();

		if (isSet(fieldValue)) {
			AssertTextEquals.assertPartialText(
				locator1 = "APConfiguration#SOURCE_SCOPE_FIELD_FILTER_AND_VALUE",
				value1 = "${fieldFilter}: ${fieldValue}"
			);
		}

		PortletEntry.save();

		Panel.expandPanel(panelHeading = "Source");

		AssertSelectedLabel(
			locator1 = "APConfiguration#SOURCE_SCOPE_ASSET_TYPE_SELECT",
			value1 = "${selectedAsset}"
		);

		AssertSelectedLabel(
			locator1 = "APConfiguration#SOURCE_SCOPE_ASSET_SUBTYPE_SELECT",
			value1 = "${assetSubtype}"
		);
	}

	macro configureFlagAllDisplaySettingsCheckboxes {
		Portlet.gotoPortletOptions(
			portletName = "Asset Publisher",
			portletOption = "Configuration"
		);

		IFrame.selectDialogFrame();

		if (IsElementPresent(locator1 = "Configuration#SETUP_DISPLAY_SETTINGS")) {
			AssertClick(
				locator1 = "Configuration#SETUP_DISPLAY_SETTINGS",
				value1 = "Display Settings"
			);
		}

		Check.checkHiddenToggleSwitch(locator1 = "ToggleSwitch#ENABLE_PRINT");

		Check.checkHiddenToggleSwitch(locator1 = "ToggleSwitch#ENABLE_FLAGS");

		Check.checkHiddenToggleSwitch(locator1 = "ToggleSwitch#ENABLE_RELATED_ASSETS");

		Check.checkHiddenToggleSwitch(locator1 = "ToggleSwitch#ENABLE_RATINGS");

		Check.checkHiddenToggleSwitch(locator1 = "ToggleSwitch#ENABLE_COMMENTS");

		Check.checkHiddenToggleSwitch(locator1 = "ToggleSwitch#ENABLE_COMMENT_RATINGS");

		Check.checkHiddenToggleSwitch(locator1 = "ToggleSwitch#ENABLE_SOCIAL_BOOKMARKS");

		PortletEntry.save();

		SelectFrameTop(value1 = "relative=top");
	}

	macro configureFlaggableDisplaySettingsPG {
		Portlet.gotoPortletOptions(
			portletName = "${portletName}",
			portletOption = "Configuration"
		);

		IFrame.selectDialogFrame();

		Navigator.gotoNavTab(navTab = "Display Settings");

		if ("${enableRatings}" == "true") {
			Check.checkHiddenToggleSwitch(
				locator1 = "ToggleSwitch#ENABLE_RATINGS",
				value1 = "Enable Ratings"
			);
		}

		if ("${setAsDefaultPage}" == "true") {
			Check.checkHiddenToggleSwitch(
				locator1 = "ToggleSwitch#SET_AS_THE_DEFAULT_ASSET_PUBLISHER_FOR_THIS_PAGE",
				value1 = "Set as the Default Asset Publisher for This Page"
			);
		}

		PortletEntry.save();
	}

	macro configureManualAssetSelectionPG {
		Portlet.gotoPortletOptions(
			portletName = "Asset Publisher",
			portletOption = "Configuration"
		);

		IFrame.selectDialogFrame();

		Click(locator1 = "APConfiguration#ASSET_SELECTION_MANUAL");

		if (isSet(assetTitle)) {
			Panel.expandPanel(panelHeading = "Asset Entries");

			Click(
				locator1 = "APConfiguration#ASSET_SELECTION_MANUAL_ASSET_ENTRIES_SELECT_BUTTON"
			);

			AssertClick(
				locator1 = "AssetRelatedAssets#RELATED_ASSETS_SELECT_MENULIST_ASSET",
				value1 = "${assetType}",
				key_assetType = "${assetType}"
			);

			SelectFrameTop();

			IFrame.selectDialogFrame();

			AssertClick(
				locator1 = "APConfiguration#ASSET_SELECTION_MANUAL_ASSET_ENTRIES_SELECT_CONTENT_LINK",
				value1 = "${assetTitle}",
				key_assetTitle = "${assetTitle}"
			);

			SelectFrameTop();

			IFrame.selectDialogFrame();
		}

		Alert.viewSuccessMessage();

		SelectFrameTop();
	}

	macro configurePaginationPG {
		AssetPublisherPortlet.gotoConfigurationPG();

		Navigator.gotoNavTab(navTab = "Display Settings");

		Type(
			locator1 = "APConfigurationDisplaysettings#NUMBER_OF_ITEMS_TO_DISPLAY_FIELD",
			value1 = "${paginationNumber}"
		);

		Select(
			locator1 = "APConfigurationDisplaysettings#PAGINATION_TYPE_SELECT",
			value1 = "${paginationType}"
		);

		PortletEntry.save();
	}

	macro configureSelectedPG {
		AssetPublisherPortlet.gotoConfigurationPG();

		Panel.expandPanel(panelHeading = "Source");

		Select(
			locator1 = "APConfiguration#SOURCE_SCOPE_ASSET_TYPE_SELECT",
			value1 = "${selectedAsset}"
		);

		PortletEntry.save();
	}

	macro configureShowMetadataFieldsPG {
		Portlet.gotoPortletOptions(
			portletName = "${portletName}",
			portletOption = "Configuration"
		);

		IFrame.selectDialogFrame();

		Navigator.gotoNavTab(navTab = "Display Settings");

		Panel.expandPanel(panelHeading = "Show Metadata");

		for (var metadataField : list "${metadataFieldList}") {
			if ("${addMetadata}" == "true") {
				AddSelection(
					locator1 = "APConfigurationDisplaysettings#SHOW_METADATA_AVAILABLE_FIELD_SELECT",
					value1 = "${metadataField}"
				);

				Click(locator1 = "Button#MOVE_AVAILABLE_TO_CURRENT");

				AssertTextEquals(
					locator1 = "APConfigurationDisplaysettings#SHOW_METADATA_CURRENT_FIELD_SELECT",
					value1 = "${metadataField}"
				);
			}
		}

		for (var metadataField : list "${metadataFieldList}") {
			if ("${removeMetadata}" == "true") {
				AddSelection(
					locator1 = "APConfigurationDisplaysettings#SHOW_METADATA_CURRENT_FIELD_SELECT",
					value1 = "${metadataField}"
				);

				Click(locator1 = "Button#MOVE_CURRENT_TO_AVAILABLE");

				AssertTextEquals(
					locator1 = "APConfigurationDisplaysettings#SHOW_METADATA_AVAILABLE_FIELD_SELECT",
					value1 = "${metadataField}"
				);
			}
		}

		PortletEntry.save();

		SelectFrameTop();
	}

	macro configureSiteScopePG {
		var key_siteName = "${siteName}";

		AssetPublisherPortlet.gotoConfigurationPG();

		Panel.expandPanel(panelHeading = "Source");

		AssertClick(locator1 = "Configuration#SOURCE_SCOPE_SELECT", value1 = "Select");

		if ("${siteName}" == "Global") {
			MenuItem.click(menuItem = "${siteName}");
		}
		else {
			MenuItem.click(menuItem = "Other Site...");

			SelectFrame(value1 = "relative=top");

			SelectFrame(locator1 = "IFrame#SELECT_SITES");

			AssertTextEquals(
				locator1 = "APConfigurationSites#SITES_TABLE_NAME",
				value1 = "${siteName}"
			);

			AssertTextEquals(
				locator1 = "APConfigurationSites#SITES_TABLE_TYPE",
				value1 = "${siteScopeType}"
			);

			ClickNoError(locator1 = "SitesSelectSite#SITES_TABLE_CHOOSE_SITE_LINK");

			SelectFrame(value1 = "relative=top");

			IFrame.selectDialogFrame();
		}

		Panel.expandPanel(panelHeading = "Source");

		AssertTextEquals.assertPartialText(
			locator1 = "APConfiguration#SOURCE_SCOPE_NAME",
			value1 = "${siteName}"
		);

		AssertTextEquals(
			locator1 = "APConfiguration#SOURCE_SCOPE_TYPE",
			value1 = "${siteScopeType}"
		);

		PortletEntry.save();

		Panel.expandPanel(panelHeading = "Source");

		AssertTextEquals.assertPartialText(
			locator1 = "APConfiguration#SOURCE_SCOPE_NAME",
			value1 = "${siteName}"
		);

		AssertTextEquals(
			locator1 = "APConfiguration#SOURCE_SCOPE_TYPE",
			value1 = "${siteScopeType}"
		);

		AssertElementPresent(locator1 = "APConfiguration#SOURCE_SCOPE_DELETE");

		SelectFrameTop();
	}

	macro configureSiteScopeRemoveSitePG {
		Portlet.gotoPortletOptions(
			portletName = "Asset Publisher",
			portletOption = "Configuration"
		);

		IFrame.selectDialogFrame();

		Panel.expandPanel(panelHeading = "Source");

		var key_siteName = "${siteName}";

		Click(locator1 = "APConfiguration#SOURCE_SCOPE_DELETE");

		Alert.viewSuccessMessage();

		AssertTextNotPresent(
			locator1 = "APConfiguration#SOURCE_SCOPE_NAME",
			value1 = "${siteName}"
		);

		AssertTextNotPresent(
			locator1 = "APConfiguration#SOURCE_SCOPE_TYPE",
			value1 = "${siteScopeType}"
		);

		SelectFrameTop();
	}

	macro configureTagsFilterPG {
		AssetPublisherPortlet.gotoConfigurationPG();

		Panel.expandPanel(panelHeading = "Filter");

		if (isSet(queryAndOperator)) {
			Select(
				locator1 = "APConfiguration#FILTER_QUERY_AND_OPERATOR",
				value1 = "${queryAndOperator}"
			);
		}

		if (isSet(queryContains)) {
			Select(
				locator1 = "APConfiguration#FILTER_QUERY_CONTAINS",
				value1 = "${queryContains}"
			);
		}

		Select(
			locator1 = "APConfiguration#FILTER_CATEGORIZATION_SELECT",
			value1 = "Tags"
		);

		AssetCategorization.selectTag(tagNameList = "${tagNameList}");

		PortletEntry.save();

		IFrame.selectTopFrame();
	}

	macro deleteConfigurationTemplatePG {
		Portlet.gotoPortletOptions(
			portletName = "Asset Publisher",
			portletOption = "Configuration Templates"
		);

		IFrame.selectDialogFrame();

		LexiconEntry.gotoEntryMenuItemNoWaitNoError(
			menuItem = "Delete",
			rowEntry = "${configurationName}"
		);

		Confirm.waitForConfirmation(
			value1 = "Are you sure you want to delete this? It will be deleted immediately."
		);

		Alert.viewSuccessMessage();

		AssertTextEquals(
			locator1 = "Message#EMPTY_INFO",
			value1 = "There are no configuration templates."
		);
	}

	macro editConfigureCategoriesFilterPG {
		AssetPublisherPortlet.gotoConfigurationPG();

		Panel.expandPanel(panelHeading = "Filter");

		if (isSet(queryAndOperator)) {
			Select(
				locator1 = "APConfiguration#FILTER_QUERY_AND_OPERATOR",
				value1 = "${queryAndOperator}"
			);
		}

		if (isSet(queryContains)) {
			Select(
				locator1 = "APConfiguration#FILTER_QUERY_CONTAINS",
				value1 = "${queryContains}"
			);
		}

		Click(locator1 = "Button#SELECT_CATEGORIES");

		AssetCategorization.gotoSelectCategory();

		for (var categoryName : list "${categoryNames}") {
			Portlet.selectTreeNode(nodeName = "${categoryName}");
		}

		SelectFrame(value1 = "relative=top");

		Click(locator1 = "Icon#CLOSE");

		SelectFrame(locator1 = "IFrame#DIALOG");

		PortletEntry.save();
	}

	macro enableRSSSubscription {
		IFrame.selectDialogFrame();

		Navigator.gotoNavTab(navTab = "Subscriptions");

		AssertTextEquals(
			locator1 = "APConfiguration#SUBSCRIPTIONS_ENABLE_RSS_SUBSCRIPTION_LABEL",
			value1 = "Enable RSS Subscription"
		);

		Check.checkToggleSwitch(
			locator1 = "APConfiguration#SUBSCRIPTIONS_ENABLE_RSS_SUBSCRIPTION"
		);
	}

	macro gotoConfigurationPG {
		Portlet.gotoPortletOptions(
			order = "${order}",
			portletName = "Asset Publisher",
			portletOption = "Configuration"
		);

		IFrame.selectDialogFrame();
	}

	macro gotoEditRelatedAssets {
		MouseOver(locator1 = "AP#BODY");

		Click.waitForMenuToggleJSClick(locator1 = "Icon#BODY_VERTICAL_ELLIPSIS");

		AssertClick.assertPartialTextClickAt(
			locator1 = "MenuItem#ANY_MENU_ITEM",
			value1 = "Edit",
			key_menuItem = "Edit"
		);
	}

	macro gotoEditWebContent {
		MouseOver(locator1 = "AP#BODY");

		Click.waitForMenuToggleJSClick(
			locator1 = "AP#ASSET_ABSTRACT_VERTICAL_ELLIPSIS",
			key_assetTitle = "${assetTitle}"
		);

		AssertClick.assertPartialTextClickAt(
			locator1 = "MenuItem#ANY_MENU_ITEM",
			value1 = "Edit",
			key_menuItem = "Edit"
		);
	}

	macro gotoViewInContext {
		AssertClick(locator1 = "Link#VIEW_IN_CONTEXT", value1 = "View in Context »");
	}

	macro rateAssetPG {
		Click.clickNoMouseOver(
			locator1 = "Ratings#YOUR_RATING_STAR_EMPTY",
			key_emptyStarPosition = "${rating}"
		);
	}

	macro removeSiteScope {
		AssetPublisherPortlet.gotoConfigurationPG();

		Panel.expandPanel(panelHeading = "Source");

		for (var removeSiteScope : list "${removeSiteScopes}") {
			var key_siteName = "${removeSiteScope}";

			Click(locator1 = "APConfiguration#SOURCE_SCOPE_DELETE");
		}

		Alert.viewSuccessMessage();

		SelectFrameTop();
	}

	macro restoreConfigurationTemplatePG {
		Portlet.gotoPortletOptions(
			order = "${order}",
			portletName = "Asset Publisher",
			portletOption = "Configuration Templates"
		);

		IFrame.selectDialogFrame();

		LexiconEntry.gotoEntryMenuItemNoWait(
			menuItem = "Apply",
			rowEntry = "${configurationName}"
		);

		Alert.viewSuccessMessage();
	}

	macro saveConfigurationTemplatePG {
		Portlet.gotoPortletOptions(
			portletName = "Asset Publisher",
			portletOption = "Configuration Templates"
		);

		IFrame.selectDialogFrame();

		AssertTextEquals(
			locator1 = "Message#EMPTY_INFO",
			value1 = "There are no configuration templates."
		);

		AssertClick(
			locator1 = "Configuration#SAVE_CONFIGURATION_TEMPLATE",
			value1 = "Save Current Configuration as Template"
		);

		PortletEntry.inputName(name = "${configurationName}");

		Button.clickSave();

		AssertTextEquals(
			locator1 = "Configuration#CONFIGURATION_TEMPLATE_TABLE_NAME",
			value1 = "${configurationName}",
			key_configurationName = "${configurationName}"
		);

		Alert.viewSuccessMessage();

		SelectFrameTop();
	}

	macro viewAssetDetailsPG {
		var key_assetTitle = "${assetTitle}";

		AssertTextEquals(locator1 = "AP#ASSET_ABSTRACT_TITLE", value1 = "${assetTitle}");

		AssertClick(locator1 = "AP#ASSET_ABSTRACT_TITLE", value1 = "${assetTitle}");

		AssertTextEquals(
			locator1 = "APAsset#ASSET_TITLE_HEADER",
			value1 = "${assetTitle}"
		);

		AssertTextEquals.assertPartialText(
			locator1 = "AP#ASSET_ABSTRACT_DETAIL_CONTENT",
			value1 = "${assetContent}"
		);
	}

	macro viewAssetMetadataPG {
		var key_categoryName = "${categoryName}";
		var key_vocabularyName = "${vocabularyName}";

		AssertTextEquals.assertPartialText(
			locator1 = "AP#METADATA_VOCABULARY",
			value1 = "${vocabularyName}"
		);

		AssertTextEquals.assertPartialText(
			locator1 = "AP#METADATA_CATEGORY",
			value1 = "${categoryName}"
		);
	}

	macro viewAssetNotPresentPG {
		var key_assetTitle = "${assetTitle}";

		AssertTextNotPresent(
			locator1 = "AP#ASSET_ABSTRACT_TITLE",
			value1 = "${assetTitle}"
		);

		AssertTextNotPresent(
			locator1 = "AP#ASSET_ABSTRACT_DESCRIPTION",
			value1 = "${assetContent}"
		);
	}

	macro viewAssetPG {
		var key_assetTitle = "${assetTitle}";

		AssertTextEquals(locator1 = "AP#ASSET_ABSTRACT_TITLE", value1 = "${assetTitle}");

		AssertTextEquals.assertPartialText(
			locator1 = "AP#ASSET_ABSTRACT_DESCRIPTION",
			value1 = "${assetContent}"
		);
	}

	macro viewAssetRatingPG {
		if ("${rating}" == "0") {
			AssertElementNotPresent(
				locator1 = "Ratings#YOUR_RATING_STAR",
				key_ratingStarPosition = "1"
			);
		}
		else {
			var ratingPosition = "1";

			while (!("${ratingPosition}" == "${rating}")) {
				AssertElementPresent(
					locator1 = "Ratings#YOUR_RATING_STAR",
					key_ratingStarPosition = "${ratingPosition}"
				);

				var ratingPosition = MathUtil.sum("${ratingPosition}", "1");
			}

			AssertElementNotPresent(
				locator1 = "Ratings#YOUR_RATING_STAR",
				key_ratingStarPosition = MathUtil.sum("${ratingPosition}", "1")
			);
		}

		if ("${rating}" == "5") {
			AssertElementNotPresent(
				locator1 = "Ratings#YOUR_RATING_STAR_EMPTY",
				key_emptyStarPosition = "1"
			);
		}
		else {
			var emptyRating = MathUtil.difference("5", "${rating}");
			var emptyStarPosition = "1";

			while (!("${emptyStarPosition}" == "${emptyRating}")) {
				AssertElementPresent(
					locator1 = "Ratings#YOUR_RATING_STAR_EMPTY",
					key_emptyStarPosition = "${emptyStarPosition}"
				);

				var emptyStarPosition = MathUtil.sum("${emptyStarPosition}", "1");
			}

			AssertElementNotPresent(
				locator1 = "Ratings#YOUR_RATING_STAR_EMPTY",
				key_emptyStarPosition = MathUtil.sum("${emptyStarPosition}", "1")
			);
		}
	}

	macro viewAssetTypeNotAvailable {
		IFrame.selectConfigurationFrame();

		Panel.expandPanel(panelHeading = "Source");

		AssertTextNotEquals(
			locator1 = "APConfiguration#SOURCE_SCOPE_ASSET_TYPE_SELECT",
			value1 = "${assetType}"
		);

		SelectFrameTop();
	}

	macro viewAssetViewCount {
		AssertTextEquals.assertPartialText(
			locator1 = "APAsset#ASSET_VIEW_COUNT",
			value1 = "${viewCount}",
			key_assetTitle = "${assetTitle}",
			key_viewCount = "${viewCount}"
		);
	}

	macro viewAverageRatingPG {
		if ("${averageRating}" == "0") {
			AssertElementNotPresent(
				locator1 = "Ratings#AVERAGE_STAR",
				key_averageRatingStar = "1"
			);
		}
		else {
			var ratingPosition = "1";

			while (!("${ratingPosition}" == "${averageRating}")) {
				AssertElementPresent(
					locator1 = "Ratings#AVERAGE_STAR",
					key_averageRatingStar = "${ratingPosition}"
				);

				var ratingPosition = MathUtil.sum("${ratingPosition}", "1");
			}

			AssertElementNotPresent(
				locator1 = "Ratings#AVERAGE_STAR",
				key_averageRatingStar = MathUtil.sum("${ratingPosition}", "1")
			);
		}

		if ("${averageRating}" == "5") {
			AssertElementNotPresent(
				locator1 = "Ratings#AVERAGE_STAR_EMPTY",
				key_averageEmptyStar = "1"
			);
		}
		else {
			var emptyRating = MathUtil.difference("5", "${averageRating}");
			var emptyStarPosition = "1";

			while (!("${emptyStarPosition}" == "${emptyRating}")) {
				AssertElementPresent(
					locator1 = "Ratings#AVERAGE_STAR_EMPTY",
					key_averageEmptyStar = "${emptyStarPosition}"
				);

				var emptyStarPosition = MathUtil.sum("${emptyStarPosition}", "1");
			}

			AssertElementNotPresent(
				locator1 = "Ratings#AVERAGE_STAR_EMPTY",
				key_averageEmptyStar = MathUtil.sum("${emptyStarPosition}", "1")
			);
		}

		AssertTextEquals(
			locator1 = "Ratings#AVERAGE_LABEL",
			value1 = "Average (1 Vote)"
		);
	}

	macro viewConfigureAPDisplayTemplateFullContentBookmarksPG {
		Click(locator1 = "Icon#SHARE");

		AssertElementNotPresent(locator1 = "Link#READ_MORE");

		AssertElementPresent(locator1 = "Icon#TWITTER");
	}

	macro viewConfigureAPDisplayTemplateTableBookmarksPG {
		var key_assetTitle = "${assetTitle}";
		var key_bookmarkName = "${bookmarkName}";

		AssertElementNotPresent(locator1 = "Link#READ_MORE");

		AssertTextNotPresent(
			locator1 = "AP#ASSET_ABSTRACT_DESCRIPTION",
			value1 = "${bookmarkDescription}"
		);

		AssertElementNotPresent(
			locator1 = "AP#ASSET_ABSTRACT_BOOKMARK_TABLE_DISPLAY_TEMPLATE_BOOKMARK_ICON"
		);
	}

	macro viewConfigureAPDisplayTemplateTitleListBookmarksPG {
		var key_assetTitle = "${assetTitle}";

		AssertElementNotPresent(locator1 = "Link#READ_MORE");

		AssertTextNotPresent(
			locator1 = "AP#ASSET_ABSTRACT_DESCRIPTION",
			value1 = "${bookmarkDescription}"
		);
	}

	macro viewConfigureAPMoveToAvailablePG {
		AssertTextNotPresent(
			locator1 = "AP#ASSET_ABSTRACT_TITLE",
			value1 = "${assetTitle}",
			key_assetTitle = "${assetTitle}"
		);
	}

	macro viewConfigureAPMoveToSelectedPG {
		AssertTextEquals(
			locator1 = "AP#ASSET_ABSTRACT_TITLE",
			value1 = "${assetTitle}",
			key_assetTitle = "${assetTitle}"
		);
	}

	macro viewConfigureFlaggableDisplaySettingsPG {
		AssetPublisherPortlet.gotoConfigurationPG();

		Navigator.gotoNavTab(navTab = "Display Settings");

		if ("${enableRatings}" == "true") {
			AssertChecked.assertCheckedHiddenToggleSwitch(
				locator1 = "ToggleSwitch#ENABLE_RATINGS",
				value1 = "Enable Ratings"
			);
		}

		if ("${setAsDefaultPage}" == "true") {
			AssertChecked.assertCheckedHiddenToggleSwitch(
				locator1 = "ToggleSwitch#SET_AS_THE_DEFAULT_ASSET_PUBLISHER_FOR_THIS_PAGE",
				value1 = "Set as the Default Asset Publisher for This Page"
			);
		}

		PortletEntry.save();

		SelectFrameTop();
	}

	macro viewConfigureSiteScopeContentSharingPG {
		AssetPublisherPortlet.gotoConfigurationPG();

		Panel.expandPanel(panelHeading = "Source");

		AssertClick(locator1 = "Configuration#SOURCE_SCOPE_SELECT", value1 = "Select");

		if ("${contentSharingAcrossSitesEnabled}" == "true") {
			AssertTextEquals(
				locator1 = "MenuItem#ANY_MENU_ITEM",
				value1 = "Global",
				key_menuItem = "Global"
			);

			MenuItem.click(menuItem = "Other Site...");

			SelectFrame(value1 = "relative=top");

			SelectFrame(locator1 = "IFrame#SELECT_SITES");

			var key_siteName = "${liferaySiteName}";

			if (isSet(currentSite)) {
				AssertElementNotPresent(locator1 = "APConfigurationSites#SITES_TABLE_NAME");

				AssertElementNotPresent(locator1 = "APConfigurationSites#SITES_TABLE_TYPE");
			}
			else {
				AssertTextEquals(
					locator1 = "APConfigurationSites#SITES_TABLE_NAME",
					value1 = "${liferaySiteName}"
				);

				AssertTextEquals(
					locator1 = "APConfigurationSites#SITES_TABLE_TYPE",
					value1 = "${liferaySiteType}"
				);

				AssertElementPresent(locator1 = "SitesSelectSite#SITES_TABLE_CHOOSE_SITE_LINK");
			}
		}
		else if ("${contentSharingAcrossSitesEnabled}" == "false") {
			AssertTextEquals(
				locator1 = "MenuItem#ANY_MENU_ITEM",
				value1 = "Global",
				key_menuItem = "Global"
			);

			if ("${childSite}" == "true") {
				AssertTextEquals(
					locator1 = "MenuItem#ANY_MENU_ITEM",
					value1 = "Other Site...",
					key_menuItem = "Other Site..."
				);
			}
			else {
				MenuItem.viewNotPresent(menuItem = "OTHER_SITE");
			}
		}

		SelectFrame(value1 = "relative=top");
	}

	macro viewContentSharingPG {
		AssetPublisherPortlet.addAsset(
			assetType = "Add Content (Select Scope and Type)"
		);

		Select(locator1 = "Select#SCOPE", value1 = "${siteScope1}");

		AssertSelectedLabel(locator1 = "Select#SCOPE", value1 = "${siteScope1}");

		Select(locator1 = "Select#SCOPE", value1 = "${siteScope2}");

		AssertSelectedLabel(locator1 = "Select#SCOPE", value1 = "${siteScope2}");

		Refresh();

		AssetPublisherPortlet.viewPG(
			assetContent = "${assetContent}",
			assetTitle = "${assetTitle}"
		);

		Click(locator1 = "APAsset#ASSET_BACK_TO_ICON");
	}

	macro viewCustomADTRichSummaryPG {
		var key_assetTitle = "${assetTitle}";

		AssertTextEquals(
			locator1 = "AP#ASSET_RICH_SUMMARY_TITLE",
			value1 = "${assetTitle}"
		);

		AssertTextEquals.assertPartialText(
			locator1 = "AP#CUSTOM_ASSET_ABSTRACT_DESCRIPTION",
			value1 = "${assetDescription}"
		);

		AssertElementPresent(locator1 = "Link#READ_MORE");

		AssertElementPresent(locator1 = "Icon#PRINT");

		AssertElementPresent(locator1 = "Icon#FLAG");

		AssertElementPresent(locator1 = "Ratings#YOUR_RATING_LABEL");

		AssertElementPresent(locator1 = "Ratings#AVERAGE_LABEL");

		AssertElementPresent(locator1 = "Comments#SUBSCRIBE_TO_COMMENTS_LINK");

		AssertElementPresent(locator1 = "Icon#CUSTOM_EDIT");

		Click(locator1 = "Icon#SHARE");

		AssertElementPresent(locator1 = "Icon#TWITTER");

		AssertElementPresent(locator1 = "Icon#FACEBOOK");
	}

	macro viewDefaultWithAllDisplaySettingsCheckboxesPG {
		var key_assetTitle = "${assetTitle}";

		AssertTextEquals(locator1 = "AP#ASSET_ABSTRACT_TITLE", value1 = "${assetTitle}");

		AssertElementPresent(locator1 = "AP#ASSET_ABSTRACT_EDIT");

		AssertTextEquals.assertPartialText(
			locator1 = "AP#ASSET_ABSTRACT_DESCRIPTION",
			value1 = "${assetDescription}"
		);
	}

	macro viewDisplayOrderPG {
		AssertTextEquals(
			locator1 = "APAsset#ASSET_ROW_ENTRY_TITLE",
			value1 = "${assetTitle}",
			key_rowNumber = "${rowNumber}"
		);
	}

	macro viewDynamicAssetSelectionConfigurationPG {
		Portlet.gotoPortletOptions(
			portletName = "Asset Publisher",
			portletOption = "Configuration"
		);

		IFrame.selectDialogFrame();

		Click(locator1 = "APConfiguration#ASSET_SELECTION_DYNAMIC");

		for (var panelHeading : list "Source,Filter,Custom User Attributes,Ordering and Grouping") {
			var key_panelHeading = "${panelHeading}";

			AssertElementPresent(locator1 = "Panel#PANEL_HEADING_COLLAPSED");
		}

		SelectFrameTop();
	}

	macro viewEditLinkPG {
		var key_assetTitle = "${entryTitle}";

		AssertTextEquals(locator1 = "AP#ASSET_ABSTRACT_TITLE", value1 = "${entryTitle}");

		AssertTextEquals.assertPartialText(
			locator1 = "AP#ASSET_ABSTRACT_DESCRIPTION",
			value1 = "${entryContent}"
		);

		AssertElementPresent(locator1 = "AP#ASSET_ABSTRACT_EDIT");
	}

	macro viewFilterAndFieldsPG {
		AssetPublisherPortlet.gotoConfigurationPG();

		Panel.expandPanel(panelHeading = "Source");

		Select(
			locator1 = "APConfiguration#SOURCE_SCOPE_ASSET_TYPE_SELECT",
			value1 = "${selectedAsset}"
		);

		Select(
			locator1 = "APConfiguration#SOURCE_SCOPE_ASSET_SUBTYPE_SELECT",
			value1 = "${assetSubtype}"
		);

		if ("${noneIndexable}" == "true") {
			AssertNotVisible(
				locator1 = "APConfiguration#SOURCE_SCOPE_FILTER_BY_FIELD_CHECKBOX"
			);

			AssertElementNotPresent(
				locator1 = "APConfiguration#SOURCE_SCOPE_FILTER_BY_FIELD_SELECT_BUTTON"
			);
		}
		else {
			Check.checkToggleSwitch(
				locator1 = "APConfiguration#SOURCE_SCOPE_FILTER_BY_FIELD_CHECKBOX"
			);

			AssertClick(
				locator1 = "APConfiguration#SOURCE_SCOPE_FILTER_BY_FIELD_SELECT_BUTTON",
				value1 = "Select"
			);

			SelectFrame();

			SelectFrame(locator1 = "IFrame#SELECT_STRUCTURE_FIELD");

			for (var assetSubtypeField : list "${assetSubtypeFields}") {
				AssertTextEquals.assertPartialText(
					locator1 = "APConfigurationFilterbyfield#FIELD_FILTER_FIELD_NAME",
					value1 = "${assetSubtypeField}",
					key_fieldName = "${assetSubtypeField}"
				);
			}
		}

		SelectFrameTop();
	}

	macro viewManualAssetSelectionConfigurationPG {
		Portlet.gotoPortletOptions(
			portletName = "Asset Publisher",
			portletOption = "Configuration"
		);

		IFrame.selectDialogFrame();

		Panel.expandPanel(panelHeading = "Asset Entries");

		Click(locator1 = "APConfiguration#ASSET_SELECTION_MANUAL");

		AssertElementNotPresent(locator1 = "APConfiguration#SOURCE_DROPDOWN");

		AssertElementNotPresent(locator1 = "APConfiguration#SOURCE_DROPDOWN_COLLAPSED");

		AssertElementNotPresent(locator1 = "APConfiguration#FILTER_DROPDOWN");

		AssertElementNotPresent(locator1 = "APConfiguration#FILTER_DROPDOWN_COLLAPSED");

		AssertElementNotPresent(locator1 = "APConfiguration#CUSTOM_USER_DROPDOWN");

		AssertElementNotPresent(
			locator1 = "APConfiguration#CUSTOM_USER_DROPDOWN_COLLAPSED"
		);

		AssertElementNotPresent(
			locator1 = "APConfiguration#ORDERING_AND_GROUPING_DROPDOWN"
		);

		AssertElementNotPresent(
			locator1 = "APConfiguration#ORDERING_AND_GROUPING_DROPDOWN_COLLAPSED"
		);

		SelectFrameTop();
	}

	macro viewManualAssetTypesPG {
		IFrame.selectDialogFrame();

		Panel.expandPanel(panelHeading = "Asset Entries");

		Click(
			locator1 = "APConfigurationManual#ASSET_SELECTION_MANUAL_ASSET_ENTRIES_SELECT"
		);

		for (var assetEntryType : list "${assetEntryTypes}") {
			AssertTextEquals.assertPartialText(
				locator1 = "APConfigurationManual#ASSET_SELECTION_MANUAL_ASSET_ENTRIES_MENULIST_ITEM",
				value1 = "${assetEntryType}",
				key_assetEntryType = "${assetEntryType}"
			);
		}

		IFrame.selectTopFrame();
	}

	macro viewManualNoAssetsMessagePG {
		AssertTextEquals(locator1 = "Message#INFO", value1 = "There are no results.");
	}

	macro viewMultipleAssetOrderPGViaAP {
		AssertTextEquals(
			locator1 = "AP#ASSET_ABSTRACT_GENERIC_TITLE_1",
			value1 = "${assetTitle1}"
		);

		AssertTextEquals(
			locator1 = "AP#ASSET_ABSTRACT_GENERIC_TITLE_2",
			value1 = "${assetTitle2}"
		);

		AssertTextEquals(
			locator1 = "AP#ASSET_ABSTRACT_GENERIC_TITLE_3",
			value1 = "${assetTitle3}"
		);
	}

	macro viewMultipleDDLRecordsViaAP {
		AssertTextEquals.assertPartialText(
			locator1 = "AP#ASSET_ABSTRACT_DDL_RECORD_1",
			value1 = "${ddlRecordFieldData1}"
		);

		AssertTextEquals.assertPartialText(
			locator1 = "AP#ASSET_ABSTRACT_DDL_RECORD_2",
			value1 = "${ddlRecordFieldData2}"
		);

		AssertTextEquals.assertPartialText(
			locator1 = "AP#ASSET_ABSTRACT_DDL_RECORD_3",
			value1 = "${ddlRecordFieldData3}"
		);
	}

	macro viewMultipleSiteScopesAddDropdowns {
		AssetPublisherPortlet.addAsset(
			assetType = "Add Content (Select Scope and Type)"
		);

		Select(locator1 = "Select#SCOPE", value1 = "${siteName1}");

		AssertSelectedLabel(locator1 = "Select#SCOPE", value1 = "${siteName1}");

		Select(locator1 = "Select#SCOPE", value1 = "${siteName2}");

		AssertSelectedLabel(locator1 = "Select#SCOPE", value1 = "${siteName2}");
	}

	macro viewNoEditLinkPG {
		var key_assetTitle = "${entryTitle}";

		AssertTextEquals(locator1 = "AP#ASSET_ABSTRACT_TITLE", value1 = "${entryTitle}");

		AssertTextEquals.assertPartialText(
			locator1 = "AP#ASSET_ABSTRACT_DESCRIPTION",
			value1 = "${entryContent}"
		);

		Click(locator1 = "AP#ASSET_ABSTRACT_EDIT");

		AssertElementNotPresent(locator1 = "AP#ASSET_EDIT");
	}

	macro viewOrderedFieldPG {
		AssertTextEquals(locator1 = "AP#ASSET_ORDER_FIRST", value1 = "${firstAsset}");

		AssertTextEquals(locator1 = "AP#ASSET_ORDER_SECOND", value1 = "${secondAsset}");

		AssertTextEquals(locator1 = "AP#ASSET_ORDER_THIRD", value1 = "${thirdAsset}");
	}

	macro viewPaginatedAssetsPG {
		var key_pageMod = "${pageMod}";
		var key_pageNumber = "${pageNumber}";
		var key_paginationNumber = "${paginationNumber}";

		AssertTextEquals(
			locator1 = "Pagination#PARTICULAR_PAGE",
			value1 = "Page ${pageNumber}"
		);

		AssertTextEquals.assertPartialText(
			locator1 = "Pagination#VARIABLE_ITEMS_PER_PAGE",
			value1 = "${paginationNumber} Items per Page"
		);

		AssertTextEquals(
			locator1 = "Pagination#VARIABLE_TOTAL_ITEMS",
			value1 = "Showing ${key_pageMod} results."
		);

		if ("${nextPageClick}" == "true") {
			AssertClick(locator1 = "Pagination#NEXT_LINK", value1 = "Next");
		}
	}

	macro viewPG {
		var key_assetContent = "${assetContent}";
		var key_assetTitle = "${assetTitle}";

		AssertTextEquals(locator1 = "AP#ASSET_ABSTRACT_TITLE", value1 = "${assetTitle}");

		AssertTextEquals.assertPartialText(
			locator1 = "AP#ASSET_ABSTRACT_DESCRIPTION",
			value1 = "${assetContent}"
		);

		AssertTextEquals.assertPartialText(
			locator1 = "APAsset#ASSET_CONTENT",
			value1 = "${assetContent}"
		);

		AssertClick(locator1 = "AP#ASSET_ABSTRACT_VIEW", value1 = "${assetTitle}");

		if (isSet(relatedAssetTitle)) {
			AssertTextEquals(
				locator1 = "AssetRelatedAssets#HEADER",
				value1 = "Related Assets:"
			);

			AssertTextEquals(
				locator1 = "AssetRelatedAssets#ASSET_TITLE",
				value1 = "${relatedAssetTitle}"
			);
		}

		if (isSet(relatedAssetTitleHidden)) {
			AssertTextEquals(
				locator1 = "AssetRelatedAssets#HEADER",
				value1 = "Related Assets:"
			);

			AssertTextNotPresent(value1 = "${relatedAssetTitleHidden}");
		}

		if (isSet(tagName)) {
			AssertTextEquals(locator1 = "AP#METADATA_TAGS", value1 = "${tagName}");
		}
	}

	macro viewPlusIconNotPresentPG {
		AssertElementNotPresent(
			locator1 = "Portlet#ICON_PLUS_SIGN",
			key_portletName = "Asset Publisher"
		);
	}

	macro viewReadMoreLinkNotPresentPG {
		AssertTextNotPresent(locator1 = "Link#READ_MORE", value1 = "Read More");
	}

	macro viewRestoredSetupPG {
		Portlet.gotoPortletOptions(
			portletName = "Asset Publisher",
			portletOption = "Configuration"
		);

		IFrame.selectDialogFrame();

		Panel.expandPanel(panelHeading = "Asset Entries");

		AssertTextEquals(
			locator1 = "APConfigurationManual#ASSET_SELECTION_MANUAL_NONE",
			value1 = "None"
		);

		SelectFrameTop();
	}

	macro viewSelectedPG {
		Click.clickNoWaitForVisible(
			locator1 = "Portlet#ICON_PLUS_SIGN",
			key_portletName = "Asset Publisher"
		);

		MenuItem.viewPresent(menuItem = "${selectedAsset}");

		Click(locator1 = "AP#BODY");

		AssetPublisherPortlet.gotoConfigurationPG();

		Panel.expandPanel(panelHeading = "Source");

		AssertSelectedLabel(
			locator1 = "APConfiguration#SOURCE_SCOPE_ASSET_TYPE_SELECT",
			value1 = "${selectedAssetConfiguration}"
		);

		SelectFrameTop();
	}

	macro viewTagFocusPG {
		for (var assetTitle : list "${assetTitleList}") {
			AssertTextEquals(
				locator1 = "AP#ASSET_ABSTRACT_TITLE",
				value1 = "${assetTitle}",
				key_assetTitle = "${assetTitle}"
			);
		}

		if (isSet(nonTaggedAsset)) {
			AssertTextNotPresent(
				locator1 = "AP#ASSET_ABSTRACT_TITLE",
				value1 = "${nonTaggedAsset}",
				key_assetTitle = "${nonTaggedAsset}"
			);
		}
	}
}