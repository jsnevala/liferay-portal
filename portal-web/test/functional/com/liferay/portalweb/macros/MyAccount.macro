definition {
	macro addOrganization {
		LexiconEntry.gotoAdd();

		PortletEntry.inputName(name = "${organizationName}");

		PortletEntry.save();
	}

	macro changeUserLanguage {
		Select(locator1 = "MyAccount#LANGUAGE_SELECT", value1 = "${languageName}");

		var key_saveButton = "${saveButton}";

		AssertClick(locator1 = "Button#SAVE_LOCALIZED", value1 = "${saveButton}");

		AssertElementPresent(locator1 = "Message#SUCCESS");
	}

	macro configureDisplaySettingsLanguage {
		Page.gotoMyAccount(portletName = "Account Settings");

		Select(locator1 = "MyAccount#LANGUAGE_SELECT", value1 = "${languageName}");

		AssertClick(locator1 = "Button#SAVE", value1 = "Save");

		AssertElementPresent(locator1 = "Message#SUCCESS");
	}

	macro configureDisplaySettingsLanguageLocalized {
		ProductMenu.gotoPortlet(
			category = "${category}",
			panel = "User",
			portlet = "${portlet}"
		);

		Select(locator1 = "MyAccount#LANGUAGE_SELECT", value1 = "${languageName}");

		var key_saveButton = "${saveButton}";

		AssertClick(locator1 = "Button#SAVE_LOCALIZED", value1 = "${saveButton}");

		AssertElementPresent(locator1 = "Message#SUCCESS");
	}

	macro editPasswordInvalidCP {
		Panel.expandPanel(panelHeading = "Password");

		if (isSet(currentPassword)) {
			Type(locator1 = "TextInput#CURRENT_PASSWORD", value1 = "${currentPassword}");
		}
		else {
			Type(locator1 = "TextInput#CURRENT_PASSWORD", value1 = "test");
		}

		Type(locator1 = "TextInput#NEW_PASSWORD", value1 = "${newPassword}");

		Type(locator1 = "TextInput#ENTER_AGAIN", value1 = "${newPassword}");

		Button.clickSave();

		if ("${changeable}" == "false") {
			Alert.viewRequestFailedToComplete();

			AssertTextEquals.assertPartialText(
				locator1 = "Message#ERROR_2",
				value1 = "Passwords may not be changed under the current password policy."
			);
		}
		else {
			Alert.viewRequestFailedToComplete();

			AssertTextEquals.assertPartialText(
				locator1 = "Message#ERROR_2",
				value1 = "That password is invalid. Please enter in a different password."
			);
		}
	}

	macro view {
		for (var key_panelHeading : list "Password,Organizations,Sites,User Groups,Roles,Categorization") {
			AssertElementPresent(locator1 = "Panel#PANEL_HEADING_COLLAPSED");
		}
	}
}