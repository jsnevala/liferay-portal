definition {
	macro checkSocialBookmarks {
		Check.checkToggleSwitch(locator1 = "Checkbox#ENABLE_SOCIAL_BOOKMARKS");
	}

	macro configureScopePG {
		Portlet.gotoPortletOptions(
			portletName = "${portletName}",
			portletOption = "Configuration"
		);

		IFrame.selectConfigurationFrame();

		Navigator.gotoNavItem(navItem = "Scope");

		Select(locator1 = "Select#SCOPE", value1 = "${scopeSelection}");

		PortletEntry.save();
	}

	macro enableSocialBookmarkSites {
		var key_socialBookmarkSite = "${socialBookmarkSite}";

		Check(locator1 = "SocialBookmarks#SOCIAL_BOOKMARKS_CONFIGURATION_CHECKBOX");
	}

	macro gotoRSS {
		AssertClick(locator1 = "Configuration#NAVIGATION_RSS", value1 = "RSS");
	}

	macro selectDisplayTemplate {
		Select(
			locator1 = "Configuration#SETUP_DISPLAY_SETTINGS_DISPLAY_TEMPLATE_SELECT",
			value1 = "${displayTemplate}"
		);
	}

	macro selectMaximumItemstoDisplay {
		Select(
			locator1 = "Select#MAXIMUM_ITEMS_TO_DISPLAY",
			value1 = "${maximumItemsToDisplay}"
		);
	}

	macro selectScopeCP {
		var key_scopeDefault = "${scopeDefault}";

		Click.pauseClickAt(locator1 = "ProductMenu#PRODUCT_MENU_PANEL_SCOPE_COG");

		var key_scopeSelection = "${scopeSelection}";

		AssertClick.assertPartialTextClickAt(
			locator1 = "MenuItem#ANY_MENU_ITEM",
			value1 = "${scopeSelection}",
			key_menuItem = "${scopeSelection}"
		);

		AssertTextEquals.assertPartialText(
			locator1 = "ProductMenu#PRODUCT_MENU_PANEL_SCOPE",
			value1 = "${scopeSelection}"
		);
	}

	macro selectScopePG {
		var key_scopeSelection = "${scopeSelection}";

		Select(locator1 = "Select#SCOPE", value1 = "regexp:.*${scopeSelection}.*");

		Pause(locator1 = "3000");

		Click(locator1 = "Button#SAVE");

		Alert.viewSuccessMessage();

		BlogsConfiguration.viewScopeSelection(scopeSelection = "${scopeSelection}");
	}

	macro uncheckComments {
		Uncheck(locator1 = "Checkbox#ENABLE_COMMENTS");
	}

	macro uncheckRelatedAssets {
		Uncheck(locator1 = "Checkbox#ENABLE_RELATED_ASSETS");
	}

	macro uncheckRSSSubscriptionCheckbox {
		Uncheck.uncheckToggleSwitch(locator1 = "Checkbox#ENABLE_RSS_SUBSCRIPTION");
	}

	macro uncheckSocialBookmarks {
		Uncheck.uncheckToggleSwitch(locator1 = "Checkbox#ENABLE_SOCIAL_BOOKMARKS");
	}

	macro viewAsSiteMemberPG {
		var key_portletName = "Blogs";

		AssertElementPresent(locator1 = "Portlet#TITLE");

		AssertElementNotPresent(locator1 = "Blogs#ADD_BLOGS_ENTRY");

		if (IsElementPresent(locator1 = "Portlet#OPTIONS_ICON")) {
			Click.mouseOverClick(locator1 = "Portlet#OPTIONS_ICON");

			MenuItem.viewNotPresent(menuItem = "Permissions");
		}

		AssertTextEquals(locator1 = "Link#SUBSCRIBE", value1 = "Subscribe");

		AssertTextEquals(locator1 = "Link#RSS", value1 = "RSS");
	}

	macro viewDefaultConfiguration {
		AssertTextEquals.assertValue(
			locator1 = "Select#MAXIMUM_ITEMS_TO_DISPLAY",
			value1 = "20"
		);

		AssertTextEquals.assertValue(
			locator1 = "Configuration#SETUP_DISPLAY_SETTINGS_DISPLAY_TEMPLATE_SELECT",
			value1 = "abstract"
		);

		AssertChecked(locator1 = "Checkbox#ENABLE_FLAGS");

		AssertChecked(locator1 = "Checkbox#ENABLE_RELATED_ASSETS");

		AssertChecked(locator1 = "Checkbox#ENABLE_RATINGS");

		AssertChecked(locator1 = "Checkbox#ENABLE_COMMENTS");

		AssertChecked(locator1 = "Checkbox#ENABLE_COMMENT_RATINGS");

		Check.checkToggleSwitch(locator1 = "Checkbox#ENABLE_SOCIAL_BOOKMARKS");

		AssertTextEquals.assertValue(
			locator1 = "Configuration#SETUP_SOCIAL_BOOKMARKS_DISPLAY_STYLE_SELECT",
			value1 = "menu"
		);

		AssertTextEquals.assertValue(
			locator1 = "Configuration#SETUP_SOCIAL_BOOKMARKS_DISPLAY_POSITION_SELECT",
			value1 = "bottom"
		);

		AssertChecked(locator1 = "Checkbox#TWITTER");

		AssertChecked(locator1 = "Checkbox#FACEBOOK");
	}

	macro viewDefaultConfigurationRSS {
		Check.checkToggleSwitch(locator1 = "Checkbox#ENABLE_RSS_SUBSCRIPTION");

		AssertTextEquals.assertValue(
			locator1 = "Configuration#SETUP_RSS_MAXIMUM_ITEMS_TO_DISPLAY_SELECT",
			value1 = "20"
		);

		AssertTextEquals.assertValue(
			locator1 = "Configuration#SETUP_RSS_DISPLAY_STYLE_SELECT",
			value1 = "full-content"
		);

		AssertTextEquals.assertValue(
			locator1 = "Configuration#SETUP_RSS_FORMAT_SELECT",
			value1 = "atom_1.0"
		);
	}

	macro viewNoPermissionCP {
		var key_portletTitle = "Blogs";

		AssertTextEquals(
			locator1 = "Home#SITE_ADMINISTRATION_PORTLET_TITLE",
			value1 = "Blogs"
		);

		AssertElementPresent(locator1 = "NavBar#CONTAINER");

		AssertTextEquals(
			locator1 = "Message#EMPTY_INFO",
			value1 = "No entries were found."
		);
	}

	macro viewNoPermissionPG {
		AssertElementNotPresent(locator1 = "Blogs#ADD_BLOGS_ENTRY");

		AssertElementNotPresent(locator1 = "Link#SUBSCRIBE");

		AssertTextEquals(locator1 = "Link#RSS", value1 = "RSS");

		if (IsElementPresent(locator1 = "Portlet#OPTIONS_ICON")) {
			Click.mouseOverClick(locator1 = "Portlet#OPTIONS_ICON");

			MenuItem.viewNotPresent(menuItem = "Permissions");

			if (IsElementPresent(locator1 = "MenuItem#ANY_MENU_ITEM", key_menuItem = "Configuration")) {
				MenuItem.click(menuItem = "Configuration");

				IFrame.selectConfigurationFrame();

				MenuItem.viewNotPresent(menuItem = "Permissions");
			}
		}
	}

	macro viewNoSubscribePG {
		AssertElementNotPresent(locator1 = "Link#SUBSCRIBE");
	}

	macro viewPermissionsPG {
		Click.mouseOverClick(locator1 = "Portlet#OPTIONS_ICON");

		if (IsElementPresent(locator1 = "Portlet#OPTIONS_MENULIST_PERMISSIONS")) {
			Click(locator1 = "Portlet#OPTIONS_MENULIST_PERMISSIONS");

			IFrame.selectDialogFrame();
		}

		MenuItem.viewPresent(menuItem = "Permissions");
	}

	macro viewScopeDefaultNoEntryCP {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Blogs"
		);

		AssertElementPresent(locator1 = "ProductMenu#PRODUCT_MENU_PANEL_SCOPE");

		AssertTextEquals(
			locator1 = "ProductMenu#PRODUCT_MENU_PANEL_SCOPE",
			value1 = "${contentScopeName}"
		);

		AssertTextEquals(
			locator1 = "Message#EMPTY_INFO",
			value1 = "No entries were found."
		);
	}

	macro viewScopeSelection {
		AssertSelectedLabel(locator1 = "Select#SCOPE", value1 = "${scopeSelection}");
	}

	macro viewSubscribePG {
		AssertTextEquals(locator1 = "Link#SUBSCRIBE", value1 = "Subscribe");
	}
}