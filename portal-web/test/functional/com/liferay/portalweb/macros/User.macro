definition {
	var password = "test";
	var userEmailAddress = "test@liferay.com";

	macro _signInLocalization {
		if ("${localization}" == "JA") {
			var localizedSignIn = "ログイン";
		}
		else if ("${localization}" == "ZH") {
			var localizedSignIn = "登录";
		}
		else if ("${localization}" == "ES") {
			var localizedSignIn = "Acceder";
		}
		else {
			var localizedSignIn = "Sign In";
		}

		return "${localizedSignIn}";
	}

	macro acceptEndUserLicenseAgreement {
		if (IsElementPresent(locator1 = "Button#I_AGREE", value1 = "I Agree")) {
			AssertClick(locator1 = "Button#I_AGREE", value1 = "I Agree");

			AssertElementNotPresent(locator1 = "Button#I_AGREE");
		}
	}

	macro activateCP {
		Click(locator1 = "Dropdown#FILTER");

		var key_filterValue = "Inactive";

		AssertClick(locator1 = "Dropdown#FILTER_VALUES", value1 = "Inactive");

		LexiconEntry.gotoEntryMenuItem(
			menuItem = "Activate",
			rowEntry = "${userScreenName}"
		);

		Alert.viewSuccessMessage();

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		var key_userScreenName = "${userScreenName}";

		AssertTextEquals(
			locator1 = "UsersAndOrganizations#USER_TABLE_NAME",
			value1 = "${userName}"
		);

		AssertTextEquals(
			locator1 = "UsersAndOrganizations#USER_TABLE_SCREEN_NAME_LINK",
			value1 = "${userScreenName}"
		);
	}

	macro addAddressViaMyAccount {
		Click(locator1 = "NavListItem#ADDRESSES");

		Type(locator1 = "TextInput#STREET_1", value1 = "${userAddressStreet1}");

		if (isSet(userAddressCountry)) {
			Select(locator1 = "Select#COUNTRY", value1 = "${userAddressCountry}");
		}

		if (isSet(userAddressRegion)) {
			Select(locator1 = "Select#REGION", value1 = "${userAddressRegion}");
		}

		if (isSet(userAddressPostalCode)) {
			Type(locator1 = "TextInput#POSTAL_CODE", value1 = "${userAddressPostalCode}");
		}

		if (isSet(userAddressType)) {
			Select(locator1 = "Select#TYPE", value1 = "${userAddressType}");
		}

		Type(locator1 = "TextInput#CITY", value1 = "${userAddressCity}");

		Click(locator1 = "Radio#PRIMARY");

		Check(locator1 = "Checkbox#MAILING");

		Click(locator1 = "Button#SAVE");

		Alert.viewSuccessMessage();

		SelectFrame(value1 = "relative=top");
	}

	macro addCP {
		LexiconEntry.gotoAdd();

		Type(
			locator1 = "UsersAndOrganizationsEditUser#DETAILS_SCREEN_NAME_FIELD",
			value1 = "${userScreenName}"
		);

		Type(locator1 = "TextInput#EMAIL_ADDRESS", value1 = "${userEmailAddress}");

		Type(
			locator1 = "UsersAndOrganizationsEditUser#DETAILS_FIRST_NAME_FIELD",
			value1 = "${userFirstName}"
		);

		if (isSet(userBirthday)) {
			Type(
				locator1 = "UsersAndOrganizationsEditUser#DETAILS_BIRTHDAY_FIELD",
				value1 = "${userBirthday}"
			);
		}

		if (isSet(userMiddleName)) {
			Type(
				locator1 = "UsersAndOrganizationsEditUser#DETAILS_MIDDLE_NAME_FIELD",
				value1 = "${userMiddleName}"
			);
		}

		if (isSet(userGender)) {
			Select(
				locator1 = "UsersAndOrganizationsEditUser#DETAILS_GENDER_SELECT",
				value1 = "${userGender}"
			);
		}

		Type(
			locator1 = "UsersAndOrganizationsEditUser#DETAILS_LAST_NAME_FIELD",
			value1 = "${userLastName}"
		);

		AssertClick(locator1 = "Button#SUBMIT", value1 = "Save");

		if ("${userEmailAddressVariation}" == "Invalid") {
			Type(locator1 = "TextInput#EMAIL_ADDRESS", value1 = " ");

			AssertTextEquals.assertPartialText(
				locator1 = "Message#ERROR_ALERT",
				value1 = "Please enter a valid email address."
			);
		}
		else if ("${userEmailAddressVariation}" == "Null") {
			AssertTextEquals(
				locator1 = "Message#ERROR_ALERT",
				value1 = "This field is required."
			);
		}
		else if ("${userEmailAddressVariation}" == "Root") {
			Alert.viewRequestFailedToComplete();

			AssertTextEquals.assertPartialText(
				locator1 = "Message#ERROR_2",
				value1 = "Please enter a valid email address."
			);
		}
		else if ("${userScreenNameVariation}" == "Invalid") {
			Type(
				locator1 = "UsersAndOrganizationsEditUser#DETAILS_SCREEN_NAME_FIELD",
				value1 = " "
			);

			AssertTextEquals.assertPartialText(
				locator1 = "Message#ERROR_ALERT",
				value1 = "The screen name cannot be an email address or a reserved word, such as postfix. It must contain only alphanumeric or the following special characters: -._."
			);
		}
		else {
			Alert.viewSuccessMessage();

			AssertTextEquals(
				locator1 = "UsersAndOrganizationsEditUser#DETAILS_SCREEN_NAME_FIELD",
				value1 = "${userScreenName}"
			);

			AssertTextEquals(
				locator1 = "TextInput#EMAIL_ADDRESS",
				value1 = "${userEmailAddress}"
			);

			AssertTextEquals(
				locator1 = "UsersAndOrganizationsEditUser#DETAILS_FIRST_NAME_FIELD",
				value1 = "${userFirstName}"
			);

			if (isSet(userMiddleName)) {
				AssertTextEquals(
					locator1 = "UsersAndOrganizationsEditUser#DETAILS_MIDDLE_NAME_FIELD",
					value1 = "${userMiddleName}"
				);
			}

			AssertTextEquals(
				locator1 = "UsersAndOrganizationsEditUser#DETAILS_LAST_NAME_FIELD",
				value1 = "${userLastName}"
			);
		}
	}

	macro addCreateAccountPG {
		User.createAccount(
			userEmailAddress = "${userEmailAddress}",
			userFirstName = "${userFirstName}",
			userLastName = "${userLastName}",
			userScreenName = "${userScreenName}"
		);

		AssertElementPresent(locator1 = "Message#SUCCESS");
	}

	macro addMultipleCP {
		for (var userEmail : list "${usersEmailsList}") {
			var userEmailAddress = "${userEmail}";
			var userName = StringUtil.replace("${userEmail}", "@liferay.com", "");

			ProductMenu.gotoPortlet(
				category = "Users",
				panel = "Control Panel",
				portlet = "Users and Organizations"
			);

			User.addCP(
				userBirthday = "${userBirthday}",
				userEmailAddress = "${userEmailAddress}",
				userEmailAddressVariation = "${userEmailAddressVariation}",
				userFirstName = "${userName}",
				userGender = "${userGender}",
				userLastName = "${userName}",
				userMiddleName = "${userMiddleName}",
				userScreenName = "${userName}",
				userScreenNameVariation = "${userScreenNameVariation}"
			);
		}
	}

	macro addPersonalSiteCP {
		var key_userScreenName = "${userScreenName}";

		AssertTextEquals(
			locator1 = "UsersAndOrganizations#USER_TABLE_SCREEN_NAME_LINK",
			value1 = "${userScreenName}"
		);

		AssertClick(
			locator1 = "UsersAndOrganizations#USER_TABLE_SCREEN_NAME_LINK",
			value1 = "${userScreenName}"
		);

		Panel.expandPanel(panelHeading = "Personal Site Template");

		AssertTextEquals(
			locator1 = "UsersAndOrganizationsEditUser#PERSONAL_SITE_PRIVATE_PAGES_LABEL",
			value1 = "My Dashboard"
		);

		Select(
			locator1 = "UsersAndOrganizationsEditUser#PERSONAL_SITE_PRIVATE_PAGES",
			value1 = "${siteTemplateName}"
		);

		PortletEntry.save();
	}

	macro addReservedEmailAddressCP {
		LexiconEntry.gotoAdd();

		Type(
			locator1 = "UsersAndOrganizationsEditUser#DETAILS_SCREEN_NAME_FIELD",
			value1 = "${userScreenName}"
		);

		Type(locator1 = "TextInput#EMAIL_ADDRESS", value1 = "${userEmailAddress}");

		Type(
			locator1 = "UsersAndOrganizationsEditUser#DETAILS_FIRST_NAME_FIELD",
			value1 = "${userFirstName}"
		);

		Type(
			locator1 = "UsersAndOrganizationsEditUser#DETAILS_LAST_NAME_FIELD",
			value1 = "${userLastName}"
		);

		Button.clickSave();

		Alert.viewRequestFailedToComplete();

		AssertTextEquals.assertPartialText(
			locator1 = "Message#ERROR_2",
			value1 = "The email address you requested is reserved."
		);
	}

	macro addReservedScreenNameCP {
		LexiconEntry.gotoAdd();

		Type(
			locator1 = "UsersAndOrganizationsEditUser#DETAILS_SCREEN_NAME_FIELD",
			value1 = "${userScreenName}"
		);

		Type(locator1 = "TextInput#EMAIL_ADDRESS", value1 = "${userEmailAddress}");

		Type(
			locator1 = "UsersAndOrganizationsEditUser#DETAILS_FIRST_NAME_FIELD",
			value1 = "${userFirstName}"
		);

		Type(
			locator1 = "UsersAndOrganizationsEditUser#DETAILS_LAST_NAME_FIELD",
			value1 = "${userLastName}"
		);

		Button.clickSave();

		Alert.viewRequestFailedToComplete();

		AssertTextEquals.assertPartialText(
			locator1 = "Message#ERROR_2",
			value1 = "The screen name you requested is reserved."
		);
	}

	macro addScreenNameNumberSiteIdCP {
		LexiconEntry.gotoAdd();

		Paste(
			locator1 = "UsersAndOrganizationsEditUser#DETAILS_SCREEN_NAME_FIELD",
			value1 = "${siteID}"
		);

		Type(locator1 = "TextInput#EMAIL_ADDRESS", value1 = "${userEmailAddress}");

		Type(
			locator1 = "UsersAndOrganizationsEditUser#DETAILS_FIRST_NAME_FIELD",
			value1 = "${userFirstName}"
		);

		Type(
			locator1 = "UsersAndOrganizationsEditUser#DETAILS_LAST_NAME_FIELD",
			value1 = "${userLastName}"
		);

		Button.clickSave();

		Alert.viewRequestFailedToComplete();

		AssertTextEquals.assertPartialText(
			locator1 = "Message#ERROR_2",
			value1 = "The screen name cannot contain only numeric values."
		);
	}

	macro advancedSearchViaFriendsDirectoryPG {
		Click(locator1 = "NavBar#SEARCH_TOGGLE_ADVANCED");

		if ("${searchField}" == "First Name") {
			Type(locator1 = "TextInput#FIRST_NAME", value1 = "${searchTerm}");
		}
		else if ("${searchField}" == "Middle Name") {
			Type(locator1 = "TextInput#MIDDLE_NAME", value1 = "${searchTerm}");
		}
		else if ("${searchField}" == "Last Name") {
			Type(locator1 = "TextInput#LAST_NAME", value1 = "${searchTerm}");
		}
		else if ("${searchField}" == "Screen Name") {
			Type(locator1 = "TextInput#SCREEN_NAME", value1 = "${searchTerm}");
		}
		else if ("${searchField}" == "Email Address") {
			Type(locator1 = "TextInput#EMAIL_ADDRESS", value1 = "${searchTerm}");
		}

		KeyPress(locator1 = "TextInput#EMAIL_ADDRESS", value1 = "\RETURN");

		if ("${searchNoResults}" == "true") {
			AssertTextEquals(
				locator1 = "Message#EMPTY_INFO",
				value1 = "No users were found."
			);

			var key_userScreenName = "${userScreenName}";

			AssertElementNotPresent(
				locator1 = "UsersAndOrganizations#USER_TABLE_FIRST_NAME_LINK"
			);

			AssertElementNotPresent(locator1 = "PortalDirectory#USER_TABLE_LAST_NAME_LINK");

			AssertElementNotPresent(
				locator1 = "UsersAndOrganizations#USER_TABLE_SCREEN_NAME_LINK"
			);
		}
		else {
			var key_userScreenName = "${userScreenName}";

			AssertTextEquals(
				locator1 = "UsersAndOrganizations#USER_TABLE_FIRST_NAME_LINK",
				value1 = "${userFirstName}"
			);

			AssertTextEquals(
				locator1 = "PortalDirectory#USER_TABLE_LAST_NAME_LINK",
				value1 = "${userLastName}"
			);

			AssertTextEquals(
				locator1 = "UsersAndOrganizations#USER_TABLE_SCREEN_NAME_LINK",
				value1 = "${userScreenName}"
			);
		}
	}

	macro advancedSearchViaMySitesDirectoryPG {
		Click(locator1 = "NavBar#SEARCH_TOGGLE_ADVANCED");

		if ("${searchField}" == "First Name") {
			Type(locator1 = "TextInput#FIRST_NAME", value1 = "${searchTerm}");
		}
		else if ("${searchField}" == "Middle Name") {
			Type(locator1 = "TextInput#MIDDLE_NAME", value1 = "${searchTerm}");
		}
		else if ("${searchField}" == "Last Name") {
			Type(locator1 = "TextInput#LAST_NAME", value1 = "${searchTerm}");
		}
		else if ("${searchField}" == "Screen Name") {
			Type(locator1 = "TextInput#SCREEN_NAME", value1 = "${searchTerm}");
		}
		else if ("${searchField}" == "Email Address") {
			Type(locator1 = "TextInput#EMAIL_ADDRESS", value1 = "${searchTerm}");
		}

		KeyPress(locator1 = "TextInput#EMAIL_ADDRESS", value1 = "\RETURN");

		if ("${searchNoResults}" == "true") {
			AssertTextEquals(
				locator1 = "Message#EMPTY_INFO",
				value1 = "No users were found."
			);

			var key_userScreenName = "${userScreenName}";

			AssertElementNotPresent(
				locator1 = "UsersAndOrganizations#USER_TABLE_FIRST_NAME_LINK"
			);

			AssertElementNotPresent(locator1 = "PortalDirectory#USER_TABLE_LAST_NAME_LINK");

			AssertElementNotPresent(
				locator1 = "UsersAndOrganizations#USER_TABLE_SCREEN_NAME_LINK"
			);
		}
		else {
			var key_userScreenName = "${userScreenName}";

			AssertTextEquals(
				locator1 = "UsersAndOrganizations#USER_TABLE_FIRST_NAME_LINK",
				value1 = "${userFirstName}"
			);

			AssertTextEquals(
				locator1 = "PortalDirectory#USER_TABLE_LAST_NAME_LINK",
				value1 = "${userLastName}"
			);

			AssertTextEquals(
				locator1 = "UsersAndOrganizations#USER_TABLE_SCREEN_NAME_LINK",
				value1 = "${userScreenName}"
			);
		}
	}

	macro advancedSearchViaPortalDirectoryPG {
		Click(locator1 = "NavBar#SEARCH_TOGGLE_ADVANCED");

		if ("${searchField}" == "First Name") {
			Type(locator1 = "TextInput#FIRST_NAME", value1 = "${searchTerm}");
		}
		else if ("${searchField}" == "Middle Name") {
			Type(locator1 = "TextInput#MIDDLE_NAME", value1 = "${searchTerm}");
		}
		else if ("${searchField}" == "Last Name") {
			Type(locator1 = "TextInput#LAST_NAME", value1 = "${searchTerm}");
		}
		else if ("${searchField}" == "Screen Name") {
			Type(locator1 = "TextInput#SCREEN_NAME", value1 = "${searchTerm}");
		}
		else if ("${searchField}" == "Email Address") {
			Type(locator1 = "TextInput#EMAIL_ADDRESS", value1 = "${searchTerm}");
		}

		KeyPress(locator1 = "TextInput#EMAIL_ADDRESS", value1 = "\RETURN");

		if ("${searchNoResults}" == "true") {
			AssertTextEquals(
				locator1 = "Message#EMPTY_INFO",
				value1 = "No users were found."
			);

			var key_userScreenName = "${userScreenName}";

			AssertElementNotPresent(
				locator1 = "UsersAndOrganizations#USER_TABLE_FIRST_NAME_LINK"
			);

			AssertElementNotPresent(locator1 = "PortalDirectory#USER_TABLE_LAST_NAME_LINK");

			AssertElementNotPresent(
				locator1 = "UsersAndOrganizations#USER_TABLE_SCREEN_NAME_LINK"
			);
		}
		else {
			var key_userScreenName = "${userScreenName}";

			AssertTextEquals(
				locator1 = "UsersAndOrganizations#USER_TABLE_FIRST_NAME_LINK",
				value1 = "${userFirstName}"
			);

			AssertTextEquals(
				locator1 = "PortalDirectory#USER_TABLE_LAST_NAME_LINK",
				value1 = "${userLastName}"
			);

			AssertTextEquals(
				locator1 = "UsersAndOrganizations#USER_TABLE_SCREEN_NAME_LINK",
				value1 = "${userScreenName}"
			);
		}
	}

	macro advancedSearchViaSiteMembersDirectoryPG {
		Click(locator1 = "NavBar#SEARCH_TOGGLE_ADVANCED");

		if ("${searchField}" == "First Name") {
			Type(locator1 = "TextInput#FIRST_NAME", value1 = "${searchTerm}");
		}
		else if ("${searchField}" == "Middle Name") {
			Type(locator1 = "TextInput#MIDDLE_NAME", value1 = "${searchTerm}");
		}
		else if ("${searchField}" == "Last Name") {
			Type(locator1 = "TextInput#LAST_NAME", value1 = "${searchTerm}");
		}
		else if ("${searchField}" == "Screen Name") {
			Type(locator1 = "TextInput#SCREEN_NAME", value1 = "${searchTerm}");
		}
		else if ("${searchField}" == "Email Address") {
			Type(locator1 = "TextInput#EMAIL_ADDRESS", value1 = "${searchTerm}");
		}

		KeyPress(locator1 = "TextInput#EMAIL_ADDRESS", value1 = "\RETURN");

		if ("${searchNoResults}" == "true") {
			AssertTextEquals(
				locator1 = "Message#EMPTY_INFO",
				value1 = "No users were found."
			);

			var key_userScreenName = "${userScreenName}";

			AssertElementNotPresent(
				locator1 = "UsersAndOrganizations#USER_TABLE_FIRST_NAME_LINK"
			);

			AssertElementNotPresent(locator1 = "PortalDirectory#USER_TABLE_LAST_NAME_LINK");

			AssertElementNotPresent(
				locator1 = "UsersAndOrganizations#USER_TABLE_SCREEN_NAME_LINK"
			);
		}
		else {
			var key_userScreenName = "${userScreenName}";

			AssertTextEquals(
				locator1 = "UsersAndOrganizations#USER_TABLE_FIRST_NAME_LINK",
				value1 = "${userFirstName}"
			);

			AssertTextEquals(
				locator1 = "PortalDirectory#USER_TABLE_LAST_NAME_LINK",
				value1 = "${userLastName}"
			);

			AssertTextEquals(
				locator1 = "UsersAndOrganizations#USER_TABLE_SCREEN_NAME_LINK",
				value1 = "${userScreenName}"
			);
		}
	}

	macro answerPasswordReminder {
		if (IsElementPresent(locator1 = "TextInput#ANSWER")) {
			Type(locator1 = "TextInput#ANSWER", value1 = "test");

			Button.clickSave();

			AssertElementNotPresent(locator1 = "Button#SAVE");
		}
	}

	macro assignOrgRoleCP {
		User.searchCP(searchTerm = "${userScreenName}");

		var key_rowEntry = "${userScreenName}";

		Click(locator1 = "ContentRow#ENTRY_CONTENT_ENTRY_ELLIPSIS");

		MenuItem.click(menuItem = "Edit");

		Panel.expandPanel(panelHeading = "Roles");

		AssertClick(
			locator1 = "UsersAndOrganizationsEditUser#ROLES_ORGANIZATION_ROLES_SELECT_LINK",
			value1 = "Select"
		);

		SelectFrame(locator1 = "IFrame#SELECT_ORGANIZATION_ROLE");

		var key_roleName = "${roleName}";

		AssertTextEquals(
			locator1 = "Permissions#CONTENT_PERMISSIONS_ROLE_NAME",
			value1 = "${roleName}"
		);

		AssertClick(
			locator1 = "UsersAndOrganizationsEditUser#ROLES_ORGANIZATION_SELECT_CHOOSE_BUTTON",
			value1 = "Choose"
		);

		SelectFrame(value1 = "relative=top");

		AssertTextEquals(
			locator1 = "Permissions#CONTENT_PERMISSIONS_ROLE_NAME",
			value1 = "${roleName}"
		);

		PortletEntry.save();
	}

	macro assignRegularRoleCP {
		User.searchCP(searchTerm = "${userScreenName}");

		var key_rowEntry = "${userScreenName}";

		Click(locator1 = "ContentRow#ENTRY_CONTENT_ENTRY_ELLIPSIS");

		MenuItem.click(menuItem = "Edit");

		Pause(locator1 = "5000");

		Panel.expandPanel(panelHeading = "Roles");

		AssertClick(
			locator1 = "UsersAndOrganizationsEditUser#ROLES_REGULAR_ROLES_SELECT_LINK",
			value1 = "Select"
		);

		Pause(locator1 = "5000");

		SelectFrame(locator1 = "IFrame#SELECT_REGULAR_ROLE");

		var key_roleName = "${roleName}";

		AssertTextEquals(
			locator1 = "Permissions#CONTENT_PERMISSIONS_ROLE_NAME",
			value1 = "${roleName}"
		);

		AssertClick(
			locator1 = "UsersAndOrganizationsEditUser#ROLES_ORGANIZATION_SELECT_CHOOSE_BUTTON",
			value1 = "Choose"
		);

		SelectFrame(value1 = "relative=top");

		AssertTextEquals(
			locator1 = "Permissions#CONTENT_PERMISSIONS_ROLE_NAME",
			value1 = "${roleName}"
		);

		PortletEntry.save();
	}

	macro assignSiteRoleCP {
		User.searchCP(searchTerm = "${userScreenName}");

		var key_rowEntry = "${userScreenName}";

		Click(locator1 = "ContentRow#ENTRY_CONTENT_ENTRY_ELLIPSIS");

		MenuItem.click(menuItem = "Edit");

		Panel.expandPanel(panelHeading = "Roles");

		AssertClick(
			locator1 = "UsersAndOrganizationsEditUser#ROLES_SITE_ROLES_SELECT_LINK",
			value1 = "Select"
		);

		SelectFrame(locator1 = "IFrame#SELECT_SITE_ROLE");

		var key_roleName = "${siteRoleName}";
		var key_siteRoleName = "${siteRoleName}";

		AssertTextEquals(
			locator1 = "UsersAndOrganizationsEditUser#ROLES_SITE_ROLES_TABLE_TITLE",
			value1 = "${siteRoleName}"
		);

		AssertClick(
			locator1 = "UsersAndOrganizationsEditUser#ROLES_ORGANIZATION_SELECT_CHOOSE_BUTTON",
			value1 = "Choose"
		);

		SelectFrame(value1 = "relative=top");

		AssertTextEquals(
			locator1 = "UsersAndOrganizationsEditUser#ROLES_SITE_ROLES_TABLE_TITLE",
			value1 = "${siteRoleName}"
		);

		PortletEntry.save();
	}

	macro attemptImpersonateCP {
		Type(locator1 = "NavBar#BASIC_SEARCH_FIELD", value1 = "${userScreenName}");

		Click(locator1 = "Button#SUBMIT");

		var key_rowEntry = "${userScreenName}";

		if (isSet(notAdmin)) {
			AssertElementNotPresent(locator1 = "ContentRow#ENTRY_CONTENT_ENTRY_ELLIPSIS");

			AssertElementNotPresent(
				locator1 = "UsersAndOrganizations#USER_TABLE_IMPERSONATE"
			);
		}
		else {
			Click(locator1 = "ContentRow#ENTRY_CONTENT_ENTRY_ELLIPSIS");

			MenuItem.viewNotPresent(menuItem = "Impersonate User");
		}
	}

	macro basicSearchCP {

		if ("${userBasicSearch}" == "Basic") {
			Type(locator1 = "TextInput#SEARCH", value1 = "${userScreenName}");

			Click(locator1 = "Button#SUBMIT");

			var key_userScreenName = "${userScreenName}";

			AssertTextEquals(
				locator1 = "UsersAndOrganizations#USER_TABLE_NAME",
				value1 = "${userName}"
			);

			AssertTextEquals(
				locator1 = "UsersAndOrganizations#USER_TABLE_SCREEN_NAME_LINK",
				value1 = "${userScreenName}"
			);

			Type(locator1 = "TextInput#SEARCH", value1 = "user1*");

			Click(locator1 = "Button#SUBMIT");

			AssertTextPresent(
				locator1 = "Message#EMPTY_INFO",
				value1 = "No users were found."
			);
		}
		else if ("${userBasicSearch}" == "Full Name") {

			var fullName = '''"${userFirstName} ${userLastName}"''';

			Type(locator1 = "TextInput#SEARCH", value1 = "${fullName}");

			Click(locator1 = "Button#SUBMIT");

			var key_userScreenName = "${userScreenName}";

			AssertTextEquals(
				locator1 = "UsersAndOrganizations#USER_TABLE_NAME",
				value1 = "${userName}"
			);

			AssertTextEquals(
				locator1 = "UsersAndOrganizations#USER_TABLE_SCREEN_NAME_LINK",
				value1 = "${userScreenName}"
			);

			var fullName = '''"${userFirstName} 1 ${userLastName}"''';

			Type(locator1 = "TextInput#SEARCH", value1 = "${fullName}");

			Click(locator1 = "Button#SUBMIT");

			AssertTextEquals(
				locator1 = "Message#EMPTY_INFO",
				value1 = "No users were found."
			);
		}
		else if ("${userBasicSearch}" == "Quotes") {

			var quotes = '''"${userScreenName}"''';

			Type(locator1 = "TextInput#SEARCH", value1 = "${quotes}");

			Click(locator1 = "Button#SUBMIT");

			var key_userScreenName = "${userScreenName}";

			AssertTextEquals(
				locator1 = "UsersAndOrganizations#USER_TABLE_NAME",
				value1 = "${userName}"
			);

			AssertTextEquals(
				locator1 = "UsersAndOrganizations#USER_TABLE_SCREEN_NAME_LINK",
				value1 = "${userScreenName}"
			);
		}
	}

	macro changePasswordCP {
		Panel.expandPanel(panelHeading = "Password");

		if ("${userPassword}" == "Invalid") {
			Type(locator1 = "TextInput#CURRENT_PASSWORD", value1 = "");

			Type(locator1 = "TextInput#NEW_PASSWORD", value1 = "test1");

			Type(locator1 = "TextInput#ENTER_AGAIN", value1 = "test1");

			Button.clickSave();

			Alert.viewRequestFailedToComplete();

			AssertTextEquals.assertPartialText(
				locator1 = "Message#ERROR_2",
				value1 = "The password cannot be blank. Please enter a password."
			);

			User.logoutPG();

			User.loginUserPG(password = "test", userEmailAddress = "${userEmailAddress}");

			User.logoutUserPG();

			User.loginPG(
				authenticationMethod = "${authenticationMethod}",
				nodePort = "${nodePort}",
				password = "test",
				resetPassword = "${resetPassword}",
				syntaxCheckingEnabled = "${syntaxCheckingEnabled}",
				userEmailAddress = "test@liferay.com",
				userScreenName = "${userScreenName}"
			);
		}
		else {
			Type(locator1 = "TextInput#CURRENT_PASSWORD", value1 = "test");

			Type(locator1 = "TextInput#NEW_PASSWORD", value1 = "test1");

			Type(locator1 = "TextInput#ENTER_AGAIN", value1 = "test1");

			PortletEntry.save();

			User.logoutPG();

			User.loginUserPG(password = "test1", userEmailAddress = "${userEmailAddress}");

			User.logoutUserPG();

			User.loginPG(
				authenticationMethod = "${authenticationMethod}",
				nodePort = "${nodePort}",
				password = "test",
				resetPassword = "${resetPassword}",
				syntaxCheckingEnabled = "${syntaxCheckingEnabled}",
				userEmailAddress = "test@liferay.com",
				userScreenName = "${userScreenName}"
			);
		}
	}

	macro createAccount {
		SignInNavigator.gotoCreateAccount();

		Type(locator1 = "TextInput#FIRST_NAME", value1 = "${userFirstName}");

		Type(locator1 = "TextInput#LAST_NAME", value1 = "${userLastName}");

		Type(locator1 = "TextInput#SCREEN_NAME", value1 = "${userScreenName}");

		Type(locator1 = "TextInput#EMAIL_ADDRESS", value1 = "${userEmailAddress}");

		Button.clickSave();
	}

	macro deactivateCP {
		Type(locator1 = "TextInput#SEARCH", value1 = "${userFirstName}");

		Click(locator1 = "Button#SUBMIT");

		if ("${deactivateType}" == "Actions") {
			var key_rowEntry = "${userScreenName}";

			Click(locator1 = "ContentRow#ENTRY_CONTENT_ENTRY_ELLIPSIS");

			MenuItem.clickNoError(menuItem = "Deactivate");

			Confirm(value1 = "Are you sure you want to deactivate this?");

			Alert.viewSuccessMessage();
		}
		else if ("${deactivateType}" == "Deactivate Button") {
			var key_userScreenName = "${userScreenName}";

			Check.checkAll(locator1 = "Checkbox#SELECT_ALL");

			AssertClickNoError(locator1 = "Button#DEACTIVATE", value1 = "Deactivate");

			Confirm(value1 = "Are you sure you want to deactivate the selected users?");

			Alert.viewSuccessMessage();
		}
		else if (IsElementPresent(locator1 = "Checkbox#SELECT_ALL")) {
			Click(locator1 = "Checkbox#SELECT_ALL");

			if (IsElementPresent(locator1 = "Button#DEACTIVATE")) {
				ClickNoError(locator1 = "Button#DEACTIVATE");
			}

			Confirm(value1 = "Are you sure you want to deactivate the selected users?");

			Alert.viewSuccessMessage();
		}

		AssertTextEquals(
			locator1 = "Message#EMPTY_INFO",
			value1 = "No users were found."
		);
	}

	macro deleteCP {
		if (IsElementPresent(locator1 = "Select#USER_STATUS")) {
			Select(locator1 = "Select#USER_STATUS", value1 = "Inactive");

			if (IsElementPresent(locator1 = "Checkbox#SELECT_ALL")) {
				Click(locator1 = "Checkbox#SELECT_ALL");

				AssertClickNoError(locator1 = "Button#DELETE", value1 = "Delete");

				Confirm(
					value1 = "Are you sure you want to permanently delete the selected users?"
				);

				Alert.viewSuccessMessage();
			}
		}
	}

	macro editDetailsViaMyAccount {
		AssertElementPresent.assertElementPresent(locator1 = "TextInput#FIRST_NAME");

		if (isSet(userFirstNameEdit)) {
			Type(locator1 = "TextInput#FIRST_NAME", value1 = "${userFirstNameEdit}");
		}

		if (isSet(userLastNameEdit)) {
			Type(locator1 = "TextInput#LAST_NAME", value1 = "${userLastNameEdit}");
		}

		if (isSet(userMiddleNameEdit)) {
			Type(locator1 = "TextInput#MIDDLE_NAME", value1 = "${userMiddleNameEdit}");
		}

		if (isSet(userScreenNameEdit)) {
			Type(locator1 = "TextInput#SCREEN_NAME", value1 = "${userScreenNameEdit}");
		}

		PortletEntry.save();
	}

	macro editDisplaySettingsCP {
		User.searchCP(searchTerm = "${userScreenName}");

		var key_rowEntry = "${userScreenName}";

		Click(locator1 = "ContentRow#ENTRY_CONTENT_ENTRY_ELLIPSIS");

		MenuItem.click(menuItem = "Edit");

		Select(
			locator1 = "LanguageConfiguration#DEFAULT_LANGUAGE_SELECT",
			value1 = "${languageName}"
		);

		PortletEntry.save();
	}

	macro editEmailViaMyAccount {
		Page.gotoMyAccount(portletName = "Account Settings");

		Type(locator1 = "TextInput#EMAIL_ADDRESS", value1 = "${userEmailAddress}");

		PortletEntry.save();
	}

	macro editPasswordCP {
		var key_userScreenName = "${userScreenName}";

		Pause(locator1 = "1000");

		AssertTextEquals(
			locator1 = "UsersAndOrganizations#USER_TABLE_SCREEN_NAME_LINK",
			value1 = "${userScreenName}"
		);

		AssertClick(
			locator1 = "UsersAndOrganizations#USER_TABLE_SCREEN_NAME_LINK",
			value1 = "${userScreenName}"
		);

		Pause(locator1 = "3000");

		if (!(isSet(newPassword))) {
			var newPassword = "password";
		}

		Panel.expandPanel(panelHeading = "Password");

		Type(
			locator1 = "UsersAndOrganizationsEditUser#PASSWORD_NEW_PASSWORD_FIELD",
			value1 = "${newPassword}"
		);

		Type(
			locator1 = "UsersAndOrganizationsEditUser#PASSWORD_ENTER_AGAIN_FIELD",
			value1 = "${newPassword}"
		);

		PortletEntry.save();

		User.logoutPG();

		User.loginPG(
			authenticationMethod = "${authenticationMethod}",
			nodePort = "${nodePort}",
			password = "${newPassword}",
			resetPassword = "${resetPassword}",
			syntaxCheckingEnabled = "${syntaxCheckingEnabled}",
			userEmailAddress = "${userEmailAddress}",
			userScreenName = "${userScreenName}"
		);

		User.logoutPG();

		if (isSet(administratorEmail)) {
			User.loginPG(password = "test", userEmailAddress = "${administratorEmail}");
		}
		else {
			User.loginPG(
				authenticationMethod = "${authenticationMethod}",
				nodePort = "${nodePort}",
				password = "test",
				userEmailAddress = "test@liferay.com",
				userScreenName = "${userScreenName}"
			);
		}
	}

	macro editPasswordInvalidCP {
		var key_userScreenName = "${userScreenName}";

		AssertTextEquals(
			locator1 = "UsersAndOrganizations#USER_TABLE_SCREEN_NAME_LINK",
			value1 = "${userScreenName}"
		);

		AssertClick(
			locator1 = "UsersAndOrganizations#USER_TABLE_SCREEN_NAME_LINK",
			value1 = "${userScreenName}"
		);

		if (!(isSet(newPassword))) {
			var newPassword = "password";
		}

		Panel.expandPanel(panelHeading = "Password");

		Type(
			locator1 = "UsersAndOrganizationsEditUser#PASSWORD_NEW_PASSWORD_FIELD",
			value1 = "${newPassword}"
		);

		Type(
			locator1 = "UsersAndOrganizationsEditUser#PASSWORD_ENTER_AGAIN_FIELD",
			value1 = "${newPassword}"
		);

		Button.clickSave();

		if ("${passwordTooShort}" == "true") {
			Alert.viewRequestFailedToComplete();

			AssertTextEquals.assertPartialText(
				locator1 = "Message#ERROR_2",
				value1 = "That password is too short. Please make sure your password is at least 6 characters long."
			);
		}
		else if (isSet(minimumNumbers)) {
			Alert.viewRequestFailedToComplete();

			AssertTextEquals.assertPartialText(
				locator1 = "Message#ERROR_2",
				value1 = "That password must contain at least ${minimumNumbers} numbers."
			);
		}
		else if (isSet(regex)) {
			Alert.viewRequestFailedToComplete();

			AssertTextEquals.assertPartialText(
				locator1 = "Message#ERROR_2",
				value1 = "That password does not comply with the regular expression ${regex}. Please enter a different password."
			);
		}
		else if ("${changeable}" == "false") {
			Alert.viewRequestFailedToComplete();

			AssertTextEquals.assertPartialText(
				locator1 = "Message#ERROR_2",
				value1 = "Passwords may not be changed under the current password policy."
			);
		}
		else {
			Alert.viewRequestFailedToComplete();

			AssertTextEquals.assertPartialText(
				locator1 = "Message#ERROR_2",
				value1 = "That password is invalid. Please enter in a different password."
			);
		}
	}

	macro editPasswordViaMyAccount {
		Panel.expandPanel(panelHeading = "Password");

		Type(locator1 = "TextInput#CURRENT_PASSWORD", value1 = "${currentPassword}");

		Type(locator1 = "TextInput#NEW_PASSWORD", value1 = "${newPassword}");

		Type(locator1 = "TextInput#ENTER_AGAIN", value1 = "${newPassword}");

		PortletEntry.save();
	}

	macro editUserDisplaySettingsCP {
		var key_userScreenName = "${userScreenName}";

		Pause(locator1 = "1000");

		AssertTextEquals(
			locator1 = "UsersAndOrganizations#USER_TABLE_SCREEN_NAME_LINK",
			value1 = "${userScreenName}"
		);

		AssertClick(
			locator1 = "UsersAndOrganizations#USER_TABLE_SCREEN_NAME_LINK",
			value1 = "${userScreenName}"
		);

		User.editUserDisplaySettingsTimeZonePacific(
			displaySettingsGreeting = "${displaySettingsGreeting}"
		);
	}

	// The time zone option should change automatically because of Daylight Savings Time (DST). Since Los Angeles switches between Pacific Daylight Time (PDT), (UTC -07:00) and Pacific Standard Time (PST), (UTC -08:00), this macro will have to be updated accordingly.

	macro editUserDisplaySettingsTimeZonePacific {
		AssertClick(
			locator1 = "UsersAndOrganizations#MISCELLANEOUS",
			value1 = "Miscellaneous"
		);

		Panel.expandPanel(panelHeading = "Display Settings");

		if (IsTextNotEqual(locator1 = "CalendarConfiguration#USER_SETTINGS_TIME_ZONE_LOS_ANGELES_SELECT_OPTION", value1 = "(UTC -07:00) Pacific Daylight Time")) {
			Select(
				locator1 = "Select#TIME_ZONE",
				value1 = "(UTC -08:00) Pacific Standard Time"
			);
		}
		else {
			Select(
				locator1 = "Select#TIME_ZONE",
				value1 = "(UTC -07:00) Pacific Daylight Time"
			);
		}

		Type(
			locator1 = "UsersAndOrganizationsEditUser#DISPLAY_SETTINGS_GREETING_FIELD",
			value1 = "${displaySettingsGreeting}"
		);

		PortletEntry.save();

		AssertClick(
			locator1 = "UsersAndOrganizations#MISCELLANEOUS",
			value1 = "Miscellaneous"
		);

		Panel.expandPanel(panelHeading = "Display Settings");

		if (IsTextNotEqual(locator1 = "CalendarConfiguration#USER_SETTINGS_TIME_ZONE_LOS_ANGELES_SELECT_OPTION", value1 = "(UTC -07:00) Pacific Daylight Time")) {
			AssertSelectedLabel(
				locator1 = "Select#TIME_ZONE",
				value1 = "(UTC -08:00) Pacific Standard Time"
			);
		}
		else {
			AssertSelectedLabel(
				locator1 = "Select#TIME_ZONE",
				value1 = "(UTC -07:00) Pacific Daylight Time"
			);
		}

		AssertTextEquals(
			locator1 = "UsersAndOrganizationsEditUser#DISPLAY_SETTINGS_GREETING_FIELD",
			value1 = "${displaySettingsGreeting}"
		);
	}

	macro editUserGenderCP {
		LexiconEntry.gotoEntry(rowEntry = "${userName}");

		Select(
			locator1 = "UsersAndOrganizationsEditUser#DETAILS_GENDER_SELECT",
			value1 = "${userGender}"
		);

		PortletEntry.save();
	}

	macro editUserJobTitleCP {
		LexiconEntry.gotoEntry(rowEntry = "${userName}");

		Type(
			locator1 = "UsersAndOrganizationsEditUser#DETAILS_JOB_TITLE_FIELD",
			value1 = "${userJobTitle}"
		);

		PortletEntry.save();
	}

	macro editUserOrganizationCP {
		var key_userScreenName = "${userScreenName}";

		Pause(locator1 = "1000");

		AssertTextEquals(
			locator1 = "UsersAndOrganizations#USER_TABLE_SCREEN_NAME_LINK",
			value1 = "${userScreenName}"
		);

		AssertClick(
			locator1 = "UsersAndOrganizations#USER_TABLE_SCREEN_NAME_LINK",
			value1 = "${userScreenName}"
		);

		Pause(locator1 = "3000");

		var key_orgName = "${orgName}";

		Panel.expandPanel(panelHeading = "Organizations");

		AssertClick(
			locator1 = "UsersAndOrganizationsEditUser#ORGANIZATIONS_SELECT_LINK",
			value1 = "Select"
		);

		SelectFrame(
			locator1 = "UsersAndOrganizationsSelectOrganization#SELECT_ORGANIZATION_IFRAME"
		);

		Type(locator1 = "NavBar#BASIC_SEARCH_FIELD", value1 = "${orgName}");

		Click(locator1 = "Button#SUBMIT");

		AssertTextEquals(
			locator1 = "UsersAndOrganizationsEditUser#ORGANIZATIONS_TABLE_NAME",
			value1 = "${orgName}"
		);

		AssertClick(
			locator1 = "UsersAndOrganizationsSelectOrganization#ORGANIZATION_TABLE_CHOOSE_BUTTON",
			value1 = "Choose"
		);

		SelectFrame(value1 = "relative=top");

		AssertTextEquals(
			locator1 = "UsersAndOrganizationsEditUser#ORGANIZATIONS_TABLE_NAME",
			value1 = "${orgName}"
		);

		PortletEntry.save();
	}

	macro editUserSiteCP {
		var key_userScreenName = "${userScreenName}";

		Pause(locator1 = "1000");

		AssertTextEquals(
			locator1 = "UsersAndOrganizations#USER_TABLE_SCREEN_NAME_LINK",
			value1 = "${userScreenName}"
		);

		AssertClick(
			locator1 = "UsersAndOrganizations#USER_TABLE_SCREEN_NAME_LINK",
			value1 = "${userScreenName}"
		);

		Pause(locator1 = "3000");

		var key_siteName = "${siteName}";

		Panel.expandPanel(panelHeading = "Sites");

		AssertClick(
			locator1 = "UsersAndOrganizationsEditUser#SITES_SELECT_LINK",
			value1 = "Select"
		);

		SelectFrame(locator1 = "IFrame#SELECT_USER_SITES");

		Type(locator1 = "TextInput#SITE_SEARCH_KEYWORDS", value1 = "${siteName}");

		KeyPress(locator1 = "TextInput#SEARCH", value1 = "\RETURN");

		AssertTextEquals.assertPartialText(
			locator1 = "UsersAndOrganizationsEditUser#SITES_TABLE_NAME",
			value1 = "${siteName}"
		);

		Click(locator1 = "SitesSelectSite#SITES_TABLE_CHOOSE_SITE_LINK");

		SelectFrame(value1 = "relative=top");

		AssertTextEquals.assertPartialText(
			locator1 = "UsersAndOrganizationsEditUser#SITES_TABLE_NAME",
			value1 = "${siteName}"
		);

		PortletEntry.save();
	}

	macro editUserSuffixCP {
		LexiconEntry.gotoEntry(rowEntry = "${userName}");

		Select(
			locator1 = "UsersAndOrganizationsEditUser#DETAILS_SUFFIX_SELECT",
			value1 = "${userSuffix}"
		);

		PortletEntry.save();
	}

	@summary = "Log into Liferay Portal as '${userEmailAddress}' using the password '${password}'; if not logged in as '${userEmailAddress}', then log out first"
	macro firstLoginPG {
		echo("Checking to see if TCat is enabled...");

		var tcatEnabled = selenium.isTCatEnabled();

		if ("${tcatEnabled}" == "true") {
			TCat.deployLiferayPortalWar();
		}

		if (isSet(virtualHostsURL)) {
			Navigator.openSpecificURL(url = "${virtualHostsURL}");
		}
		else {
			Navigator.openURL();
		}

		if (IsElementPresent(locator1 = "UserBar#USER_AVATAR_IMAGE")) {
			User.logoutPG();

			User.loginPG(userEmailAddress = "${userEmailAddress}");
		}
		else {
			User.loginPG(
				localization = "${localization}",
				samlEnabled = "${samlEnabled}",
				setupWizardEnabled = "${setupWizardEnabled}",
				specificURL = "${virtualHostsURL}",
				userEmailAddress = "${userEmailAddress}"
			);
		}
	}

	macro forgotPasswordSendResetLink {
		SignInNavigator.gotoForgotPassword();

		Type(locator1 = "TextInput#EMAIL_ADDRESS", value1 = "${userEmailAddress}");

		Button.clickNext();

		AssertClick(
			locator1 = "Button#SEND_PASSWORD_RESET_LINK",
			value1 = "Send Password Reset Link"
		);

		Alert.viewSuccessMessageText(
			successMessage = "An email has been sent to the provided email address."
		);
	}

	macro gotoEditCP {
		var key_userScreenName = "${userScreenName}";

		AssertClick(
			locator1 = "UsersAndOrganizations#USER_TABLE_SCREEN_NAME_LINK",
			value1 = "${userScreenName}"
		);

		AssertTextEquals.assertPartialText(
			locator1 = "Portlet#HEADER",
			value1 = "Edit User"
		);
	}

	macro impersonateCP {
		Pause(locator1 = "1000");

		Type(locator1 = "NavBar#BASIC_SEARCH_FIELD", value1 = "${userScreenName}");

		Click(locator1 = "Button#SUBMIT");

		var key_rowEntry = "${userScreenName}";

		Click(locator1 = "ContentRow#ENTRY_CONTENT_ENTRY_ELLIPSIS");

		MenuItem.click(menuItem = "Impersonate User");

		SelectWindow(locator1 = "title=Welcome - ${siteName}");

		AssertElementPresent(locator1 = "UserBar#USER_AVATAR_IMAGE");

		Click(locator1 = "UserBar#USER_AVATAR_IMAGE");

		AssertElementPresent(
			locator1 = "ProductMenu#PANEL_EXPANDED",
			key_panel = "user"
		);
	}

	macro loginLocalizationPG {
		var localizedSignIn = User._signInLocalization(localization = "${localization}");

		AssertClick(locator1 = "UserBar#USER_SIGN_IN", value1 = "${localizedSignIn}");
	}

	@summary = "Log into Liferay Portal as '${userEmailAddress}' using the password '${password}'"
	macro loginPG {
		if (isSet(nodePort)) {
			Navigator.openSpecificURL(url = "http://localhost:${nodePort}");
		}
		else if (isSet(specificURL)) {
			Navigator.openSpecificURL(url = "${specificURL}");
		}
		else {
			Navigator.openURL();
		}

		if (IsElementPresent(locator1 = "Message#PORTAL_LOCALIZATION")) {
			Alert.closePortalLocalizationWarning();
		}

		if (!("${samlEnabled}" == "true")) {
			User.loginLocalizationPG(localization = "${localization}");
		}

		if ((isSet(authenticationMethod)) && ("${authenticationMethod}" == "By Screen Name")) {
			Type(locator1 = "TextInput#SCREEN_NAME", value1 = "${userScreenName}");
		}
		else {
			Type(locator1 = "TextInput#EMAIL_ADDRESS", value1 = "${userEmailAddress}");
		}

		Type(locator1 = "TextInput#PASSWORD", value1 = "${password}");

		if ((isSet(rememberMeChecked)) && ("${rememberMeChecked}" == "true")) {
			Check(locator1 = "Checkbox#REMEMBER_ME");
		}

		takeScreenshot();

		if (isSet(localization)) {
			var localizedSignIn = User._signInLocalization(localization = "${localization}");

			Button.click(button = "${localizedSignIn}");
		}
		else {
			Button.click(button = "Sign In");
		}

		Button.viewNotPresent(button = "Sign In");

		User.acceptEndUserLicenseAgreement();

		User.resetPassword(
			resetPassword = "${resetPassword}",
			setupWizardEnabled = "${setupWizardEnabled}",
			syntaxCheckingEnabled = "${syntaxCheckingEnabled}"
		);

		User.answerPasswordReminder();

		AssertElementPresent(locator1 = "UserBar#USER_AVATAR_IMAGE");
	}

	macro loginUserInvalidPG {
		Navigator.openURL();

		AssertClick(locator1 = "UserBar#USER_SIGN_IN", value1 = "Sign In");

		Type(locator1 = "TextInput#EMAIL_ADDRESS", value1 = "${userEmailAddress}");

		Type(locator1 = "TextInput#PASSWORD", value1 = "${password}");

		Click(locator1 = "Button#SIGN_IN");

		if ("${loginAttempts}" == "${maximumFailure}") {
			AssertTextEquals.assertPartialText(
				locator1 = "Message#ERROR",
				value1 = "This account is locked. Please contact an administrator to have this account unlocked."
			);
		}
		else {
			AssertTextEquals.assertPartialText(
				locator1 = "Message#ERROR",
				value1 = "Authentication failed. Please try again."
			);
		}
	}

	@description = "Log into Liferay Portal as ${userEmailAddress} using the password ${password}."
	macro loginUserPG {
		Navigator.openURL();

		AssertClick(locator1 = "UserBar#USER_SIGN_IN", value1 = "Sign In");

		Type(locator1 = "TextInput#EMAIL_ADDRESS", value1 = "${userEmailAddress}");

		Type(locator1 = "TextInput#PASSWORD", value1 = "${password}");

		Click(locator1 = "Button#SIGN_IN");

		AssertElementPresent(locator1 = "UserBar#USER_AVATAR_IMAGE");
	}

	@description = "Log into Liferay Portal as ${userEmailAddress} using the password ${password} with CAS authentication enabled."
	macro loginUserWithCASEnabledPG {
		Navigator.openURL();

		AssertClick(locator1 = "UserBar#USER_SIGN_IN", value1 = "Sign In");

		Type(locator1 = "TextInput#LOGIN_USER_NAME", value1 = "${userScreenName}");

		Type(
			locator1 = "TextInput#EXTERNAL_PASSWORD_FIELD",
			value1 = "${userScreenName}"
		);

		AssertClick(locator1 = "CAS#LOGIN_BUTTON", value1 = "LOGIN");

		AssertElementPresent(locator1 = "UserBar#USER_AVATAR_IMAGE");
	}

	@description = "Log into Facebook as ${facebookEmail} using the password ${facebookPassword}."
	macro loginUserWithFacebookSSOEnabledPG {
		Navigator.openURL();

		AssertClick(locator1 = "UserBar#USER_SIGN_IN", value1 = "Sign In");

		AssertClick(locator1 = "Icon#FACEBOOK", value1 = "Facebook");

		SelectWindow(locator1 = "title=Log into Facebook | Facebook");

		Type(locator1 = "FacebookLogin#LOGIN_EMAIL_FIELD", value1 = "${facebookEmail}");

		Type(
			locator1 = "FacebookLogin#LOGIN_PASSWORD_FIELD",
			value1 = "${facebookPassword}"
		);

		Click(locator1 = "FacebookLogin#LOGIN_BUTTON");

		SelectWindow.selectWindowTopNoSPARefresh();

		if (IsElementPresent.pauseIsElementPresent(locator1 = "TextInput#EMAIL_ADDRESS")) {
			SelectWindow.selectWindowNoSPARefresh(
				locator1 = "title=Terms of Use - ${siteName}"
			);

			if (IsElementPresent.pauseIsElementPresent(locator1 = "Button#I_AGREE", value1 = "I Agree")) {
				AssertClick(locator1 = "Button#I_AGREE", value1 = "I Agree");
			}

			if (IsElementPresent.pauseIsElementPresent(locator1 = "TextInput#PASSWORD")) {
				if ((isSet(syntaxCheckingEnabled)) && ("${syntaxCheckingEnabled}" == "true")) {
					Type(locator1 = "TextInput#PASSWORD", value1 = "${resetPassword}");

					Type(locator1 = "TextInput#ENTER_AGAIN", value1 = "${resetPassword}");
				}
				else {
					Type(locator1 = "TextInput#PASSWORD", value1 = "test");

					Type(locator1 = "TextInput#ENTER_AGAIN", value1 = "test");
				}

				Button.clickSave();
			}

			if (IsElementPresent.pauseIsElementPresent(locator1 = "TextInput#ANSWER")) {
				Type(locator1 = "TextInput#ANSWER", value1 = "test");

				KeyPress(locator1 = "TextInput#ANSWER", value1 = "\RETURN");
			}
		}

		SelectWindow.selectWindowNoSPARefresh(locator1 = "title=Welcome - ${siteName}");

		AssertElementPresent(locator1 = "UserBar#USER_AVATAR_IMAGE");
	}

	macro loginUserWithGoogleSSOEnabledPG {
		GoogleLogin.accountSignIn(
			userEmailAddress = "${userEmailAddress}",
			userPassword = "${userPassword}"
		);

		SelectWindow.selectWindowTopNoSPARefresh();

		if (IsElementPresent.pauseIsElementPresent(locator1 = "TextInput#EMAIL_ADDRESS")) {
			SelectWindow.selectWindowNoSPARefresh(locator1 = "title=Terms of Use");

			GoogleLogin.acceptConditions();
		}

		Pause(locator1 = "5000");

		AssertElementPresent(locator1 = "UserBar#USER_AVATAR_IMAGE");
	}

	@description = "Log into Liferay Portal as ${userEmailAddress} using the password ${password} with OpenID authentication enabled."
	macro loginUserWithOpenIDEnabledPG {
		Navigator.openURL();

		AssertClick(locator1 = "UserBar#USER_SIGN_IN", value1 = "Sign In");

		AssertClick(locator1 = "Link#OPENID", value1 = "OpenID");

		Type(
			locator1 = "SignInOpenID#OPENID_FIELD",
			value1 = "http://${openIDUsername}.openid.org.cn"
		);

		Click(locator1 = "Button#SIGN_IN");

		Pause(locator1 = "3000");

		if (IsElementNotPresent(locator1 = "TextInput#LOGIN_USER_NAME")) {
			Navigator.openURL();

			AssertClick(locator1 = "UserBar#USER_SIGN_IN", value1 = "Sign In");

			AssertClick(locator1 = "Link#OPENID", value1 = "OpenID");

			Type(
				locator1 = "SignInOpenID#OPENID_FIELD",
				value1 = "http://${openIDUsername}.openid.org.cn"
			);

			Click(locator1 = "Button#SIGN_IN");

			Pause(locator1 = "3000");
		}

		Type(locator1 = "TextInput#LOGIN_USER_NAME", value1 = "${openIDUsername}");

		Type(
			locator1 = "TextInput#EXTERNAL_PASSWORD_FIELD",
			value1 = "${openIDPassword}"
		);

		AssertClick(locator1 = "OpenIDLogin#LOGIN_BUTTON", value1 = "Login");

		if (IsElementPresent(locator1 = "OpenIDLogin#LOGIN_ALLOW_ONCE_BUTTON")) {
			var key_userName = "${userName}";

			Click(locator1 = "OpenIDLogin#LOGIN_PERSONA");

			AssertClick(
				locator1 = "OpenIDLogin#LOGIN_ALLOW_ONCE_BUTTON",
				value1 = "Allow Once"
			);
		}

		if (IsElementPresent.pauseIsElementPresent(locator1 = "Button#I_AGREE", value1 = "I Agree")) {
			AssertClick(locator1 = "Button#I_AGREE", value1 = "I Agree");
		}

		if (IsElementPresent.pauseIsElementPresent(locator1 = "TextInput#PASSWORD")) {
			if ((isSet(syntaxCheckingEnabled)) && ("${syntaxCheckingEnabled}" == "true")) {
				Type(locator1 = "TextInput#PASSWORD", value1 = "${resetPassword}");

				Type(locator1 = "TextInput#ENTER_AGAIN", value1 = "${resetPassword}");
			}
			else {
				Type(locator1 = "TextInput#PASSWORD", value1 = "test");

				Type(locator1 = "TextInput#ENTER_AGAIN", value1 = "test");
			}

			Button.clickSave();
		}

		if (IsElementPresent.pauseIsElementPresent(locator1 = "TextInput#ANSWER")) {
			Type(locator1 = "TextInput#ANSWER", value1 = "test");

			Button.clickSave();
		}

		AssertElementPresent(locator1 = "UserBar#USER_AVATAR_IMAGE");
	}

	@description = "Log into OpenAM as ${userScreenName} using the password ${password}."
	macro loginUserWithOpenSSOEnabledPG {
		Navigator.openSpecificURL(url = "${hostsURL}");

		AssertClick(locator1 = "UserBar#USER_SIGN_IN", value1 = "Sign In");

		Type(locator1 = "TextInput#USER_NAME", value1 = "${userScreenName}");

		Type(locator1 = "OpenAM#PASSWORD", value1 = "${password}");

		Click(locator1 = "OpenAM#LOG_IN");

		AssertElementPresent(locator1 = "UserBar#USER_AVATAR_IMAGE");
	}

	macro logoutAndLoginPG {
		Navigator.openURL();

		ProductMenuHelper.expandPanel(panel = "User");

		if (IsTextNotEqual(locator1 = "ControlMenu#USER_NAME", value1 = "${userLoginFullName}")) {
			User.logoutPG();

			User.loginPG(
				authenticationMethod = "${authenticationMethod}",
				nodePort = "${nodePort}",
				userEmailAddress = "${userLoginEmailAddress}",
				userScreenName = "${userScreenName}"
			);
		}
	}

	@description = "Log out of Liferay Portal."
	macro logoutPG {
		if (isSet(nodePort)) {
			Navigator.openSpecificURL(url = "http://localhost:${nodePort}");
		}
		else {
			if (isSet(specificURL)) {
				Navigator.openSpecificURL(url = "${specificURL}");
			}
			else {
				Navigator.openURL();
			}
		}

		UserBar.signOut();
	}

	@description = "Log out of Liferay Portal."
	macro logoutUserPG {
		Navigator.openURL();

		UserBar.signOut();
	}

	macro resetPassword {
		if (IsElementPresent.pauseIsElementPresent(locator1 = "TextInput#PASSWORD")) {
			if ((isSet(syntaxCheckingEnabled)) && ("${syntaxCheckingEnabled}" == "true")) {
				Type(locator1 = "TextInput#PASSWORD", value1 = "${resetPassword}");

				Type(locator1 = "TextInput#ENTER_AGAIN", value1 = "${resetPassword}");
			}
			else {
				if ((isSet(setupWizardEnabled)) && ("${setupWizardEnabled}" == "true")) {
					Type(locator1 = "TextInput#PASSWORD", value1 = "test2");

					Type(locator1 = "TextInput#ENTER_AGAIN", value1 = "test2");
				}
				else {
					Type(locator1 = "TextInput#PASSWORD", value1 = "test");

					Type(locator1 = "TextInput#ENTER_AGAIN", value1 = "test");
				}
			}

			Button.clickSave();

			AssertElementNotPresent(locator1 = "TextInput#ENTER_AGAIN");
		}
	}

	macro searchCP {
		Pause(locator1 = "5000");

		Type(locator1 = "TextInput#SEARCH", value1 = "${searchTerm}");

		Click(locator1 = "Button#SUBMIT");

		Pause(locator1 = "5000");
	}

	macro setPasswordByResetLink {
		Type(
			locator1 = "UsersAndOrganizationsEditUser#PASSWORD_NEW_PASSWORD_FIELD",
			value1 = "${newPassword1}"
		);

		Type(
			locator1 = "UsersAndOrganizationsEditUser#PASSWORD_ENTER_AGAIN_FIELD",
			value1 = "${newPassword2}"
		);

		Button.clickSave();

		if (!("${newPassword1}" == "${newPassword2}")) {
			AssertTextEquals.assertPartialText(
				locator1 = "TextInput#REQUIRED_ALERT",
				value1 = "Please enter the same value again."
			);
		}
		else if (!(isSet(invalidateLength))) {
			User.acceptEndUserLicenseAgreement();

			User.answerPasswordReminder();
		}
		else if ("${invalidateLength}" == "Short") {
			AssertTextEquals.assertPartialText(
				locator1 = "Message#ERROR",
				value1 = "That password is too short. Please make sure your password is at least 6 characters long."
			);
		}
	}

	macro signInPG {
		AssertClick(locator1 = "UserBar#USER_SIGN_IN", value1 = "Sign In");

		Type(locator1 = "TextInput#EMAIL_ADDRESS", value1 = "${userEmailAddress}");

		Type(locator1 = "TextInput#PASSWORD", value1 = "${emailPassword}");

		Check(locator1 = "Checkbox#REMEMBER_ME");

		AssertClick(locator1 = "Button#SIGN_IN", value1 = "Sign In");

		if (IsElementPresent.pauseIsElementPresent(locator1 = "Button#I_AGREE", value1 = "I Agree")) {
			AssertClick(locator1 = "Button#I_AGREE", value1 = "I Agree");
		}

		AssertTextEquals(
			locator1 = "Message#INFO",
			value1 = "Please enter your verification code."
		);

		Type(
			locator1 = "SignInCreateAccount#EMAIL_VERIFICATION_CODE_FIELD",
			value1 = "${emailVerification}"
		);

		AssertClick(locator1 = "Button#VERIFY", value1 = "Verify");

		if (IsElementPresent.pauseIsElementPresent(locator1 = "TextInput#PASSWORD")) {
			if ((isSet(syntaxCheckingEnabled)) && ("${syntaxCheckingEnabled}" == "true")) {
				Type(locator1 = "TextInput#PASSWORD", value1 = "${resetPassword}");

				Type(locator1 = "TextInput#ENTER_AGAIN", value1 = "${resetPassword}");
			}
			else {
				Type(locator1 = "TextInput#PASSWORD", value1 = "test");

				Type(locator1 = "TextInput#ENTER_AGAIN", value1 = "test");
			}

			Button.clickSave();
		}

		if (IsElementPresent.pauseIsElementPresent(locator1 = "TextInput#ANSWER")) {
			Type(locator1 = "TextInput#ANSWER", value1 = "test");

			Button.clickSave();
		}
	}

	macro tearDownCP {
		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations"
		);

		Click(locator1 = "Dropdown#FILTER");

		var key_filterValue = "Active";

		AssertClick(locator1 = "Dropdown#FILTER_VALUES", value1 = "Active");

		if (IsElementPresent(locator1 = "ContentRow#ENTRY_CONTENT_ROW_1")) {
			Check.checkAll(locator1 = "Checkbox#SELECT_ALL");

			AssertClickNoError(locator1 = "Button#DEACTIVATE", value1 = "Deactivate");

			Confirm(value1 = "Are you sure you want to deactivate the selected users?");

			Alert.viewSuccessMessage();
		}

		Click(locator1 = "Dropdown#FILTER");

		var key_filterValue = "Inactive";

		AssertClick(locator1 = "Dropdown#FILTER_VALUES", value1 = "Inactive");

		if (IsElementPresent(locator1 = "ContentRow#ENTRY_CONTENT_ROW_1")) {
			Check.checkAll(locator1 = "Checkbox#SELECT_ALL");

			Click(locator1 = "Icon#DELETE");

			Confirm(
				value1 = "Are you sure you want to permanently delete the selected users?"
			);

			Alert.viewSuccessMessage();
		}
	}

	macro unlockUserAccount {
		Pause(locator1 = "1000");

		var key_userScreenName = "${userScreenName}";

		AssertTextEquals(
			locator1 = "UsersAndOrganizations#USER_TABLE_SCREEN_NAME_LINK",
			value1 = "${userScreenName}"
		);

		AssertClick(
			locator1 = "UsersAndOrganizations#USER_TABLE_SCREEN_NAME_LINK",
			value1 = "${userScreenName}"
		);

		AssertTextEquals(
			locator1 = "Message#ERROR_3",
			value1 = "This user account has been locked due to excessive failed login attempts."
		);

		AssertClick(locator1 = "Button#UNLOCK", value1 = "Unlock");

		Alert.viewSuccessMessage();
	}

	macro viewCaptchaPG {
		if ("${captchaType}" == "captcha") {
			AssertElementPresent.assertElementPresent(
				locator1 = "SignInCreateAccount#CAPTCHA_IMAGE"
			);
		}
		else if ("${captchaType}" == "recaptcha") {
			SelectFrame(locator1 = "IFrame#RECAPTCHA");

			AssertElementPresent.assertElementPresent(
				locator1 = "SignInCreateAccount#RECAPTCHA_LABEL"
			);
		}
	}

	macro viewCP {
		if ("${userEmailAddressVariation}" == "At") {
			Pause(locator1 = "1000");

			Type(locator1 = "NavBar#BASIC_SEARCH_FIELD", value1 = "${userEmailAddress}");

			Click(locator1 = "Button#SUBMIT");

			AssertTextEquals(
				locator1 = "Message#EMPTY_INFO",
				value1 = "No users were found."
			);
		}
		else if ("${userEmailAddressVariation}" == "Period") {
			Pause(locator1 = "1000");

			Type(locator1 = "NavBar#BASIC_SEARCH_FIELD", value1 = "${userEmailAddress}");

			Click(locator1 = "Button#SUBMIT");

			AssertTextEquals(
				locator1 = "Message#EMPTY_INFO",
				value1 = "No users were found."
			);
		}
		else if ("${userScreenNameVariation}" == "Invalid") {
			Pause(locator1 = "1000");

			Type(locator1 = "NavBar#BASIC_SEARCH_FIELD", value1 = "${userScreenName}");

			Click(locator1 = "Button#SUBMIT");

			AssertTextEquals(
				locator1 = "Message#EMPTY_INFO",
				value1 = "No users were found."
			);
		}
		else {
			var key_userScreenName = "${userScreenName}";

			Pause(locator1 = "1000");

			AssertTextEquals(
				locator1 = "UsersAndOrganizations#USER_TABLE_NAME",
				value1 = "${userFirstName} ${userLastName}"
			);

			AssertTextEquals(
				locator1 = "UsersAndOrganizations#USER_TABLE_SCREEN_NAME_LINK",
				value1 = "${userScreenName}"
			);

			AssertClick(
				locator1 = "UsersAndOrganizations#USER_TABLE_NAME",
				value1 = "${userFirstName} ${userLastName}"
			);

			AssertTextEquals(
				locator1 = "UsersAndOrganizationsEditUser#DETAILS_SCREEN_NAME_FIELD",
				value1 = "${userScreenName}"
			);

			AssertTextEquals(
				locator1 = "TextInput#EMAIL_ADDRESS",
				value1 = "${userEmailAddress}"
			);

			AssertTextEquals(
				locator1 = "UsersAndOrganizationsEditUser#DETAILS_FIRST_NAME_FIELD",
				value1 = "${userFirstName}"
			);

			AssertTextEquals(
				locator1 = "UsersAndOrganizationsEditUser#DETAILS_LAST_NAME_FIELD",
				value1 = "${userLastName}"
			);
		}
	}

	macro viewLoggedInPG {
		ProductMenuHelper.expandPanel(panel = "Control Panel");

		if ("${authenticationMethod}" == "By Screen Name") {
			AssertElementNotPresent(locator1 = "TextInput#SCREEN_NAME");
		}
		else {
			AssertElementNotPresent(locator1 = "TextInput#EMAIL_ADDRESS");
		}

		AssertElementNotPresent(locator1 = "TextInput#PASSWORD");

		AssertElementNotPresent(locator1 = "Checkbox#REMEMBER_ME");

		AssertElementNotPresent(locator1 = "Button#SIGN_IN");

		AssertTextEquals(
			locator1 = "ControlMenu#USER_NAME",
			value1 = "${userFirstName}"
		);
	}

	macro viewLoggedOutPG {
		AssertElementNotPresent(locator1 = "UserBar#USER_AVATAR_IMAGE");

		AssertElementNotPresent(locator1 = "ControlMenu#ADD");

		AssertTextEquals(locator1 = "UserBar#USER_SIGN_IN", value1 = "Sign In");
	}

	macro viewLoggedOutWithCASEnabledPG {
		AssertTextEquals(
			locator1 = "CAS#APP_NAME_HEADER",
			value1 = "Central Authentication Service (CAS)"
		);

		AssertTextEquals(
			locator1 = "CAS#LOGOUT_SUCCESSFUL_HEADER",
			value1 = "Logout successful"
		);

		AssertTextEquals(
			locator1 = "CAS#LOGOUT_SUCCESSFUL_MESSAGE_1",
			value1 = "You have successfully logged out of the Central Authentication Service."
		);

		AssertTextEquals(
			locator1 = "CAS#LOGOUT_SUCCESSFUL_MESSAGE_2",
			value1 = "For security reasons, exit your web browser."
		);
	}

	macro viewLoginPG {
		if ("${authenticationMethod}" == "By Screen Name") {
			AssertElementPresent(locator1 = "TextInput#SCREEN_NAME");
		}
		else {
			AssertElementPresent(locator1 = "TextInput#EMAIL_ADDRESS");
		}

		AssertElementPresent(locator1 = "TextInput#PASSWORD");

		AssertElementPresent(locator1 = "Checkbox#REMEMBER_ME");

		AssertTextEquals(locator1 = "Button#SIGN_IN", value1 = "Sign In");
	}

	macro viewNoUsersFoundCP {
		AssertTextEquals(
			locator1 = "Message#EMPTY_INFO",
			value1 = "No users were found."
		);
	}

	macro viewUserInfomationOrganizationSitesCP {
		Panel.expandPanel(panelHeading = "Sites");

		var key_siteName = "${siteName}";

		AssertTextEquals(
			locator1 = "UsersAndOrganizationsEditUser#SITES_TABLE_NAME",
			value1 = "${orgName}"
		);
	}

	macro viewUserInfomationRolesCP {
		Panel.expandPanel(panelHeading = "Roles");

		var key_roleName = "${roleName}";

		if ("${roleType}" == "Inherited Site Roles") {
			AssertTextEquals(
				locator1 = "UsersAndOrganizationsEditUser#ROLES_INHERITED_SITE_ROLES_TABLE_TITLE",
				value1 = "${roleName}"
			);
		}
		else {
			AssertTextEquals(
				locator1 = "Permissions#CONTENT_PERMISSIONS_ROLE_NAME",
				value1 = "${roleName}"
			);
		}
	}

	macro viewUserInfomationSitesCP {
		Panel.expandPanel(panelHeading = "Sites");

		var key_siteName = "${siteName}";

		AssertTextEquals(
			locator1 = "UsersAndOrganizationsEditUser#SITES_TABLE_NAME",
			value1 = "${siteName}"
		);
	}

	macro viewUserInfomationUserGroupsCP {
		Panel.expandPanel(panelHeading = "User Groups");

		var key_userGroupName = "${userGroupName}";

		AssertTextEquals(
			locator1 = "UsersAndOrganizationsEditUser#USER_GROUPS_TABLE_NAME",
			value1 = "${userGroupName}"
		);
	}

	macro viewUserMiscellaneousCustomFieldsCP {
		AssertClick(
			locator1 = "UsersAndOrganizations#MISCELLANEOUS",
			value1 = "Miscellaneous"
		);

		Panel.expandPanel(panelHeading = "Custom Fields");

		var key_customFieldName = "${customFieldName}";

		AssertTextEquals(
			locator1 = "UsersAndOrganizationsEditUser#CUSTOM_FIELDS_LABEL",
			value1 = "${customFieldName}"
		);

		if ("${customFieldName}" == "Boolean") {
			AssertSelectedLabel(
				locator1 = "UsersAndOrganizationsEditUser#CUSTOM_FIELDS_SELECT",
				value1 = "${customFieldValue}"
			);
		}
	}

	macro viewUserSiteCP {
		Pause(locator1 = "3000");

		Panel.expandPanel(panelHeading = "Sites");

		var key_siteName = "${siteName}";

		AssertTextEquals(
			locator1 = "UsersAndOrganizationsEditUser#SITES_TABLE_NAME",
			value1 = "${siteName}"
		);
	}
}